
// File generated by darts version R-2021.03#6beb14dd34#220609, Sun Jun 30 17:03:56 2024
// Copyright 2014-2021 Synopsys, Inc. All rights reserved.
// darts -v -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib -d -h -I/home/xilinx/software/Vitis/2022.2/aietools/include -I../common -I/home/users/edoardo.dalessio/code/av_omega/VersalAutomationTemplate/aie/. -I/home/users/edoardo.dalessio/code/av_omega/VersalAutomationTemplate/aie/./src -I/home/users/edoardo.dalessio/code/av_omega/VersalAutomationTemplate/aie/../common -I/home/users/edoardo.dalessio/code/av_omega/VersalAutomationTemplate/aie/src -Isrc -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIEARCH__=10 -DDEPLOYMENT_ELF=1 -DAIE_OPTION_SCALAR_FLOAT_ON_VECTOR -D__tct_tgt__=220608 -L +Ihex +nanno +u ../Release/24_0 me

// Release: ipp R-2021.03-TGT-220608
.label __AIE_ARCH_MODEL_VERSION__10022200__inlined__1__me_basic___main_init_
.label _main_init
.function _main_init _main_init
.src_ref 0 "me_basic.c" 87 first
.src_ref 0 "me_basic.c" 94 4 first
.function_start
	     0      "00001011" // 	NOP;                                                                                                MOV.u20 sp, #229408 /* MW 4 */
	     1      "00000010" // /* MW 3 */
	     2      "01100100" // /* MW 2 */
	     3      "01001110" // /* MW 1 */
.src_ref 0 "me_basic.c" 88 first
	     4      "00000011" // 	NOP;                                                                  MOV.s12 r12, #0 /* MW 4 */
	     5      "11000000" // /* MW 3 */
	     6      "00000011" // /* MW 2 */
	     7      "01000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 89 first
	     8      "00100001" // 	MOV mc0, r12 /* MW 2 */
	     9      "11001010" // /* MW 1 */
.src_ref 0 "me_basic.c" 90 first
	    10      "01100001" // 	MOV mc1, r12 /* MW 2 */
	    11      "11001010" // /* MW 1 */
	    12      "11110111" // 	                                        NOP;                                                        MOV.u20 p6, #1048572;         NOP /* MW 8 */
	    13      "11000111" // /* MW 7 */
	    14      "11111111" // /* MW 6 */
	    15      "10111011" // /* MW 5 */
	    16      "01111111" // /* MW 4 */
	    17      "00000000" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "10000000" // /* MW 1 */
	    20      "11110111" // 	                                        NOP;                                                        J #112;                       NOP /* MW 8 */
	    21      "00000111" // /* MW 7 */
	    22      "00000111" // /* MW 6 */
	    23      "00000000" // /* MW 5 */
	    24      "10100000" // /* MW 4 */
	    25      "00000000" // /* MW 3 */
	    26      "00000000" // /* MW 2 */
	    27      "10000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 41
.delay_slot
	    28      "11110111" // 	                                        NOP;                                                        MOV.u20 r11, #0;              NOP /* MW 8 */
	    29      "00000111" // /* MW 7 */
	    30      "00000000" // /* MW 6 */
	    31      "11101100" // /* MW 5 */
	    32      "01000000" // /* MW 4 */
	    33      "00000000" // /* MW 3 */
	    34      "00000000" // /* MW 2 */
	    35      "10000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	    36      "11110101" // 	MOV p7, p0 /* MW 2 */
	    37      "10100010" // /* MW 1 */
.src_ref 0 "me_basic.c" 96 6
.src_ref 0 "me_basic.c" 97 6
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	    38      "01110111" // 	NOP;                                                                  MOV.s12 r12, #0;              MOV r10, r6 /* MW 8 */
	    39      "01111000" // /* MW 7 */
	    40      "00000000" // /* MW 6 */
	    41      "10001000" // /* MW 5 */
	    42      "01101110" // /* MW 4 */
	    43      "00000111" // /* MW 3 */
	    44      "00000000" // /* MW 2 */
	    45      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 96 6 first
.delay_slot
	    46      "00100001" // 	MOV md0, r12 /* MW 2 */
	    47      "11001011" // /* MW 1 */
.src_ref 0 "me_basic.c" 97 6 first
.delay_slot
	    48      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          MOV md1, r12;                 NOP;                                    NOP /* MW 16 */
	    49      "00000000" // /* MW 15 */
	    50      "00000000" // /* MW 14 */
	    51      "00000000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "01000000" // /* MW 10 */
	    55      "11001011" // /* MW 9 */
	    56      "00000010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.src_ref 0 "me_basic.c" 70 13 first
.loop_nesting 1
	    64      "00110111" // 	LDA cb0, [p6], #-4;                     NOP;                          NOP /* MW 8 */
	    65      "00000000" // /* MW 7 */
	    66      "00000000" // /* MW 6 */
	    67      "00000000" // /* MW 5 */
	    68      "00000000" // /* MW 4 */
	    69      "10000000" // /* MW 3 */
	    70      "10111111" // /* MW 2 */
	    71      "01000000" // /* MW 1 */
	    72      "00000001" // 	NOP /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOP /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOP /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOP /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOP /* MW 2 */
	    81      "00000000" // /* MW 1 */
	    82      "00000001" // 	NOP /* MW 2 */
	    83      "00000000" // /* MW 1 */
	    84      "00000001" // 	NOP /* MW 2 */
	    85      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 70 16
.no_stack_arguments
	    86      "01000001" // 	JAL cb0 /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOP /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOP /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOP /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOP /* MW 2 */
	    95      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    96      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	    97      "00000000" // /* MW 15 */
	    98      "00000000" // /* MW 14 */
	    99      "00000000" // /* MW 13 */
	   100      "00000000" // /* MW 12 */
	   101      "00000000" // /* MW 11 */
	   102      "00000000" // /* MW 10 */
	   103      "00000000" // /* MW 9 */
	   104      "00000000" // /* MW 8 */
	   105      "00000000" // /* MW 7 */
	   106      "00000000" // /* MW 6 */
	   107      "00000000" // /* MW 5 */
	   108      "00000000" // /* MW 4 */
	   109      "00000000" // /* MW 3 */
	   110      "00000000" // /* MW 2 */
	   111      "00000000" // /* MW 1 */
.label __ll1__main_init
.return_address
	   112      "00110111" // 	PADDA [p6], #4;                         NOP;                          NOP /* MW 8 */
	   113      "00000000" // /* MW 7 */
	   114      "00000000" // /* MW 6 */
	   115      "00000000" // /* MW 5 */
	   116      "00000000" // /* MW 4 */
	   117      "10000000" // /* MW 3 */
	   118      "10100011" // /* MW 2 */
	   119      "00001000" // /* MW 1 */
	   120      "00000001" // 	NOP /* MW 2 */
	   121      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 41
	   122      "11000101" // 	MOV r12, p6 /* MW 2 */
	   123      "10111011" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 41 first
	   124      "00000011" // 	NOP;                                                                  NE r12, r12, r11 /* MW 4 */
	   125      "11000000" // /* MW 3 */
	   126      "10111100" // /* MW 2 */
	   127      "00111001" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 8
	   128      "11110111" // 	                                        NOP;                                                        BNEZ r12,#64;                 NOP /* MW 8 */
	   129      "00000111" // /* MW 7 */
	   130      "00000100" // /* MW 6 */
	   131      "10000000" // /* MW 5 */
	   132      "10010001" // /* MW 4 */
	   133      "00000000" // /* MW 3 */
	   134      "00000000" // /* MW 2 */
	   135      "10000000" // /* MW 1 */
.delay_slot
	   136      "00000011" // 	NOP;                                    PADDS [p6], #-4 /* MW 4 */
	   137      "11110000" // /* MW 3 */
	   138      "00010111" // /* MW 2 */
	   139      "10100000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOP /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOP /* MW 2 */
	   143      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   144      "00000001" // 	NOP /* MW 2 */
	   145      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   146      "00000001" // 	NOP /* MW 2 */
	   147      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11 first
.no_stack_arguments
.loop_nesting 0
	   148      "11110111" // 	                                        NOP;                                                        JAL #272;                     NOP /* MW 8 */
	   149      "00000111" // /* MW 7 */
	   150      "00010001" // /* MW 6 */
	   151      "00100000" // /* MW 5 */
	   152      "10100000" // /* MW 4 */
	   153      "00000000" // /* MW 3 */
	   154      "00000000" // /* MW 2 */
	   155      "10000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	   156      "01100101" // 	MOV r6, r10 /* MW 2 */
	   157      "11101011" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	   158      "10000101" // 	MOV p0, p7 /* MW 2 */
	   159      "10111110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "00000001" // 	NOP /* MW 2 */
	   161      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   162      "00000001" // 	NOP /* MW 2 */
	   163      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   164      "00011111" // 	NOP;                NOP;                NOP;                          NOP;                          NOP /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 76 4 first
.return_address
.no_stack_arguments
	   176      "11110111" // 	                                        NOP;                                                        JAL #9696;                    NOP /* MW 8 */
	   177      "00000111" // /* MW 7 */
	   178      "01011110" // /* MW 6 */
	   179      "00100010" // /* MW 5 */
	   180      "10100000" // /* MW 4 */
	   181      "00000000" // /* MW 3 */
	   182      "00000000" // /* MW 2 */
	   183      "10000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 76 4
.delay_slot
	   184      "11110111" // 	                                        NOP;                                                        MOV.u20 p0, #0;               NOP /* MW 8 */
	   185      "00000111" // /* MW 7 */
	   186      "00000000" // /* MW 6 */
	   187      "10100000" // /* MW 5 */
	   188      "01000000" // /* MW 4 */
	   189      "00000000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   192      "00000001" // 	NOP /* MW 2 */
	   193      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   194      "00000001" // 	NOP /* MW 2 */
	   195      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   196      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   197      "00000000" // /* MW 3 */
	   198      "00000000" // /* MW 2 */
	   199      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   200      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   201      "00000000" // /* MW 7 */
	   202      "00000000" // /* MW 6 */
	   203      "00000000" // /* MW 5 */
	   204      "00000000" // /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   208      "00000001" // 	NOP /* MW 2 */
	   209      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   210      "00000001" // 	NOP /* MW 2 */
	   211      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   212      "00000001" // 	NOP /* MW 2 */
	   213      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   214      "00000001" // 	NOP /* MW 2 */
	   215      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   216      "00000001" // 	NOP /* MW 2 */
	   217      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   218      "00000001" // 	NOP /* MW 2 */
	   219      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   220      "00000001" // 	NOP /* MW 2 */
	   221      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   222      "00000001" // 	NOP /* MW 2 */
	   223      "00000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 61 4 first
	   224      "00000011" // 	NOP;                                                                  EVENT #2 /* MW 4 */
	   225      "00100000" // /* MW 3 */
	   226      "00000000" // /* MW 2 */
	   227      "00000100" // /* MW 1 */
.swstall chess_separator_scheduler
	   228      "00000001" // 	NOP /* MW 2 */
	   229      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   230      "00000001" // 	NOP /* MW 2 */
	   231      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   232      "00000001" // 	NOP /* MW 2 */
	   233      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   234      "00000001" // 	NOP /* MW 2 */
	   235      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   236      "00000001" // 	NOP /* MW 2 */
	   237      "00000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 62 4 first
.swstall for_chess_exit
.exit
	   238      "00000001" // 	NOP /* MW 2 */
	   239      "00000000" // /* MW 1 */
.label TGT_F_main_init_240
.src_ref 1 "stdlib.h" 63 4 first
.loop_nesting 1
	   240      "11110111" // 	                                        NOP;                                                        J #240;                       NOP /* MW 8 */
	   241      "00000111" // /* MW 7 */
	   242      "00001111" // /* MW 6 */
	   243      "00000000" // /* MW 5 */
	   244      "10100000" // /* MW 4 */
	   245      "00000000" // /* MW 3 */
	   246      "00000000" // /* MW 2 */
	   247      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   248      "00000001" // 	NOP /* MW 2 */
	   249      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   250      "00000001" // 	NOP /* MW 2 */
	   251      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   252      "00000001" // 	NOP /* MW 2 */
	   253      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   254      "00000001" // 	NOP /* MW 2 */
	   255      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   256      "00000001" // 	NOP /* MW 2 */
.label _main_init__end
	   257      "00000000" // /* MW 1 */
.label _main___func_begin0
.label _main
.function main
.src_ref 2 "24_0.cc" 26
.src_ref 2 "24_0.cc" 26 first
.src_ref 2 "24_0.cc" 27 17
.function_start
	   272      "00011111" // 	NOP;                MOV.s9 r0, #0;      NOP;                          MOV.s12 m0, #32;              MOV p0, p7 /* MW 12 */
	   273      "11111010" // /* MW 11 */
	   274      "00000110" // /* MW 10 */
	   275      "00001000" // /* MW 9 */
	   276      "00000010" // /* MW 8 */
	   277      "00000001" // /* MW 7 */
	   278      "00000000" // /* MW 6 */
	   279      "00000000" // /* MW 5 */
	   280      "11000000" // /* MW 4 */
	   281      "00010000" // /* MW 3 */
	   282      "00000000" // /* MW 2 */
	   283      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 26
.src_ref 2 "24_0.cc" 27 17
	   284      "00111111" // 	PADDA [sp], m0;     NOP;                NOP;                                                        MOV.u20 p7, #229376;          NOP /* MW 12 */
	   285      "00000000" // /* MW 11 */
	   286      "11000000" // /* MW 10 */
	   287      "11101011" // /* MW 9 */
	   288      "00000100" // /* MW 8 */
	   289      "00000000" // /* MW 7 */
	   290      "00000000" // /* MW 6 */
	   291      "00010000" // /* MW 5 */
	   292      "00000000" // /* MW 4 */
	   293      "00000000" // /* MW 3 */
	   294      "10010000" // /* MW 2 */
	   295      "00001000" // /* MW 1 */
.src_ref 2 "24_0.cc" 27 17 first
.src_ref 2 "24_0.cc" 53
	   296      "11110111" // 	                                        ST r0, [p7], #4;              NOP;                          MOV r12, lr /* MW 8 */
	   297      "10111000" // /* MW 7 */
	   298      "00000010" // /* MW 6 */
	   299      "00000001" // /* MW 5 */
	   300      "00000000" // /* MW 4 */
	   301      "11110000" // /* MW 3 */
	   302      "00101000" // /* MW 2 */
	   303      "01011100" // /* MW 1 */
.src_ref 2 "24_0.cc" 46 24
.src_ref 2 "24_0.cc" 50 21
	   304      "00111111" // 	MOV.s10 r4, #0;     NOP;                NOP;                                                        ST.SPIL r4, [sp, #-4];        NOP /* MW 12 */
	   305      "11000100" // /* MW 11 */
	   306      "11111111" // /* MW 10 */
	   307      "01001111" // /* MW 9 */
	   308      "00001111" // /* MW 8 */
	   309      "00000000" // /* MW 7 */
	   310      "00000000" // /* MW 6 */
	   311      "00010000" // /* MW 5 */
	   312      "00000000" // /* MW 4 */
	   313      "00000000" // /* MW 3 */
	   314      "00000000" // /* MW 2 */
	   315      "00111100" // /* MW 1 */
	   316      "11110111" // 	                                        NOP;                                                        ST.SPIL r11, [sp, #-8];       NOP /* MW 8 */
	   317      "01000111" // /* MW 7 */
	   318      "11111000" // /* MW 6 */
	   319      "11111111" // /* MW 5 */
	   320      "11111011" // /* MW 4 */
	   321      "00000000" // /* MW 3 */
	   322      "00000000" // /* MW 2 */
	   323      "10000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 53
	   324      "10011111" // 	NOP;                NOP;                ST p0, [sp, #-12];            NOP;                          MOV cb2, r12 /* MW 12 */
	   325      "11000100" // /* MW 11 */
	   326      "00000111" // /* MW 10 */
	   327      "00000000" // /* MW 9 */
	   328      "00000000" // /* MW 8 */
	   329      "11111010" // /* MW 7 */
	   330      "01000111" // /* MW 6 */
	   331      "00001011" // /* MW 5 */
	   332      "00000000" // /* MW 4 */
	   333      "00000000" // /* MW 3 */
	   334      "00000000" // /* MW 2 */
	   335      "00000000" // /* MW 1 */
.label TGT_F_main_64
.src_ref 2 "24_0.cc" 35 27 first
.loop_nesting 1
	   336      "00110111" // 	LDA r11, [p7], #-4;                     NOP;                          NOP /* MW 8 */
	   337      "00000000" // /* MW 7 */
	   338      "00000000" // /* MW 6 */
	   339      "00000000" // /* MW 5 */
	   340      "00000000" // /* MW 4 */
	   341      "11000000" // /* MW 3 */
	   342      "10111111" // /* MW 2 */
	   343      "01111011" // /* MW 1 */
	   344      "00000001" // 	NOP /* MW 2 */
	   345      "00000000" // /* MW 1 */
	   346      "00000001" // 	NOP /* MW 2 */
	   347      "00000000" // /* MW 1 */
	   348      "00000001" // 	NOP /* MW 2 */
	   349      "00000000" // /* MW 1 */
	   350      "00000001" // 	NOP /* MW 2 */
	   351      "00000000" // /* MW 1 */
	   352      "00000001" // 	NOP /* MW 2 */
	   353      "00000000" // /* MW 1 */
	   354      "00000001" // 	NOP /* MW 2 */
	   355      "00000000" // /* MW 1 */
	   356      "00000001" // 	NOP /* MW 2 */
	   357      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 37 2 first
.src_ref 2 "24_0.cc" 37 9 first
	   358      "11110111" // 	                                        NOP;                                                        BEQZ r11,#448;                NOP /* MW 8 */
	   359      "00000111" // /* MW 7 */
	   360      "00011100" // /* MW 6 */
	   361      "01100000" // /* MW 5 */
	   362      "10000001" // /* MW 4 */
	   363      "00000000" // /* MW 3 */
	   364      "00000000" // /* MW 2 */
	   365      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   366      "00000001" // 	NOP /* MW 2 */
	   367      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   368      "00000001" // 	NOP /* MW 2 */
	   369      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   370      "00000001" // 	NOP /* MW 2 */
	   371      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   372      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   373      "00000000" // /* MW 3 */
	   374      "00000000" // /* MW 2 */
	   375      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   376      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   377      "00000000" // /* MW 7 */
	   378      "00000000" // /* MW 6 */
	   379      "00000000" // /* MW 5 */
	   380      "00000000" // /* MW 4 */
	   381      "00000000" // /* MW 3 */
	   382      "00000000" // /* MW 2 */
	   383      "00000000" // /* MW 1 */
.label TGT_F_main_112
.src_ref 2 "24_0.cc" 41 4 first
.no_stack_arguments
.loop_nesting 2
	   384      "11110111" // 	                                        NOP;                                                        JAL #592;                     NOP /* MW 8 */
	   385      "00000111" // /* MW 7 */
	   386      "00100101" // /* MW 6 */
	   387      "00100000" // /* MW 5 */
	   388      "10100000" // /* MW 4 */
	   389      "00000000" // /* MW 3 */
	   390      "00000000" // /* MW 2 */
	   391      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   392      "00000001" // 	NOP /* MW 2 */
	   393      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   394      "00000001" // 	NOP /* MW 2 */
	   395      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   396      "00000001" // 	NOP /* MW 2 */
	   397      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   398      "00000001" // 	NOP /* MW 2 */
	   399      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   400      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	   401      "00000000" // /* MW 15 */
	   402      "00000000" // /* MW 14 */
	   403      "00000000" // /* MW 13 */
	   404      "00000000" // /* MW 12 */
	   405      "00000000" // /* MW 11 */
	   406      "00000000" // /* MW 10 */
	   407      "00000000" // /* MW 9 */
	   408      "00000000" // /* MW 8 */
	   409      "00000000" // /* MW 7 */
	   410      "00000000" // /* MW 6 */
	   411      "00000000" // /* MW 5 */
	   412      "00000000" // /* MW 4 */
	   413      "00000000" // /* MW 3 */
	   414      "00000000" // /* MW 2 */
	   415      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 46 24 first
.return_address
	   416      "00000011" // 	NOP;                                                                  LT r12, r4, r11 /* MW 4 */
	   417      "11000000" // /* MW 3 */
	   418      "10110100" // /* MW 2 */
	   419      "00111011" // /* MW 1 */
.src_ref 2 "24_0.cc" 46 7
	   420      "00000011" // 	NOP;                                                                  SUB r11, r11, r12 /* MW 4 */
	   421      "10110000" // /* MW 3 */
	   422      "11001011" // /* MW 2 */
	   423      "00110001" // /* MW 1 */
.src_ref 2 "24_0.cc" 37 2 first
.src_ref 2 "24_0.cc" 37 9 first
	   424      "11110111" // 	                                        NOP;                                                        BNEZ r11,#384;                NOP /* MW 8 */
	   425      "00000111" // /* MW 7 */
	   426      "00011000" // /* MW 6 */
	   427      "01100000" // /* MW 5 */
	   428      "10010001" // /* MW 4 */
	   429      "00000000" // /* MW 3 */
	   430      "00000000" // /* MW 2 */
	   431      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   432      "00000001" // 	NOP /* MW 2 */
	   433      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   434      "00000001" // 	NOP /* MW 2 */
	   435      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   436      "00000001" // 	NOP /* MW 2 */
	   437      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   438      "00000001" // 	NOP /* MW 2 */
	   439      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   440      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   441      "00000000" // /* MW 7 */
	   442      "00000000" // /* MW 6 */
	   443      "00000000" // /* MW 5 */
	   444      "00000000" // /* MW 4 */
	   445      "00000000" // /* MW 3 */
	   446      "00000000" // /* MW 2 */
	   447      "00000000" // /* MW 1 */
.label TGT_F_main_176
.swstall chess_separator_scheduler
.loop_nesting 1
	   448      "00000001" // 	NOP /* MW 2 */
	   449      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   450      "00000001" // 	NOP /* MW 2 */
	   451      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   452      "00000001" // 	NOP /* MW 2 */
	   453      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   454      "00000001" // 	NOP /* MW 2 */
	   455      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   456      "00000001" // 	NOP /* MW 2 */
	   457      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   458      "00000001" // 	NOP /* MW 2 */
	   459      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   460      "00000001" // 	NOP /* MW 2 */
	   461      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   462      "00000001" // 	NOP /* MW 2 */
	   463      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 49 2 first
	   464      "00000011" // 	NOP;                                                                  EVENT #2 /* MW 4 */
	   465      "00100000" // /* MW 3 */
	   466      "00000000" // /* MW 2 */
	   467      "00000100" // /* MW 1 */
.swstall chess_separator_scheduler
	   468      "00000001" // 	NOP /* MW 2 */
	   469      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   470      "00000001" // 	NOP /* MW 2 */
	   471      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   472      "00000001" // 	NOP /* MW 2 */
	   473      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   474      "00000001" // 	NOP /* MW 2 */
	   475      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   476      "00000001" // 	NOP /* MW 2 */
	   477      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 50 6 first
	   478      "00110111" // 	LDA r12, [p7], #4;                      NOP;                          NOP /* MW 8 */
	   479      "00000000" // /* MW 7 */
	   480      "00000000" // /* MW 6 */
	   481      "00000000" // /* MW 5 */
	   482      "00000000" // /* MW 4 */
	   483      "11000000" // /* MW 3 */
	   484      "10100011" // /* MW 2 */
	   485      "01111100" // /* MW 1 */
	   486      "00000001" // 	NOP /* MW 2 */
	   487      "00000000" // /* MW 1 */
	   488      "00000001" // 	NOP /* MW 2 */
	   489      "00000000" // /* MW 1 */
	   490      "00000001" // 	NOP /* MW 2 */
	   491      "00000000" // /* MW 1 */
	   492      "00000001" // 	NOP /* MW 2 */
	   493      "00000000" // /* MW 1 */
	   494      "00000001" // 	NOP /* MW 2 */
	   495      "00000000" // /* MW 1 */
	   496      "00000001" // 	NOP /* MW 2 */
	   497      "00000000" // /* MW 1 */
	   498      "00000001" // 	NOP /* MW 2 */
	   499      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 50 21
	   500      "00000011" // 	NOP;                                                                  GE r12, r4, r12 /* MW 4 */
	   501      "11000000" // /* MW 3 */
	   502      "11000100" // /* MW 2 */
	   503      "00111010" // /* MW 1 */
	   504      "11110111" // 	                                        NOP;                                                        BNEZ r12,#336;                NOP /* MW 8 */
	   505      "00000111" // /* MW 7 */
	   506      "00010101" // /* MW 6 */
	   507      "10000000" // /* MW 5 */
	   508      "10010001" // /* MW 4 */
	   509      "00000000" // /* MW 3 */
	   510      "00000000" // /* MW 2 */
	   511      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   512      "00000001" // 	NOP /* MW 2 */
	   513      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   514      "00000001" // 	NOP /* MW 2 */
	   515      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   516      "00000001" // 	NOP /* MW 2 */
	   517      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   518      "00000001" // 	NOP /* MW 2 */
	   519      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   520      "00000001" // 	NOP /* MW 2 */
	   521      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 53
.src_ref 2 "24_0.cc" 53
.src_ref 2 "24_0.cc" 53
.loop_nesting 0
	   522      "00011111" // 	LDA r11, [sp, #-8]; MOV.s9 r0, #0;      NOP;                          MOV.s12 m0, #-32;             MOV r12, cb2 /* MW 12 */
	   523      "00101111" // /* MW 11 */
	   524      "00000101" // /* MW 10 */
	   525      "00001000" // /* MW 9 */
	   526      "11111110" // /* MW 8 */
	   527      "00000001" // /* MW 7 */
	   528      "00000000" // /* MW 6 */
	   529      "00000000" // /* MW 5 */
	   530      "11000000" // /* MW 4 */
	   531      "10010000" // /* MW 3 */
	   532      "11111111" // /* MW 2 */
	   533      "01111011" // /* MW 1 */
.src_ref 2 "24_0.cc" 53
	   534      "01110111" // 	LDA r4, [sp, #-4];                                                    NOP;                          MOV lr, r12 /* MW 8 */
	   535      "00000000" // /* MW 7 */
	   536      "00000000" // /* MW 6 */
	   537      "01000000" // /* MW 5 */
	   538      "11000001" // /* MW 4 */
	   539      "11000010" // /* MW 3 */
	   540      "11111111" // /* MW 2 */
	   541      "01110100" // /* MW 1 */
	   542      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-12];      NOP /* MW 8 */
	   543      "11100111" // /* MW 7 */
	   544      "11111110" // /* MW 6 */
	   545      "10111111" // /* MW 5 */
	   546      "11000111" // /* MW 4 */
	   547      "00000000" // /* MW 3 */
	   548      "00000000" // /* MW 2 */
	   549      "10000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 53 first
	   550      "00110111" // 	PADDA [sp], m0;                         NOP;                          NOP /* MW 8 */
	   551      "00000000" // /* MW 7 */
	   552      "00000000" // /* MW 6 */
	   553      "00000000" // /* MW 5 */
	   554      "00000000" // /* MW 4 */
	   555      "00000000" // /* MW 3 */
	   556      "10010000" // /* MW 2 */
	   557      "00001000" // /* MW 1 */
	   558      "00000001" // 	NOP /* MW 2 */
	   559      "00000000" // /* MW 1 */
	   560      "00000001" // 	NOP /* MW 2 */
	   561      "00000000" // /* MW 1 */
	   562      "00000001" // 	NOP /* MW 2 */
	   563      "00000000" // /* MW 1 */
	   564      "00000001" // 	NOP /* MW 2 */
	   565      "00000000" // /* MW 1 */
	   566      "00000001" // 	NOP /* MW 2 */
	   567      "00000000" // /* MW 1 */
	   568      "00000001" // 	NOP /* MW 2 */
	   569      "00000000" // /* MW 1 */
	   570      "00000001" // 	NOP /* MW 2 */
	   571      "00000000" // /* MW 1 */
.src_ref 2 "24_0.cc" 53
.end_of_main
	   572      "00000001" // 	RET lr /* MW 2 */
	   573      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   574      "00000001" // 	NOP /* MW 2 */
	   575      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   576      "00000001" // 	NOP /* MW 2 */
	   577      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   578      "00000001" // 	NOP /* MW 2 */
	   579      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   580      "00000001" // 	NOP /* MW 2 */
	   581      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   582      "00000001" // 	NOP /* MW 2 */
.label _main__end
.label _main___func_end0
	   583      "00000000" // /* MW 1 */
.label __Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE___func_begin0
.label _Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE
.function my_kernel_function _Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE
.src_ref 3 "my_kernel_1.cpp" 23
.src_ref 3 "my_kernel_1.cpp" 23 first
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 3 "my_kernel_1.cpp" 67 14
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 5 "vector.hpp" 85 119
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.function_start
	   592      "00111111" // 	MOV.s10 cs1, #4;    MOV.s9 r7, #1;                                    MOV.s12 r6, #0;               MOV.u20 cl0, #2432;           NOP /* MW 12 */
	   593      "10000000" // /* MW 11 */
	   594      "00001001" // /* MW 10 */
	   595      "00000010" // /* MW 9 */
	   596      "00000100" // /* MW 8 */
	   597      "01101100" // /* MW 7 */
	   598      "00000000" // /* MW 6 */
	   599      "00101000" // /* MW 5 */
	   600      "11000000" // /* MW 4 */
	   601      "00010111" // /* MW 3 */
	   602      "00000001" // /* MW 2 */
	   603      "00101001" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 83 20
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "broadcast.hpp" 129 38
.src_ref 5 "broadcast.hpp" 129 38
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "vector.hpp" 94 119
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 371 32
.src_ref 6 "mask.hpp" 371 32
	   604      "00011111" // 	MOV.s10 cs0, #-12;  MOV.s9 r2, #0;      NOP;                          MOV.s12 r8, #0;               MOV md0[8], r7[0] /* MW 12 */
	   605      "01111011" // /* MW 11 */
	   606      "00100100" // /* MW 10 */
	   607      "00001110" // /* MW 9 */
	   608      "00000000" // /* MW 8 */
	   609      "00000001" // /* MW 7 */
	   610      "00000000" // /* MW 6 */
	   611      "00000000" // /* MW 5 */
	   612      "11000000" // /* MW 4 */
	   613      "00010010" // /* MW 3 */
	   614      "11111101" // /* MW 2 */
	   615      "00101000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 85 119
.src_ref 5 "vector.hpp" 94 119
.src_ref 5 "vector.hpp" 725 20
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 901 40
.src_ref 5 "vector.hpp" 1430 12
	   616      "00111111" // 	NOP;                MOV.s9 r12, #-8;                                  MOV.s12 r9, #257;             MOV md0[9], r6[0];            VMOV1 vrl2, WSS.md0[ 8] /* MW 12 */
	   617      "01000000" // /* MW 11 */
	   618      "00001000" // /* MW 10 */
	   619      "11101011" // /* MW 9 */
	   620      "01100100" // /* MW 8 */
	   621      "11110010" // /* MW 7 */
	   622      "10000000" // /* MW 6 */
	   623      "00001000" // /* MW 5 */
	   624      "11111111" // /* MW 4 */
	   625      "00011100" // /* MW 3 */
	   626      "00000000" // /* MW 2 */
	   627      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 23
.src_ref 4 "stream_utils.h" 180 15
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "vector.hpp" 85 119 first
.src_ref 5 "vector.hpp" 97 117
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 901 40 first
	   628      "00111111" // 	NOP;                MOV.s9 r7, #32;                                   MOV.s12 r14, #-1000;          MOV m0, cl0;                  VMOV1 vcl0, WSS.md0[ 9] /* MW 12 */
	   629      "01000000" // /* MW 11 */
	   630      "00010001" // /* MW 10 */
	   631      "10001000" // /* MW 9 */
	   632      "01000100" // /* MW 8 */
	   633      "01111100" // /* MW 7 */
	   634      "00001100" // /* MW 6 */
	   635      "00001110" // /* MW 5 */
	   636      "11000100" // /* MW 4 */
	   637      "00010111" // /* MW 3 */
	   638      "00000000" // /* MW 2 */
	   639      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 23
.src_ref 5 "broadcast.hpp" 129 38
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	   640      "00111111" // 	PADDA [sp], m0;     NOP;                NOP;                                                        MOV.u20 cl1, #0;              NOP /* MW 12 */
	   641      "00000000" // /* MW 11 */
	   642      "01000000" // /* MW 10 */
	   643      "00000010" // /* MW 9 */
	   644      "00000100" // /* MW 8 */
	   645      "00000000" // /* MW 7 */
	   646      "00000000" // /* MW 6 */
	   647      "00010000" // /* MW 5 */
	   648      "00000000" // /* MW 4 */
	   649      "00000000" // /* MW 3 */
	   650      "10010000" // /* MW 2 */
	   651      "00001000" // /* MW 1 */
	   652      "11110111" // 	                                        NOP;                                                        MOV.u20 cl0, #114688;         NOP /* MW 8 */
	   653      "00000111" // /* MW 7 */
	   654      "00000000" // /* MW 6 */
	   655      "00100000" // /* MW 5 */
	   656      "01000111" // /* MW 4 */
	   657      "00000000" // /* MW 3 */
	   658      "00000000" // /* MW 2 */
	   659      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "broadcast.hpp" 129 38
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	   660      "11110111" // 	                                        ST r10, [sp, #-16];                                         MOV ch1, cl1;                 VMOV1 vrl2, WSS.md0[ 8] /* MW 8 */
	   661      "00000111" // /* MW 7 */
	   662      "10000100" // /* MW 6 */
	   663      "00000100" // /* MW 5 */
	   664      "01001001" // /* MW 4 */
	   665      "11100100" // /* MW 3 */
	   666      "01011111" // /* MW 2 */
	   667      "10101111" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40 first
	   668      "11110111" // 	                                                                      NOP;                          MOV r13, sp;                  VMOV1 vch0, WSS.md0[ 9] /* MW 8 */
	   669      "00000111" // /* MW 7 */
	   670      "00110100" // /* MW 6 */
	   671      "01110101" // /* MW 5 */
	   672      "00000001" // /* MW 4 */
	   673      "00000110" // /* MW 3 */
	   674      "00000000" // /* MW 2 */
	   675      "00000000" // /* MW 1 */
	   676      "11110111" // 	                                        ST r11, [sp, #-12];                                         MOV.s20 r10, #-2416;          NOP /* MW 8 */
	   677      "00000111" // /* MW 7 */
	   678      "01101001" // /* MW 6 */
	   679      "11101011" // /* MW 5 */
	   680      "00111111" // /* MW 4 */
	   681      "11101000" // /* MW 3 */
	   682      "01111111" // /* MW 2 */
	   683      "10101111" // /* MW 1 */
	   684      "11110111" // 	                                        ST p7, [sp, #-8];             NOP;                          MOV m0, r10 /* MW 8 */
	   685      "01000000" // /* MW 7 */
	   686      "00111101" // /* MW 6 */
	   687      "00000000" // /* MW 5 */
	   688      "00000000" // /* MW 4 */
	   689      "11100000" // /* MW 3 */
	   690      "11111111" // /* MW 2 */
	   691      "01011011" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
	   692      "11110111" // 	                                        ST p6, [sp, #-4];                                           MOV p7, r13;                  VMOV1 vrl2, WSS.md0[ 8] /* MW 8 */
	   693      "00000111" // /* MW 7 */
	   694      "10000100" // /* MW 6 */
	   695      "10111100" // /* MW 5 */
	   696      "01111101" // /* MW 4 */
	   697      "11111100" // /* MW 3 */
	   698      "11011111" // /* MW 2 */
	   699      "10101101" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 94 119 first
.src_ref 5 "vector.hpp" 901 40 first
.noswbrkpt
	   700      "11110111" // 	PADDA [p7], m0;                                                                                     VSHL0.16 xd, r8;              VMOV1 vcl1, WSS.md0[ 9] /* MW 8 */
	   701      "00000011" // /* MW 7 */
	   702      "10100000" // /* MW 6 */
	   703      "10101010" // /* MW 5 */
	   704      "01000001" // /* MW 4 */
	   705      "11110100" // /* MW 3 */
	   706      "10000001" // /* MW 2 */
	   707      "00001000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	   708      "11110111" // 	                                        ST r4, [sp, #-20];            NOP;                          MOV p6, p7 /* MW 8 */
	   709      "11011100" // /* MW 7 */
	   710      "00110111" // /* MW 6 */
	   711      "00000000" // /* MW 5 */
	   712      "00000000" // /* MW 4 */
	   713      "10110000" // /* MW 3 */
	   714      "00111111" // /* MW 2 */
	   715      "01011101" // /* MW 1 */
	   716      "11110111" // 	                                        ST p7, [sp, #-32];                                          MOV.s20 r10, #-2384;          NOP /* MW 8 */
	   717      "00000111" // /* MW 7 */
	   718      "01101011" // /* MW 6 */
	   719      "11101011" // /* MW 5 */
	   720      "00111111" // /* MW 4 */
	   721      "11000000" // /* MW 3 */
	   722      "11111111" // /* MW 2 */
	   723      "10101101" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 45
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 94 119
.src_ref 5 "vector.hpp" 1430 12 first
	   724      "00111111" // 	NOP;                MOV.s9 r9, #9;                                    ADD r10, r10, r13;            VSHL0.16 xa, r9;              VMOV1 vrl2, WSS.md0[ 8] /* MW 12 */
	   725      "01000000" // /* MW 11 */
	   726      "01001000" // /* MW 10 */
	   727      "10010000" // /* MW 9 */
	   728      "01101000" // /* MW 8 */
	   729      "01010100" // /* MW 7 */
	   730      "00011011" // /* MW 6 */
	   731      "00100110" // /* MW 5 */
	   732      "11000001" // /* MW 4 */
	   733      "00011001" // /* MW 3 */
	   734      "00000000" // /* MW 2 */
	   735      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 130 25
	   736      "11110111" // 	                                                                      NOP;                          MOV p0, r10;                  VMOV1 vch1, WSS.md0[ 9] /* MW 8 */
	   737      "00000111" // /* MW 7 */
	   738      "01110100" // /* MW 6 */
	   739      "10100001" // /* MW 5 */
	   740      "01111010" // /* MW 4 */
	   741      "00000100" // /* MW 3 */
	   742      "00000000" // /* MW 2 */
	   743      "00000000" // /* MW 1 */
	   744      "11110111" // 	                                        ST p0, [sp, #-24];                                          MOV.s20 r11, #-2400;          NOP /* MW 8 */
	   745      "00000111" // /* MW 7 */
	   746      "01101010" // /* MW 6 */
	   747      "11101111" // /* MW 5 */
	   748      "00111111" // /* MW 4 */
	   749      "11010000" // /* MW 3 */
	   750      "00011111" // /* MW 2 */
	   751      "10101101" // /* MW 1 */
.src_ref 5 "broadcast.hpp" 129 38
	   752      "11110111" // 	                                                                      ADD r10, r13, r11;            MOV.u20 ch0, #65536;          NOP /* MW 8 */
	   753      "00000111" // /* MW 7 */
	   754      "00000000" // /* MW 6 */
	   755      "00000000" // /* MW 5 */
	   756      "01000100" // /* MW 4 */
	   757      "10100000" // /* MW 3 */
	   758      "10111101" // /* MW 2 */
	   759      "00110000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 6 "mask.hpp" 130 25
	   760      "11110111" // 	                                                                      NOP;                          MOV p1, r10;                  VMOV1 vrl2, WSS.md0[ 8] /* MW 8 */
	   761      "00000111" // /* MW 7 */
	   762      "10000100" // /* MW 6 */
	   763      "10100100" // /* MW 5 */
	   764      "01111010" // /* MW 4 */
	   765      "00000100" // /* MW 3 */
	   766      "00000000" // /* MW 2 */
	   767      "00000000" // /* MW 1 */
	   768      "11110111" // 	                                        ST p1, [sp, #-28];                                          MOV.s20 r10, #-2432;          NOP /* MW 8 */
	   769      "00000111" // /* MW 7 */
	   770      "01101000" // /* MW 6 */
	   771      "11101011" // /* MW 5 */
	   772      "00111111" // /* MW 4 */
	   773      "11001000" // /* MW 3 */
	   774      "00111111" // /* MW 2 */
	   775      "10101101" // /* MW 1 */
	   776      "11110111" // 	                                        NOP;                                                        MOVT.s12 cl0, #25;            NOP /* MW 8 */
	   777      "10010111" // /* MW 7 */
	   778      "00000001" // /* MW 6 */
	   779      "00100000" // /* MW 5 */
	   780      "00000001" // /* MW 4 */
	   781      "00000000" // /* MW 3 */
	   782      "00000000" // /* MW 2 */
	   783      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
	   784      "11110111" // 	                                                                      NOP;                          MOV m0, r10;                  VMOV1 vrl2, WSS.md0[ 9] /* MW 8 */
	   785      "00000111" // /* MW 7 */
	   786      "10010100" // /* MW 6 */
	   787      "10000000" // /* MW 5 */
	   788      "01111010" // /* MW 4 */
	   789      "00000100" // /* MW 3 */
	   790      "00000000" // /* MW 2 */
	   791      "00000000" // /* MW 1 */
.src_ref 5 "broadcast.hpp" 129 38 first
.noswbrkpt
	   792      "00010000" // 	PADDA [p6], m0;     NOP;                NOP;                          NOP;                          MOV.s20 r10, #-2368;          NOP;                                    VSEL xc, yd.s16, r8, c1, r2, c1, c0, r8 /* MW 16 */
	   793      "00010010" // /* MW 15 */
	   794      "00100001" // /* MW 14 */
	   795      "00000110" // /* MW 13 */
	   796      "10000000" // /* MW 12 */
	   797      "11000000" // /* MW 11 */
	   798      "10110110" // /* MW 10 */
	   799      "11111110" // /* MW 9 */
	   800      "00000011" // /* MW 8 */
	   801      "00000000" // /* MW 7 */
	   802      "00000000" // /* MW 6 */
	   803      "00010000" // /* MW 5 */
	   804      "00000000" // /* MW 4 */
	   805      "10000000" // /* MW 3 */
	   806      "10000001" // /* MW 2 */
	   807      "00001000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 4 "stream_utils.h" 213 8
.src_ref 5 "vector.hpp" 744 23 first
.nohwbrkpt
.noswbrkpt
	   808      "11110111" // 	                                        NOP;                                                        MOV md0[10], r6[0];           VEXT.16 r6, vcl0[0] /* MW 8 */
	   809      "00010111" // /* MW 7 */
	   810      "11010000" // /* MW 6 */
	   811      "10110001" // /* MW 5 */
	   812      "01010110" // /* MW 4 */
	   813      "00000110" // /* MW 3 */
	   814      "00000000" // /* MW 2 */
	   815      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "broadcast.hpp" 129 38 first
.src_ref 5 "vector.hpp" 97 117 first
.src_ref 5 "vector.hpp" 691 23 first
.noswbrkpt
	   816      "00000010" // 	NOP;                NOP;                VST wc0, [sp, #-128];         ADD r10, r10, r13;            VUPD.32 vrh3[2], r14;         VMOV1 vrl0, WSS.md0[ 8];                VSEL xc, ya.s16, r8, c1, r2, c1, c0, r8 /* MW 16 */
	   817      "00010010" // /* MW 15 */
	   818      "00100001" // /* MW 14 */
	   819      "01010110" // /* MW 13 */
	   820      "01101101" // /* MW 12 */
	   821      "01011000" // /* MW 11 */
	   822      "11000000" // /* MW 10 */
	   823      "11101101" // /* MW 9 */
	   824      "00011001" // /* MW 8 */
	   825      "11111100" // /* MW 7 */
	   826      "01100011" // /* MW 6 */
	   827      "00000111" // /* MW 5 */
	   828      "00000000" // /* MW 4 */
	   829      "00000000" // /* MW 3 */
	   830      "00000000" // /* MW 2 */
	   831      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 691 23
.nohwbrkpt
.noswbrkpt
	   832      "11110111" // 	                                        VST wc1, [sp, #-96];                                        VUPD.32 vrh3[3], r14;         VMOV1 vrl3, WSS.md0[ 9] /* MW 8 */
	   833      "00000111" // /* MW 7 */
	   834      "11010100" // /* MW 6 */
	   835      "11011100" // /* MW 5 */
	   836      "11011110" // /* MW 4 */
	   837      "11101101" // /* MW 3 */
	   838      "01011111" // /* MW 2 */
	   839      "10111011" // /* MW 1 */
.src_ref 5 "vector.hpp" 725 20 first
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	   840      "11110111" // 	                                        ST r10, [sp, #-36];           LSHL r10, r6, r12;            MOV m0, ch1 /* MW 8 */
	   841      "11000000" // /* MW 7 */
	   842      "00100000" // /* MW 6 */
	   843      "11010100" // /* MW 5 */
	   844      "11011000" // /* MW 4 */
	   845      "01110111" // /* MW 3 */
	   846      "10111111" // /* MW 2 */
	   847      "01011110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 32 first
.src_ref 5 "vector.hpp" 691 23 first
	   848      "11110111" // 	                                        VST wc0, [sp, #-160];         ZE.8 r11, r10;                VUPD.32 vrh3[1], r14 /* MW 8 */
	   849      "01101110" // /* MW 7 */
	   850      "10101111" // /* MW 6 */
	   851      "01010110" // /* MW 5 */
	   852      "01001001" // /* MW 4 */
	   853      "10110011" // /* MW 3 */
	   854      "00111111" // /* MW 2 */
	   855      "01110110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 16
.src_ref 4 "stream_utils.h" 180 15 first
	   856      "00011111" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-128];NOP;               ZE.8 r12, r6;                 VMOV0 vrl0, WSS.md0[ 8] /* MW 12 */
	   857      "00000000" // /* MW 11 */
	   858      "00100110" // /* MW 10 */
	   859      "00011011" // /* MW 9 */
	   860      "01101001" // /* MW 8 */
	   861      "00000000" // /* MW 7 */
	   862      "00000000" // /* MW 6 */
	   863      "10000000" // /* MW 5 */
	   864      "01111111" // /* MW 4 */
	   865      "00001110" // /* MW 3 */
	   866      "00000000" // /* MW 2 */
	   867      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 25 first
.src_ref 4 "stream_utils.h" 180 15
	   868      "11110111" // 	                                        ST p6, [sp, #-40];            ADD r14, r12, #1;             VMOV0 vrl1, WSS.md0[ 9] /* MW 8 */
	   869      "10000100" // /* MW 7 */
	   870      "00110000" // /* MW 6 */
	   871      "10011101" // /* MW 5 */
	   872      "00000011" // /* MW 4 */
	   873      "01100100" // /* MW 3 */
	   874      "10111111" // /* MW 2 */
	   875      "01011011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 41
	   876      "11110111" // 	                                                                      ADD r11, r11, #1;             MOV.u20 ch1, #65764;          NOP /* MW 8 */
	   877      "01000111" // /* MW 7 */
	   878      "00001110" // /* MW 6 */
	   879      "00000100" // /* MW 5 */
	   880      "01000100" // /* MW 4 */
	   881      "10110000" // /* MW 3 */
	   882      "00011011" // /* MW 2 */
	   883      "00100000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 29
.noswbrkpt
	   884      "00111111" // 	VLDA.UNPACK.u8 xa, [sp, #-96];NOP;                                    MUL r11, r14, r11;            MOV.u20 cl0, #262656;         NOP /* MW 12 */
	   885      "00000000" // /* MW 11 */
	   886      "00000010" // /* MW 10 */
	   887      "00000010" // /* MW 9 */
	   888      "00000101" // /* MW 8 */
	   889      "11010110" // /* MW 7 */
	   890      "11110111" // /* MW 6 */
	   891      "00000110" // /* MW 5 */
	   892      "00000000" // /* MW 4 */
	   893      "01000000" // /* MW 3 */
	   894      "11111111" // /* MW 2 */
	   895      "00000100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.nohwbrkpt
.noswbrkpt
	   896      "01110111" // 	VLDA.UNPACK.u8 xb, [sp, #-160];                                       NOP;                          VMOV0 vrl0, WSS.md0[ 8] /* MW 8 */
	   897      "00000000" // /* MW 7 */
	   898      "00000000" // /* MW 6 */
	   899      "00000000" // /* MW 5 */
	   900      "00000000" // /* MW 4 */
	   901      "11100110" // /* MW 3 */
	   902      "11111110" // /* MW 2 */
	   903      "00001100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.nohwbrkpt
.noswbrkpt
	   904      "11110111" // 	                                        VST wc1, [sp, #-160];         NOP;                          VMOV0 vrl1, WSS.md0[ 9] /* MW 8 */
	   905      "10000100" // /* MW 7 */
	   906      "00110000" // /* MW 6 */
	   907      "00000001" // /* MW 5 */
	   908      "00000000" // /* MW 4 */
	   909      "10110000" // /* MW 3 */
	   910      "10111111" // /* MW 2 */
	   911      "01110110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 34 45 first
.nohwbrkpt
.noswbrkpt
	   912      "11110111" // 	                                                                      LSHL r9, r11, r9;             MOV.u20 ch0, #789000;         NOP /* MW 8 */
	   913      "10000111" // /* MW 7 */
	   914      "10100000" // /* MW 6 */
	   915      "00000000" // /* MW 5 */
	   916      "01110000" // /* MW 4 */
	   917      "10010000" // /* MW 3 */
	   918      "10011011" // /* MW 2 */
	   919      "00111110" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23 first
.nohwbrkpt
.noswbrkpt
	   920      "11110111" // 	                                        VST wd0, [sp, #-256];         NOP;                          VUPD.32 vrh3[0], r9 /* MW 8 */
	   921      "11101110" // /* MW 7 */
	   922      "10001100" // /* MW 6 */
	   923      "00000000" // /* MW 5 */
	   924      "00000000" // /* MW 4 */
	   925      "10000000" // /* MW 3 */
	   926      "00111111" // /* MW 2 */
	   927      "01110111" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8
.nohwbrkpt
.noswbrkpt
	   928      "11110111" // 	                                        VST wd1, [sp, #-224];         NOP;                          VMOV vrh0, vrh3 /* MW 8 */
	   929      "10100010" // /* MW 7 */
	   930      "00110011" // /* MW 6 */
	   931      "00000001" // /* MW 5 */
	   932      "00000000" // /* MW 4 */
	   933      "10010000" // /* MW 3 */
	   934      "10111111" // /* MW 2 */
	   935      "01110111" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8 first
.nohwbrkpt
.noswbrkpt
	   936      "01110111" // 	NOP;                                    VST vrh0, [sp, #-128];                                                                    VMOV1 WMS.md0[10], vrh0, #0 /* MW 8 */
	   937      "11111000" // /* MW 7 */
	   938      "10000111" // /* MW 6 */
	   939      "00110110" // /* MW 5 */
	   940      "01100000" // /* MW 4 */
	   941      "00000000" // /* MW 3 */
	   942      "00000000" // /* MW 2 */
	   943      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	   944      "00111111" // 	VLDA.UNPACK.u8 xb, [sp, #-160];NOP;     NOP;                                                        MOV.s20 r12, #-2312;          NOP /* MW 12 */
	   945      "11111000" // /* MW 11 */
	   946      "00110110" // /* MW 10 */
	   947      "11111111" // /* MW 9 */
	   948      "00000011" // /* MW 8 */
	   949      "00000000" // /* MW 7 */
	   950      "00000000" // /* MW 6 */
	   951      "00010000" // /* MW 5 */
	   952      "00000000" // /* MW 4 */
	   953      "11000000" // /* MW 3 */
	   954      "11111110" // /* MW 2 */
	   955      "00001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	   956      "11110111" // 	                                        VST wr2, [sp, #-288];                                       MOVT.s12 ch1, #456;           NOP /* MW 8 */
	   957      "10000111" // /* MW 7 */
	   958      "00011100" // /* MW 6 */
	   959      "00000100" // /* MW 5 */
	   960      "00000001" // /* MW 4 */
	   961      "10111000" // /* MW 3 */
	   962      "10011111" // /* MW 2 */
	   963      "10111010" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.nohwbrkpt
.noswbrkpt
	   964      "11110111" // 	                                        VST wr3, [sp, #-192];                                       MOV.u20 cl1, #49152;          NOP /* MW 8 */
	   965      "00000111" // /* MW 7 */
	   966      "00000000" // /* MW 6 */
	   967      "00100100" // /* MW 5 */
	   968      "01000011" // /* MW 4 */
	   969      "11010000" // /* MW 3 */
	   970      "11011111" // /* MW 2 */
	   971      "10111010" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.nohwbrkpt
.noswbrkpt
	   972      "11110111" // 	                                                                      ADD r12, r12, r13;            MOVT.s12 cl0, #96;            NOP /* MW 8 */
	   973      "00000111" // /* MW 7 */
	   974      "00000110" // /* MW 6 */
	   975      "00100000" // /* MW 5 */
	   976      "00000001" // /* MW 4 */
	   977      "11000000" // /* MW 3 */
	   978      "11011100" // /* MW 2 */
	   979      "00110000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	   980      "11110111" // 	                                        ST r12, [sp, #-52];                                         MOVT.s12 ch0, #224;           NOP /* MW 8 */
	   981      "00000111" // /* MW 7 */
	   982      "00001110" // /* MW 6 */
	   983      "00000000" // /* MW 5 */
	   984      "00000001" // /* MW 4 */
	   985      "10011000" // /* MW 3 */
	   986      "10011111" // /* MW 2 */
	   987      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	   988      "11110111" // 	                                        VST wr1, [sp, #-352];                                       MOV.s20 r12, #-2280;          NOP /* MW 8 */
	   989      "10000111" // /* MW 7 */
	   990      "01110001" // /* MW 6 */
	   991      "11110011" // /* MW 5 */
	   992      "00111111" // /* MW 4 */
	   993      "10101000" // /* MW 3 */
	   994      "01011111" // /* MW 2 */
	   995      "10111010" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	   996      "01011000" // 	NOP;                NOP;                NOP;                          ADD r12, r12, r13;            MOV.s20 r10, #-2344;          NOP;                                    VCMP xc, r6, yd.s16, r8, c0, r7, c0, c1 /* MW 16 */
	   997      "10000000" // /* MW 15 */
	   998      "00100011" // /* MW 14 */
	   999      "00000011" // /* MW 13 */
	  1000      "10000000" // /* MW 12 */
	  1001      "11011000" // /* MW 11 */
	  1002      "10110110" // /* MW 10 */
	  1003      "11111110" // /* MW 9 */
	  1004      "00000011" // /* MW 8 */
	  1005      "10011000" // /* MW 7 */
	  1006      "00011011" // /* MW 6 */
	  1007      "00000110" // /* MW 5 */
	  1008      "00000000" // /* MW 4 */
	  1009      "00000000" // /* MW 3 */
	  1010      "00000000" // /* MW 2 */
	  1011      "00000000" // /* MW 1 */
	  1012      "01101000" // 	NOP;                NOP;                ST r12, [sp, #-60];           NOP;                          MOV.s20 r12, #-2304;          NOP;                                    VCMP xd, r6, ya.s16, r8, c0, r7, c0, c1 /* MW 16 */
	  1013      "10000000" // /* MW 15 */
	  1014      "00100011" // /* MW 14 */
	  1015      "00000011" // /* MW 13 */
	  1016      "10000000" // /* MW 12 */
	  1017      "00000000" // /* MW 11 */
	  1018      "00110111" // /* MW 10 */
	  1019      "11111111" // /* MW 9 */
	  1020      "00000011" // /* MW 8 */
	  1021      "11110001" // /* MW 7 */
	  1022      "11110011" // /* MW 6 */
	  1023      "00010101" // /* MW 5 */
	  1024      "00000000" // /* MW 4 */
	  1025      "00000000" // /* MW 3 */
	  1026      "00000000" // /* MW 2 */
	  1027      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
	  1028      "11110111" // 	                                                                      ADD r9, r12, r13;             ST.SPIL r8, [sp, #-2376];     NOP /* MW 8 */
	  1029      "01000111" // /* MW 7 */
	  1030      "10111000" // /* MW 6 */
	  1031      "11110110" // /* MW 5 */
	  1032      "11111000" // /* MW 4 */
	  1033      "10010000" // /* MW 3 */
	  1034      "11011100" // /* MW 2 */
	  1035      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1036      "11110111" // 	                                                                      ADD r10, r10, r13;            ST.SPIL r8, [sp, #-2372];     NOP /* MW 8 */
	  1037      "01000111" // /* MW 7 */
	  1038      "10111100" // /* MW 6 */
	  1039      "11110110" // /* MW 5 */
	  1040      "11111000" // /* MW 4 */
	  1041      "10100000" // /* MW 3 */
	  1042      "11011010" // /* MW 2 */
	  1043      "00110000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.src_ref 5 "vector.hpp" 1149 27 first
	  1044      "11110111" // 	                                        VST.PACK.u8 xc, [sp, #-416];                                MOV.s20 r12, #-2144;          NOP /* MW 8 */
	  1045      "00000111" // /* MW 7 */
	  1046      "01111010" // /* MW 6 */
	  1047      "11110011" // /* MW 5 */
	  1048      "00111111" // /* MW 4 */
	  1049      "10011000" // /* MW 3 */
	  1050      "00011111" // /* MW 2 */
	  1051      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 6 "broadcast.hpp" 119 31
.src_ref 6 "mask.hpp" 130 25 first
	  1052      "00111111" // 	VLDA wc0, [sp, #-416];NOP;              ST r8, [p0];                                                MOV.u20 p0, #233504;          NOP /* MW 12 */
	  1053      "00100000" // /* MW 11 */
	  1054      "00010000" // /* MW 10 */
	  1055      "11101010" // /* MW 9 */
	  1056      "00000100" // /* MW 8 */
	  1057      "01000000" // /* MW 7 */
	  1058      "11100011" // /* MW 6 */
	  1059      "00010101" // /* MW 5 */
	  1060      "00000000" // /* MW 4 */
	  1061      "11000000" // /* MW 3 */
	  1062      "11111100" // /* MW 2 */
	  1063      "00010010" // /* MW 1 */
.src_ref 6 "broadcast.hpp" 119 31 first
.noswbrkpt
	  1064      "00111111" // 	VLDA wr1, [p0];     NOP;                ST r10, [sp, #-44];                                         MOV.s20 r10, #-2096;          NOP /* MW 12 */
	  1065      "11010000" // /* MW 11 */
	  1066      "10110111" // /* MW 10 */
	  1067      "11111110" // /* MW 9 */
	  1068      "00000011" // /* MW 8 */
	  1069      "11110101" // /* MW 7 */
	  1070      "11101011" // /* MW 6 */
	  1071      "00010101" // /* MW 5 */
	  1072      "00000000" // /* MW 4 */
	  1073      "00000000" // /* MW 3 */
	  1074      "11010000" // /* MW 2 */
	  1075      "00000110" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.nohwbrkpt
.noswbrkpt
	  1076      "11110111" // 	                                        VST wr0, [sp, #-384];         ADD r10, r10, r13;            MOV ch2, ch1 /* MW 8 */
	  1077      "10000100" // /* MW 7 */
	  1078      "00100000" // /* MW 6 */
	  1079      "01010100" // /* MW 5 */
	  1080      "00011011" // /* MW 4 */
	  1081      "01000110" // /* MW 3 */
	  1082      "00111111" // /* MW 2 */
	  1083      "01110100" // /* MW 1 */
	  1084      "11110111" // 	                                        ST r9, [sp, #-64];                                          MOV.s20 r9, #-2272;           NOP /* MW 8 */
	  1085      "00000111" // /* MW 7 */
	  1086      "01110010" // /* MW 6 */
	  1087      "11100111" // /* MW 5 */
	  1088      "00111111" // /* MW 4 */
	  1089      "10000000" // /* MW 3 */
	  1090      "00111111" // /* MW 2 */
	  1091      "10101111" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.src_ref 5 "vector.hpp" 1149 27 first
	  1092      "10110111" // 	NOP;                                    VST.PACK.u8 xd, [sp, #-416];  ADD r9, r9, r13 /* MW 8 */
	  1093      "11111001" // /* MW 7 */
	  1094      "10011001" // /* MW 6 */
	  1095      "11001011" // /* MW 5 */
	  1096      "01101100" // /* MW 4 */
	  1097      "00011000" // /* MW 3 */
	  1098      "00000000" // /* MW 2 */
	  1099      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19 first
	  1100      "00111111" // 	VLDA wc1, [sp, #-416];NOP;                                            ADD r12, r12, r13;            MOV.u20 cl4, #349525;         NOP /* MW 12 */
	  1101      "01010101" // /* MW 11 */
	  1102      "00010101" // /* MW 10 */
	  1103      "01010011" // /* MW 9 */
	  1104      "00000101" // /* MW 8 */
	  1105      "10011000" // /* MW 7 */
	  1106      "00011011" // /* MW 6 */
	  1107      "00000110" // /* MW 5 */
	  1108      "00000000" // /* MW 4 */
	  1109      "11000000" // /* MW 3 */
	  1110      "11111100" // /* MW 2 */
	  1111      "00010110" // /* MW 1 */
	  1112      "11110111" // 	                                        ST r10, [sp, #-48];                                         MOV.s20 r10, #-2336;          NOP /* MW 8 */
	  1113      "00000111" // /* MW 7 */
	  1114      "01101110" // /* MW 6 */
	  1115      "11101011" // /* MW 5 */
	  1116      "00111111" // /* MW 4 */
	  1117      "10100000" // /* MW 3 */
	  1118      "01011111" // /* MW 2 */
	  1119      "10101111" // /* MW 1 */
	  1120      "11110111" // 	                                        ST r9, [sp, #-100];                                         MOV.s20 r9, #-2208;           NOP /* MW 8 */
	  1121      "00000111" // /* MW 7 */
	  1122      "01110110" // /* MW 6 */
	  1123      "11100111" // /* MW 5 */
	  1124      "00111111" // /* MW 4 */
	  1125      "00111000" // /* MW 3 */
	  1126      "00111111" // /* MW 2 */
	  1127      "10101111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 51 19
.src_ref 6 "mask.hpp" 130 25 first
	  1128      "00111111" // 	NOP;                MOV.s9 r10, #1;                                   ADD r14, r10, r13;            ST.SPIL r8, [sp, #-2392];     NOP /* MW 12 */
	  1129      "10000100" // /* MW 11 */
	  1130      "01101010" // /* MW 10 */
	  1131      "10001111" // /* MW 9 */
	  1132      "00001111" // /* MW 8 */
	  1133      "01011100" // /* MW 7 */
	  1134      "00011011" // /* MW 6 */
	  1135      "00100110" // /* MW 5 */
	  1136      "11000000" // /* MW 4 */
	  1137      "00011010" // /* MW 3 */
	  1138      "00000000" // /* MW 2 */
	  1139      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1140      "11110111" // 	                                                                      ADD r9, r9, r13;              ST.SPIL r8, [sp, #-2408];     NOP /* MW 8 */
	  1141      "01000111" // /* MW 7 */
	  1142      "10011000" // /* MW 6 */
	  1143      "11110110" // /* MW 5 */
	  1144      "11111000" // /* MW 4 */
	  1145      "10010000" // /* MW 3 */
	  1146      "11011001" // /* MW 2 */
	  1147      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 51 19 first
.src_ref 6 "mask.hpp" 130 25
	  1148      "11110111" // 	                                                                      LSHL r10, r11, r10;           ST.SPIL r8, [sp, #-2424];     NOP /* MW 8 */
	  1149      "01000111" // /* MW 7 */
	  1150      "10001000" // /* MW 6 */
	  1151      "11110110" // /* MW 5 */
	  1152      "11111000" // /* MW 4 */
	  1153      "10100000" // /* MW 3 */
	  1154      "10101011" // /* MW 2 */
	  1155      "00111110" // /* MW 1 */
	  1156      "11110111" // 	                                        ST r12, [sp, #-104];                                        MOV.s20 r12, #-2176;          NOP /* MW 8 */
	  1157      "00000111" // /* MW 7 */
	  1158      "01111000" // /* MW 6 */
	  1159      "11110011" // /* MW 5 */
	  1160      "00111111" // /* MW 4 */
	  1161      "00110000" // /* MW 3 */
	  1162      "10011111" // /* MW 2 */
	  1163      "10101111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 52 4 first
.src_ref 6 "mask.hpp" 130 25 first
	  1164      "11110111" // 	                                                                      ADD lc, r10, #0;              ST.SPIL r8, [sp, #-2388];     NOP /* MW 8 */
	  1165      "01000111" // /* MW 7 */
	  1166      "10101100" // /* MW 6 */
	  1167      "11110110" // /* MW 5 */
	  1168      "11111000" // /* MW 4 */
	  1169      "00000000" // /* MW 3 */
	  1170      "00001010" // /* MW 2 */
	  1171      "00011100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1172      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-2404];     NOP /* MW 8 */
	  1173      "01000111" // /* MW 7 */
	  1174      "10011100" // /* MW 6 */
	  1175      "11110110" // /* MW 5 */
	  1176      "11111000" // /* MW 4 */
	  1177      "00000000" // /* MW 3 */
	  1178      "00000000" // /* MW 2 */
	  1179      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1180      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-2420];     NOP /* MW 8 */
	  1181      "01000111" // /* MW 7 */
	  1182      "10001100" // /* MW 6 */
	  1183      "11110110" // /* MW 5 */
	  1184      "11111000" // /* MW 4 */
	  1185      "00000000" // /* MW 3 */
	  1186      "00000000" // /* MW 2 */
	  1187      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 844 26 first
	  1188      "11110111" // 	                                        ST r9, [sp, #-108];           ADD r9, r12, r13;             VMOV wr0, wr1 /* MW 8 */
	  1189      "10100010" // /* MW 7 */
	  1190      "00100001" // /* MW 6 */
	  1191      "10010011" // /* MW 5 */
	  1192      "00011011" // /* MW 4 */
	  1193      "01010110" // /* MW 3 */
	  1194      "01111110" // /* MW 2 */
	  1195      "01011110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25 first
	  1196      "11110111" // 	                                        ST r8, [p1];                                                MOV.s20 r11, #-2216;          NOP /* MW 8 */
	  1197      "10000111" // /* MW 7 */
	  1198      "01110101" // /* MW 6 */
	  1199      "11101111" // /* MW 5 */
	  1200      "00111111" // /* MW 4 */
	  1201      "00001000" // /* MW 3 */
	  1202      "00011010" // /* MW 2 */
	  1203      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1204      "10110111" // 	NOP;                                    ST r8, [p7];                  ADD r11, r13, r11 /* MW 8 */
	  1205      "10100011" // /* MW 7 */
	  1206      "11110001" // /* MW 6 */
	  1207      "11011010" // /* MW 5 */
	  1208      "01011110" // /* MW 4 */
	  1209      "00011000" // /* MW 3 */
	  1210      "00000000" // /* MW 2 */
	  1211      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1212      "11110111" // 	                                        ST r8, [p6];                                                MOV.s20 r10, #-2104;          NOP /* MW 8 */
	  1213      "10000111" // /* MW 7 */
	  1214      "01111100" // /* MW 6 */
	  1215      "11101011" // /* MW 5 */
	  1216      "00111111" // /* MW 4 */
	  1217      "00110000" // /* MW 3 */
	  1218      "00011010" // /* MW 2 */
	  1219      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1220      "11110111" // 	                                        ST r9, [sp, #-112];                                         MOV.s20 r9, #-2184;           NOP /* MW 8 */
	  1221      "10000111" // /* MW 7 */
	  1222      "01110111" // /* MW 6 */
	  1223      "11100111" // /* MW 5 */
	  1224      "00111111" // /* MW 4 */
	  1225      "00100000" // /* MW 3 */
	  1226      "00111111" // /* MW 2 */
	  1227      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1228      "11110111" // 	                                                                      ADD r10, r10, r13;            ST.SPIL r8, [sp, #-2380];     NOP /* MW 8 */
	  1229      "01000111" // /* MW 7 */
	  1230      "10110100" // /* MW 6 */
	  1231      "11110110" // /* MW 5 */
	  1232      "11111000" // /* MW 4 */
	  1233      "10100000" // /* MW 3 */
	  1234      "11011010" // /* MW 2 */
	  1235      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1236      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-2396];     NOP /* MW 8 */
	  1237      "01000111" // /* MW 7 */
	  1238      "10100100" // /* MW 6 */
	  1239      "11110110" // /* MW 5 */
	  1240      "11111000" // /* MW 4 */
	  1241      "00000000" // /* MW 3 */
	  1242      "00000000" // /* MW 2 */
	  1243      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1244      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-2412];     NOP /* MW 8 */
	  1245      "01000111" // /* MW 7 */
	  1246      "10010100" // /* MW 6 */
	  1247      "11110110" // /* MW 5 */
	  1248      "11111000" // /* MW 4 */
	  1249      "00000000" // /* MW 3 */
	  1250      "00000000" // /* MW 2 */
	  1251      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1252      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-2428];     NOP /* MW 8 */
	  1253      "01000111" // /* MW 7 */
	  1254      "10000100" // /* MW 6 */
	  1255      "11110110" // /* MW 5 */
	  1256      "11111000" // /* MW 4 */
	  1257      "00000000" // /* MW 3 */
	  1258      "00000000" // /* MW 2 */
	  1259      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1260      "10110111" // 	NOP;                                    ST r11, [sp, #-132];          ADD r11, r9, r13 /* MW 8 */
	  1261      "11101111" // /* MW 7 */
	  1262      "11110111" // /* MW 6 */
	  1263      "11011010" // /* MW 5 */
	  1264      "01101100" // /* MW 4 */
	  1265      "00011000" // /* MW 3 */
	  1266      "00000000" // /* MW 2 */
	  1267      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1268      "11110111" // 	                                        ST r10, [sp, #-140];                                        MOV.s20 r12, #-2120;          NOP /* MW 8 */
	  1269      "10000111" // /* MW 7 */
	  1270      "01111011" // /* MW 6 */
	  1271      "11110011" // /* MW 5 */
	  1272      "00111111" // /* MW 4 */
	  1273      "11101000" // /* MW 3 */
	  1274      "01011110" // /* MW 2 */
	  1275      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1276      "11110111" // 	                                                                      ADD r10, r12, r13;            MOV.s20 r8, #-2056;           NOP /* MW 8 */
	  1277      "10000111" // /* MW 7 */
	  1278      "01111111" // /* MW 6 */
	  1279      "11100011" // /* MW 5 */
	  1280      "00111111" // /* MW 4 */
	  1281      "10100000" // /* MW 3 */
	  1282      "11011100" // /* MW 2 */
	  1283      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1284      "00110111" // 	NOP;                                    ST r14, [sp, #-56];           ADD r14, r8, r13 /* MW 8 */
	  1285      "11111001" // /* MW 7 */
	  1286      "11111101" // /* MW 6 */
	  1287      "01110010" // /* MW 5 */
	  1288      "01101100" // /* MW 4 */
	  1289      "00011000" // /* MW 3 */
	  1290      "00000000" // /* MW 2 */
	  1291      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1292      "11110111" // 	                                        ST r11, [sp, #-136];                                        MOV.s20 r9, #-2248;           NOP /* MW 8 */
	  1293      "10000111" // /* MW 7 */
	  1294      "01110011" // /* MW 6 */
	  1295      "11100111" // /* MW 5 */
	  1296      "00111111" // /* MW 4 */
	  1297      "11110000" // /* MW 3 */
	  1298      "01111110" // /* MW 2 */
	  1299      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1300      "11110111" // 	                                                                      ADD r9, r9, r13;              MOV.s20 r12, #-2232;          NOP /* MW 8 */
	  1301      "10000111" // /* MW 7 */
	  1302      "01110100" // /* MW 6 */
	  1303      "11110011" // /* MW 5 */
	  1304      "00111111" // /* MW 4 */
	  1305      "10010000" // /* MW 3 */
	  1306      "11011001" // /* MW 2 */
	  1307      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1308      "11110111" // 	                                                                      ADD r12, r12, r13;            MOV.s20 r8, #-2152;           NOP /* MW 8 */
	  1309      "10000111" // /* MW 7 */
	  1310      "01111001" // /* MW 6 */
	  1311      "11100011" // /* MW 5 */
	  1312      "00111111" // /* MW 4 */
	  1313      "11000000" // /* MW 3 */
	  1314      "11011100" // /* MW 2 */
	  1315      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
	  1316      "11110111" // 	                                                                      ADD r8, r8, r13;              MOV.s20 r11, #-2072;          NOP /* MW 8 */
	  1317      "10000111" // /* MW 7 */
	  1318      "01111110" // /* MW 6 */
	  1319      "11101111" // /* MW 5 */
	  1320      "00111111" // /* MW 4 */
	  1321      "10000000" // /* MW 3 */
	  1322      "11011000" // /* MW 2 */
	  1323      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1324      "11110111" // 	                                                                      ADD r11, r13, r11;            MOV.u20 ch5, #209715;         NOP /* MW 8 */
	  1325      "00110111" // /* MW 7 */
	  1326      "00110011" // /* MW 6 */
	  1327      "00010111" // /* MW 5 */
	  1328      "01001100" // /* MW 4 */
	  1329      "10110000" // /* MW 3 */
	  1330      "10111101" // /* MW 2 */
	  1331      "00110000" // /* MW 1 */
	  1332      "11110111" // 	                                        ST p6, [sp, #-148];                                         MOV.u20 ch3, #986895;         NOP /* MW 8 */
	  1333      "11110111" // /* MW 7 */
	  1334      "11110000" // /* MW 6 */
	  1335      "00001100" // /* MW 5 */
	  1336      "01111100" // /* MW 4 */
	  1337      "11011000" // /* MW 3 */
	  1338      "11011110" // /* MW 2 */
	  1339      "10101101" // /* MW 1 */
	  1340      "11110111" // 	                                        ST p7, [sp, #-144];                                         MOV.u20 cl3, #65793;          NOP /* MW 8 */
	  1341      "00010111" // /* MW 7 */
	  1342      "00010000" // /* MW 6 */
	  1343      "00101100" // /* MW 5 */
	  1344      "01000100" // /* MW 4 */
	  1345      "11100000" // /* MW 3 */
	  1346      "11111110" // /* MW 2 */
	  1347      "10101101" // /* MW 1 */
	  1348      "11110111" // 	                                        ST r8, [sp, #-160];                                         MOV.u20 cl2, #114688;         NOP /* MW 8 */
	  1349      "00000111" // /* MW 7 */
	  1350      "00000000" // /* MW 6 */
	  1351      "00101000" // /* MW 5 */
	  1352      "01000111" // /* MW 4 */
	  1353      "11000000" // /* MW 3 */
	  1354      "00011110" // /* MW 2 */
	  1355      "10101111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 52 4 first
	  1356      "11110111" // 	                                        ST r12, [sp, #-156];                                        MOV.u20 ls, #1440;            NOP /* MW 8 */
	  1357      "00000111" // /* MW 7 */
	  1358      "01011010" // /* MW 6 */
	  1359      "01100000" // /* MW 5 */
	  1360      "01000000" // /* MW 4 */
	  1361      "11001000" // /* MW 3 */
	  1362      "10011110" // /* MW 2 */
	  1363      "10101111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 52 4
	  1364      "11110111" // 	                                        ST r9, [sp, #-152];                                         MOV.u20 le, #9392;            NOP /* MW 8 */
	  1365      "00000111" // /* MW 7 */
	  1366      "01001011" // /* MW 6 */
	  1367      "01101110" // /* MW 5 */
	  1368      "01000000" // /* MW 4 */
	  1369      "11010000" // /* MW 3 */
	  1370      "00111110" // /* MW 2 */
	  1371      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1372      "11110111" // 	                                        VST wr0, [sp, #-448];         NOP;                          MOV cb1, r11 /* MW 8 */
	  1373      "10100010" // /* MW 7 */
	  1374      "00111101" // /* MW 6 */
	  1375      "00000000" // /* MW 5 */
	  1376      "00000000" // /* MW 4 */
	  1377      "00100000" // /* MW 3 */
	  1378      "00111111" // /* MW 2 */
	  1379      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1380      "11110111" // 	                                        VST wr1, [sp, #-416];         NOP;                          MOV cb0, r14 /* MW 8 */
	  1381      "00100000" // /* MW 7 */
	  1382      "00111111" // /* MW 6 */
	  1383      "00000000" // /* MW 5 */
	  1384      "00000000" // /* MW 4 */
	  1385      "00110000" // /* MW 3 */
	  1386      "10111111" // /* MW 2 */
	  1387      "01110100" // /* MW 1 */
	  1388      "11110111" // 	                                        NOP;                                                        ST.SPIL r10, [sp, #-516];     NOP /* MW 8 */
	  1389      "01000111" // /* MW 7 */
	  1390      "11111100" // /* MW 6 */
	  1391      "11111101" // /* MW 5 */
	  1392      "11111010" // /* MW 4 */
	  1393      "00000000" // /* MW 3 */
	  1394      "00000000" // /* MW 2 */
	  1395      "10000000" // /* MW 1 */
	  1396      "11110111" // 	                                        VST wc0, [sp, #-512];                                       MOVT.s12 cl4, #1365;          NOP /* MW 8 */
	  1397      "01010111" // /* MW 7 */
	  1398      "01010101" // /* MW 6 */
	  1399      "00110000" // /* MW 5 */
	  1400      "00000001" // /* MW 4 */
	  1401      "10000000" // /* MW 3 */
	  1402      "00011111" // /* MW 2 */
	  1403      "10111011" // /* MW 1 */
	  1404      "11110111" // 	                                        VST wc1, [sp, #-480];                                       MOVT.s12 ch5, #819;           NOP /* MW 8 */
	  1405      "00110111" // /* MW 7 */
	  1406      "00110011" // /* MW 6 */
	  1407      "00010100" // /* MW 5 */
	  1408      "00000001" // /* MW 4 */
	  1409      "10001000" // /* MW 3 */
	  1410      "01011111" // /* MW 2 */
	  1411      "10111011" // /* MW 1 */
	  1412      "11110111" // 	                                        VST wr2, [sp, #-320];                                       MOVT.s12 ch3, #240;           NOP /* MW 8 */
	  1413      "00000111" // /* MW 7 */
	  1414      "00001111" // /* MW 6 */
	  1415      "00001100" // /* MW 5 */
	  1416      "00000001" // /* MW 4 */
	  1417      "10110000" // /* MW 3 */
	  1418      "10011111" // /* MW 2 */
	  1419      "10111010" // /* MW 1 */
	  1420      "11110111" // 	                                        VST wr3, [sp, #-96];                                        MOVT.s12 cl3, #16;            NOP /* MW 8 */
	  1421      "00000111" // /* MW 7 */
	  1422      "00000001" // /* MW 6 */
	  1423      "00101100" // /* MW 5 */
	  1424      "00000001" // /* MW 4 */
	  1425      "11101000" // /* MW 3 */
	  1426      "11011111" // /* MW 2 */
	  1427      "10111010" // /* MW 1 */
	  1428      "00111111" // 	NOP;                NOP;                NOP;                                                        MOVT.s12 cl2, #8;             NOP /* MW 12 */
	  1429      "00001000" // /* MW 11 */
	  1430      "10000000" // /* MW 10 */
	  1431      "00010010" // /* MW 9 */
	  1432      "00000000" // /* MW 8 */
	  1433      "00000000" // /* MW 7 */
	  1434      "00000000" // /* MW 6 */
	  1435      "00010000" // /* MW 5 */
	  1436      "00000000" // /* MW 4 */
	  1437      "00000000" // /* MW 3 */
	  1438      "00000000" // /* MW 2 */
	  1439      "00000000" // /* MW 1 */
.label ZLS_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_848
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 262 36
.src_ref 6 "mask.hpp" 262 36
.begin_of_loop
.loop_nesting 1
	  1440      "11110111" // 	VLDA wr2, [sp, #-256];                                                                              MOV.s8 r15, #-1;              VMOV1 vrl0, WSS.md0[ 9] /* MW 8 */
	  1441      "00000011" // /* MW 7 */
	  1442      "10100000" // /* MW 6 */
	  1443      "11100000" // /* MW 5 */
	  1444      "11111111" // /* MW 4 */
	  1445      "00111111" // /* MW 3 */
	  1446      "11111110" // /* MW 2 */
	  1447      "00001010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 89 16
	  1448      "00111111" // 	VLDA wr3, [sp, #-224];NOP;              NOP;                                                        MOV.u20 ch4, #0;              NOP /* MW 12 */
	  1449      "00000000" // /* MW 11 */
	  1450      "00000000" // /* MW 10 */
	  1451      "00000001" // /* MW 9 */
	  1452      "00000100" // /* MW 8 */
	  1453      "00000000" // /* MW 7 */
	  1454      "00000000" // /* MW 6 */
	  1455      "00010000" // /* MW 5 */
	  1456      "00000000" // /* MW 4 */
	  1457      "01000000" // /* MW 3 */
	  1458      "11111110" // /* MW 2 */
	  1459      "00001110" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
	  1460      "11110111" // 	                                        NOP;                                                        LDA.SPIL p4, [sp, #-56];      NOP /* MW 8 */
	  1461      "01100111" // /* MW 7 */
	  1462      "11111001" // /* MW 6 */
	  1463      "10110011" // /* MW 5 */
	  1464      "11000111" // /* MW 4 */
	  1465      "00000000" // /* MW 3 */
	  1466      "00000000" // /* MW 2 */
	  1467      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1468      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-52];      NOP /* MW 8 */
	  1469      "11100111" // /* MW 7 */
	  1470      "11111001" // /* MW 6 */
	  1471      "10111111" // /* MW 5 */
	  1472      "11000111" // /* MW 4 */
	  1473      "00000000" // /* MW 3 */
	  1474      "00000000" // /* MW 2 */
	  1475      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
.src_ref 6 "mask.hpp" 130 25
	  1476      "01110111" // 	LDA p1, [sp, #-44];                                                   NOP;                          VMOV0 vrh0, WSS.md0[ 9] /* MW 8 */
	  1477      "00000000" // /* MW 7 */
	  1478      "00000000" // /* MW 6 */
	  1479      "01000000" // /* MW 5 */
	  1480      "00010000" // /* MW 4 */
	  1481      "01100110" // /* MW 3 */
	  1482      "11111101" // /* MW 2 */
	  1483      "01101001" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
	  1484      "11110111" // 	                                        NOP;                                                        LDA.SPIL p2, [sp, #-148];     NOP /* MW 8 */
	  1485      "11100111" // /* MW 7 */
	  1486      "11101101" // /* MW 6 */
	  1487      "10101011" // /* MW 5 */
	  1488      "11000111" // /* MW 4 */
	  1489      "00000000" // /* MW 3 */
	  1490      "00000000" // /* MW 2 */
	  1491      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  1492      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-576];    NOP /* MW 8 */
	  1493      "00000111" // /* MW 7 */
	  1494      "11000000" // /* MW 6 */
	  1495      "11111101" // /* MW 5 */
	  1496      "11100000" // /* MW 4 */
	  1497      "00000000" // /* MW 3 */
	  1498      "00000000" // /* MW 2 */
	  1499      "10000000" // /* MW 1 */
	  1500      "00000001" // 	NOP /* MW 2 */
	  1501      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  1502      "00000011" // 	NOP;                                                                                                VMOV0 vrl1, WSS.md0[ 9] /* MW 4 */
	  1503      "00011000" // /* MW 3 */
	  1504      "00100001" // /* MW 2 */
	  1505      "01001100" // /* MW 1 */
	  1506      "00000001" // 	NOP /* MW 2 */
	  1507      "00000000" // /* MW 1 */
	  1508      "00000001" // 	NOP /* MW 2 */
	  1509      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
	  1510      "00000011" // 	NOP;                                    ST m0, [p7], #-8 /* MW 4 */
	  1511      "10111000" // /* MW 3 */
	  1512      "00010111" // /* MW 2 */
	  1513      "10101100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	  1514      "11110111" // 	                                        ST m0, [p7], #4;              NOP;                          VMOV0 vrh1, WSS.md0[ 9] /* MW 8 */
	  1515      "10000110" // /* MW 7 */
	  1516      "00110000" // /* MW 6 */
	  1517      "00000001" // /* MW 5 */
	  1518      "00000000" // /* MW 4 */
	  1519      "11110000" // /* MW 3 */
	  1520      "00101000" // /* MW 2 */
	  1521      "01011000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  1522      "01110111" // 	PADDA [p2], #4;                         ST m0, [p7];                                                MOV p5, p7 /* MW 8 */
	  1523      "01000111" // /* MW 7 */
	  1524      "10000011" // /* MW 6 */
	  1525      "01010101" // /* MW 5 */
	  1526      "11111011" // /* MW 4 */
	  1527      "10000110" // /* MW 3 */
	  1528      "10100010" // /* MW 2 */
	  1529      "00001000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  1530      "11110111" // 	                                        VST wr1, [sp, #-608];         NOP;                          MOV p6, p2 /* MW 8 */
	  1531      "01011100" // /* MW 7 */
	  1532      "00110101" // /* MW 6 */
	  1533      "00000000" // /* MW 5 */
	  1534      "00000000" // /* MW 4 */
	  1535      "11010000" // /* MW 3 */
	  1536      "10111110" // /* MW 2 */
	  1537      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 25
.noswbrkpt
	  1538      "01110111" // 	PADDA [p2], #4;                         ST r2, [p1], #-8;                                           MOV r8, p7 /* MW 8 */
	  1539      "11110001" // /* MW 7 */
	  1540      "11001010" // /* MW 6 */
	  1541      "00010101" // /* MW 5 */
	  1542      "11111110" // /* MW 4 */
	  1543      "10000110" // /* MW 3 */
	  1544      "10100010" // /* MW 2 */
	  1545      "00001000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  1546      "11110111" // 	                                        ST r2, [p1], #4;                                            MOV p7, p2;                   VMOV1 vcl0, WSS.md0[ 9] /* MW 8 */
	  1547      "00000111" // /* MW 7 */
	  1548      "00010100" // /* MW 6 */
	  1549      "10111101" // /* MW 5 */
	  1550      "01101010" // /* MW 4 */
	  1551      "01001100" // /* MW 3 */
	  1552      "01010100" // /* MW 2 */
	  1553      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  1554      "01110111" // 	PADDA [p2], #4;                         ST r2, [p1];                                                MOV p3, p1 /* MW 8 */
	  1555      "01000001" // /* MW 7 */
	  1556      "11001011" // /* MW 6 */
	  1557      "11010101" // /* MW 5 */
	  1558      "10011010" // /* MW 4 */
	  1559      "10000110" // /* MW 3 */
	  1560      "10100010" // /* MW 2 */
	  1561      "00001000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
.nohwbrkpt
.noswbrkpt
	  1562      "10000101" // 	MOV p0, p2 /* MW 2 */
	  1563      "10101010" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  1564      "01110111" // 	PADDA [p2], #-12;                                                     NOP;                          MOV r10, p2 /* MW 8 */
	  1565      "00000000" // /* MW 7 */
	  1566      "00000000" // /* MW 6 */
	  1567      "10000000" // /* MW 5 */
	  1568      "10101110" // /* MW 4 */
	  1569      "10000110" // /* MW 3 */
	  1570      "10111010" // /* MW 2 */
	  1571      "00001000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  1572      "00000011" // 	NOP;                                                                                                VMOV0 vch0, WSS.md0[ 9] /* MW 4 */
	  1573      "10011000" // /* MW 3 */
	  1574      "00100100" // /* MW 2 */
	  1575      "01001100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  1576      "00110111" // 	PADDA [p2], #4;                         NOP;                          NOP /* MW 8 */
	  1577      "00000000" // /* MW 7 */
	  1578      "00000000" // /* MW 6 */
	  1579      "00000000" // /* MW 5 */
	  1580      "00000000" // /* MW 4 */
	  1581      "10000000" // /* MW 3 */
	  1582      "10100010" // /* MW 2 */
	  1583      "00001000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  1584      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-672];    NOP /* MW 8 */
	  1585      "00000111" // /* MW 7 */
	  1586      "01100000" // /* MW 6 */
	  1587      "11111101" // /* MW 5 */
	  1588      "11101000" // /* MW 4 */
	  1589      "00000000" // /* MW 3 */
	  1590      "00000000" // /* MW 2 */
	  1591      "10000000" // /* MW 1 */
	  1592      "00000001" // 	NOP /* MW 2 */
	  1593      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  1594      "00000011" // 	NOP;                                                                                                VMOV0 vcl1, WSS.md0[ 9] /* MW 4 */
	  1595      "00011000" // /* MW 3 */
	  1596      "00100101" // /* MW 2 */
	  1597      "01001100" // /* MW 1 */
	  1598      "00000001" // 	NOP /* MW 2 */
	  1599      "00000000" // /* MW 1 */
	  1600      "00000001" // 	NOP /* MW 2 */
	  1601      "00000000" // /* MW 1 */
	  1602      "00000001" // 	NOP /* MW 2 */
	  1603      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
	  1604      "00000011" // 	NOP;                                                                                                VMOV0 vch1, WSS.md0[ 9] /* MW 4 */
	  1605      "10011000" // /* MW 3 */
	  1606      "00100101" // /* MW 2 */
	  1607      "01001100" // /* MW 1 */
	  1608      "00000001" // 	NOP /* MW 2 */
	  1609      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  1610      "11110111" // 	                                        NOP;                                                        VST.SPIL wc1, [sp, #-640];    NOP /* MW 8 */
	  1611      "00000111" // /* MW 7 */
	  1612      "10000000" // /* MW 6 */
	  1613      "11111101" // /* MW 5 */
	  1614      "11101010" // /* MW 4 */
	  1615      "00000000" // /* MW 3 */
	  1616      "00000000" // /* MW 2 */
	  1617      "10000000" // /* MW 1 */
	  1618      "00000001" // 	NOP /* MW 2 */
	  1619      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  1620      "00000011" // 	NOP;                                                                                                VMOV0 vdl0, WSS.md0[ 9] /* MW 4 */
	  1621      "00011000" // /* MW 3 */
	  1622      "00100110" // /* MW 2 */
	  1623      "01001100" // /* MW 1 */
	  1624      "00000001" // 	NOP /* MW 2 */
	  1625      "00000000" // /* MW 1 */
	  1626      "00000001" // 	NOP /* MW 2 */
	  1627      "00000000" // /* MW 1 */
	  1628      "00000001" // 	NOP /* MW 2 */
	  1629      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
	  1630      "00000011" // 	NOP;                                                                                                VMOV0 vdh0, WSS.md0[ 9] /* MW 4 */
	  1631      "10011000" // /* MW 3 */
	  1632      "00100110" // /* MW 2 */
	  1633      "01001100" // /* MW 1 */
	  1634      "00000001" // 	NOP /* MW 2 */
	  1635      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  1636      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-736];    NOP /* MW 8 */
	  1637      "00000111" // /* MW 7 */
	  1638      "00100000" // /* MW 6 */
	  1639      "11111101" // /* MW 5 */
	  1640      "11101100" // /* MW 4 */
	  1641      "00000000" // /* MW 3 */
	  1642      "00000000" // /* MW 2 */
	  1643      "10000000" // /* MW 1 */
	  1644      "00000001" // 	NOP /* MW 2 */
	  1645      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  1646      "01010111" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-576];                                                 VMOV0 vdl1, WSS.md0[ 9] /* MW 8 */
	  1647      "11000000" // /* MW 7 */
	  1648      "00001001" // /* MW 6 */
	  1649      "11010011" // /* MW 5 */
	  1650      "01111101" // /* MW 4 */
	  1651      "00001110" // /* MW 3 */
	  1652      "00000000" // /* MW 2 */
	  1653      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1654      "00000001" // 	NOP /* MW 2 */
	  1655      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1656      "00000001" // 	NOP /* MW 2 */
	  1657      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  1658      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-736] /* MW 4 */
	  1659      "01111000" // /* MW 3 */
	  1660      "11111010" // /* MW 2 */
	  1661      "00011100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
.nohwbrkpt
.noswbrkpt
	  1662      "00000011" // 	NOP;                                                                                                VMOV0 vdh1, WSS.md0[ 9] /* MW 4 */
	  1663      "10011000" // /* MW 3 */
	  1664      "00100111" // /* MW 2 */
	  1665      "01001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1666      "00000001" // 	NOP /* MW 2 */
	  1667      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  1668      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-704];    NOP /* MW 8 */
	  1669      "00000111" // /* MW 7 */
	  1670      "01000000" // /* MW 6 */
	  1671      "11111101" // /* MW 5 */
	  1672      "11101110" // /* MW 4 */
	  1673      "00000000" // /* MW 3 */
	  1674      "00000000" // /* MW 2 */
	  1675      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  1676      "00000111" // 	VLDA.UNPACK.u8 xa, [sp, #-704]; NOP;                                                                                                                                      VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 8 */
	  1677      "00001001" // /* MW 7 */
	  1678      "10111000" // /* MW 6 */
	  1679      "00110000" // /* MW 5 */
	  1680      "00000000" // /* MW 4 */
	  1681      "01001000" // /* MW 3 */
	  1682      "01111101" // /* MW 2 */
	  1683      "00000010" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  1684      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd0, [sp, #-576];    NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  1685      "00000000" // /* MW 15 */
	  1686      "00011101" // /* MW 14 */
	  1687      "00000011" // /* MW 13 */
	  1688      "10000000" // /* MW 12 */
	  1689      "00000000" // /* MW 11 */
	  1690      "11011100" // /* MW 10 */
	  1691      "11001111" // /* MW 9 */
	  1692      "00001110" // /* MW 8 */
	  1693      "00000000" // /* MW 7 */
	  1694      "00000000" // /* MW 6 */
	  1695      "00010000" // /* MW 5 */
	  1696      "00000000" // /* MW 4 */
	  1697      "00000000" // /* MW 3 */
	  1698      "00000000" // /* MW 2 */
	  1699      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.nohwbrkpt
.noswbrkpt
	  1700      "11110111" // 	                                        VST wd1, [sp, #-704];         NOP;                          VMOV0 vcl0, WSS.md0[ 9] /* MW 8 */
	  1701      "10010000" // /* MW 7 */
	  1702      "00110000" // /* MW 6 */
	  1703      "00000001" // /* MW 5 */
	  1704      "00000000" // /* MW 4 */
	  1705      "10100000" // /* MW 3 */
	  1706      "10111110" // /* MW 2 */
	  1707      "01110111" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 122 first
.noswbrkpt
	  1708      "11001111" // 	NOP;                                    VST wd0, [sp, #-800];         OR r13, r4, r6;                                             NOP;                                    VCMP xd, r6, yd.s16, r2, c0, r7, c0, c2 /* MW 12 */
	  1709      "00000101" // /* MW 11 */
	  1710      "01011100" // /* MW 10 */
	  1711      "00011000" // /* MW 9 */
	  1712      "00000000" // /* MW 8 */
	  1713      "00111100" // /* MW 7 */
	  1714      "00000000" // /* MW 6 */
	  1715      "10011010" // /* MW 5 */
	  1716      "10101100" // /* MW 4 */
	  1717      "01110110" // /* MW 3 */
	  1718      "00111110" // /* MW 2 */
	  1719      "01110111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1720      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-832];    NOP /* MW 8 */
	  1721      "00000111" // /* MW 7 */
	  1722      "11000000" // /* MW 6 */
	  1723      "11111100" // /* MW 5 */
	  1724      "11101110" // /* MW 4 */
	  1725      "00000000" // /* MW 3 */
	  1726      "00000000" // /* MW 2 */
	  1727      "10000000" // /* MW 1 */
	  1728      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-800];   NOP /* MW 8 */
	  1729      "00100111" // /* MW 7 */
	  1730      "10011100" // /* MW 6 */
	  1731      "10110011" // /* MW 5 */
	  1732      "11000111" // /* MW 4 */
	  1733      "00000000" // /* MW 3 */
	  1734      "00000000" // /* MW 2 */
	  1735      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  1736      "01110111" // 	VLDA wd1, [sp, #-832];                                                NOP;                          VMOV0 vch0, WSS.md0[ 9] /* MW 8 */
	  1737      "00000000" // /* MW 7 */
	  1738      "00000000" // /* MW 6 */
	  1739      "01000000" // /* MW 5 */
	  1740      "00010010" // /* MW 4 */
	  1741      "10100110" // /* MW 3 */
	  1742      "11111001" // /* MW 2 */
	  1743      "00011110" // /* MW 1 */
	  1744      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-736];    NOP /* MW 8 */
	  1745      "00000111" // /* MW 7 */
	  1746      "00100000" // /* MW 6 */
	  1747      "11111101" // /* MW 5 */
	  1748      "11100000" // /* MW 4 */
	  1749      "00000000" // /* MW 3 */
	  1750      "00000000" // /* MW 2 */
	  1751      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  1752      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-864];    NOP /* MW 8 */
	  1753      "00000111" // /* MW 7 */
	  1754      "10100000" // /* MW 6 */
	  1755      "11111100" // /* MW 5 */
	  1756      "11101000" // /* MW 4 */
	  1757      "00000000" // /* MW 3 */
	  1758      "00000000" // /* MW 2 */
	  1759      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  1760      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-672] /* MW 4 */
	  1761      "11111000" // /* MW 3 */
	  1762      "11111010" // /* MW 2 */
	  1763      "00011100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.nohwbrkpt
.noswbrkpt
	  1764      "11110111" // 	                                        VST wr1, [sp, #-768];         NOP;                          VMOV0 vcl1, WSS.md0[ 9] /* MW 8 */
	  1765      "10010100" // /* MW 7 */
	  1766      "00110000" // /* MW 6 */
	  1767      "00000001" // /* MW 5 */
	  1768      "00000000" // /* MW 4 */
	  1769      "10000000" // /* MW 3 */
	  1770      "10111110" // /* MW 2 */
	  1771      "01110100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1772      "00000001" // 	NOP /* MW 2 */
	  1773      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1774      "00000001" // 	NOP /* MW 2 */
	  1775      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  1776      "00010011" // 	NOP;                                                                                                                                                                      VCMP xd, r4, yd.s16, r7, c0, r2, c0, c2 /* MW 4 */
	  1777      "00010110" // /* MW 3 */
	  1778      "10100000" // /* MW 2 */
	  1779      "01100011" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  1780      "00000011" // 	NOP;                                                                                                VMOV0 vch1, WSS.md0[ 9] /* MW 4 */
	  1781      "10011000" // /* MW 3 */
	  1782      "00100101" // /* MW 2 */
	  1783      "01001100" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122 first
	  1784      "00000011" // 	NOP;                                                                  OR r11, r4, r6 /* MW 4 */
	  1785      "10110000" // /* MW 3 */
	  1786      "01100100" // /* MW 2 */
	  1787      "00110101" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.noswbrkpt
	  1788      "10111000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd0, [sp, #-672];    NOP;                                    VCMP xd, r6, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  1789      "10000000" // /* MW 15 */
	  1790      "00001011" // /* MW 14 */
	  1791      "00000011" // /* MW 13 */
	  1792      "10000000" // /* MW 12 */
	  1793      "00000000" // /* MW 11 */
	  1794      "11010110" // /* MW 10 */
	  1795      "11001111" // /* MW 9 */
	  1796      "00001110" // /* MW 8 */
	  1797      "00000000" // /* MW 7 */
	  1798      "00000000" // /* MW 6 */
	  1799      "00010000" // /* MW 5 */
	  1800      "00000000" // /* MW 4 */
	  1801      "00000000" // /* MW 3 */
	  1802      "00000000" // /* MW 2 */
	  1803      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1804      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-928];    NOP /* MW 8 */
	  1805      "00000111" // /* MW 7 */
	  1806      "01100000" // /* MW 6 */
	  1807      "11111100" // /* MW 5 */
	  1808      "11101110" // /* MW 4 */
	  1809      "00000000" // /* MW 3 */
	  1810      "00000000" // /* MW 2 */
	  1811      "10000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
	  1812      "11110111" // 	                                        ST r11, [p4], #4;                                           VLDA.SPIL wd0, [sp, #-672];   NOP /* MW 8 */
	  1813      "00100111" // /* MW 7 */
	  1814      "10101100" // /* MW 6 */
	  1815      "10110011" // /* MW 5 */
	  1816      "11000111" // /* MW 4 */
	  1817      "01100000" // /* MW 3 */
	  1818      "01110100" // /* MW 2 */
	  1819      "10101111" // /* MW 1 */
	  1820      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-928];   NOP /* MW 8 */
	  1821      "00100111" // /* MW 7 */
	  1822      "10001100" // /* MW 6 */
	  1823      "10111011" // /* MW 5 */
	  1824      "11000111" // /* MW 4 */
	  1825      "00000000" // /* MW 3 */
	  1826      "00000000" // /* MW 2 */
	  1827      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  1828      "11110111" // 	                                        NOP;                                                        VST.SPIL wc1, [sp, #-896];    NOP /* MW 8 */
	  1829      "00000111" // /* MW 7 */
	  1830      "10000000" // /* MW 6 */
	  1831      "11111100" // /* MW 5 */
	  1832      "11101010" // /* MW 4 */
	  1833      "00000000" // /* MW 3 */
	  1834      "00000000" // /* MW 2 */
	  1835      "10000000" // /* MW 1 */
	  1836      "00000001" // 	NOP /* MW 2 */
	  1837      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  1838      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-864] /* MW 4 */
	  1839      "01111000" // /* MW 3 */
	  1840      "11111001" // /* MW 2 */
	  1841      "00011100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1842      "00000001" // 	NOP /* MW 2 */
	  1843      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1844      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr2, [sp, #-384];   NOP /* MW 8 */
	  1845      "00100111" // /* MW 7 */
	  1846      "11010000" // /* MW 6 */
	  1847      "10010011" // /* MW 5 */
	  1848      "11000111" // /* MW 4 */
	  1849      "00000000" // /* MW 3 */
	  1850      "00000000" // /* MW 2 */
	  1851      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1852      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-352];   NOP /* MW 8 */
	  1853      "00100111" // /* MW 7 */
	  1854      "11010100" // /* MW 6 */
	  1855      "10011011" // /* MW 5 */
	  1856      "11000111" // /* MW 4 */
	  1857      "00000000" // /* MW 3 */
	  1858      "00000000" // /* MW 2 */
	  1859      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  1860      "00000111" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-896];                                                                                                                       VCMP xd, r4, yd.s16, r7, c0, r2, c0, c2 /* MW 8 */
	  1861      "00001011" // /* MW 7 */
	  1862      "11010000" // /* MW 6 */
	  1863      "00110001" // /* MW 5 */
	  1864      "00000000" // /* MW 4 */
	  1865      "00111000" // /* MW 3 */
	  1866      "11111001" // /* MW 2 */
	  1867      "00011100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1868      "00000001" // 	NOP /* MW 2 */
	  1869      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122 first
.nohwbrkpt
.noswbrkpt
	  1870      "00000011" // 	NOP;                                                                  OR r11, r4, r6 /* MW 4 */
	  1871      "10110000" // /* MW 3 */
	  1872      "01100100" // /* MW 2 */
	  1873      "00110101" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.nohwbrkpt
.noswbrkpt
	  1874      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd0, [sp, #-864];    NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  1875      "10000000" // /* MW 15 */
	  1876      "00001011" // /* MW 14 */
	  1877      "00000011" // /* MW 13 */
	  1878      "10000000" // /* MW 12 */
	  1879      "00000000" // /* MW 11 */
	  1880      "11001010" // /* MW 10 */
	  1881      "11001111" // /* MW 9 */
	  1882      "00001110" // /* MW 8 */
	  1883      "00000000" // /* MW 7 */
	  1884      "00000000" // /* MW 6 */
	  1885      "00010000" // /* MW 5 */
	  1886      "00000000" // /* MW 4 */
	  1887      "00000000" // /* MW 3 */
	  1888      "00000000" // /* MW 2 */
	  1889      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  1890      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd1, [sp, #-960];    NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  1891      "00000000" // /* MW 15 */
	  1892      "00011101" // /* MW 14 */
	  1893      "00000011" // /* MW 13 */
	  1894      "10000000" // /* MW 12 */
	  1895      "00000000" // /* MW 11 */
	  1896      "11000100" // /* MW 10 */
	  1897      "11101111" // /* MW 9 */
	  1898      "00001110" // /* MW 8 */
	  1899      "00000000" // /* MW 7 */
	  1900      "00000000" // /* MW 6 */
	  1901      "00010000" // /* MW 5 */
	  1902      "00000000" // /* MW 4 */
	  1903      "00000000" // /* MW 3 */
	  1904      "00000000" // /* MW 2 */
	  1905      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  1906      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-640] /* MW 4 */
	  1907      "00111000" // /* MW 3 */
	  1908      "11111011" // /* MW 2 */
	  1909      "00011100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 122 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.src_ref 5 "vector.hpp" 901 40 first
.nohwbrkpt
.noswbrkpt
	  1910      "00001111" // 	NOP;NOP;                                                              OR r9, r4, r6;                VMOV0 vrl0, WSS.md0[ 8];                                              VCMP xc, r4, ya.s16, r2, c0, r7, c0, c2 /* MW 12 */
	  1911      "00000100" // /* MW 11 */
	  1912      "01011100" // /* MW 10 */
	  1913      "00011000" // /* MW 9 */
	  1914      "00000000" // /* MW 8 */
	  1915      "00000000" // /* MW 7 */
	  1916      "11000000" // /* MW 6 */
	  1917      "01001100" // /* MW 5 */
	  1918      "10110010" // /* MW 4 */
	  1919      "00011010" // /* MW 3 */
	  1920      "00000000" // /* MW 2 */
	  1921      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  1922      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd0, [sp, #-896];    NOP;                                    VCMP xc, r6, ya.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  1923      "00000000" // /* MW 15 */
	  1924      "00011101" // /* MW 14 */
	  1925      "00000011" // /* MW 13 */
	  1926      "10000000" // /* MW 12 */
	  1927      "00000000" // /* MW 11 */
	  1928      "11001000" // /* MW 10 */
	  1929      "11001111" // /* MW 9 */
	  1930      "00001110" // /* MW 8 */
	  1931      "00000000" // /* MW 7 */
	  1932      "00000000" // /* MW 6 */
	  1933      "00010000" // /* MW 5 */
	  1934      "00000000" // /* MW 4 */
	  1935      "00000000" // /* MW 3 */
	  1936      "00000000" // /* MW 2 */
	  1937      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.nohwbrkpt
.noswbrkpt
	  1938      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd1, [sp, #-992];    NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  1939      "10000000" // /* MW 15 */
	  1940      "00001011" // /* MW 14 */
	  1941      "00000011" // /* MW 13 */
	  1942      "10000000" // /* MW 12 */
	  1943      "00000000" // /* MW 11 */
	  1944      "11000010" // /* MW 10 */
	  1945      "11101111" // /* MW 9 */
	  1946      "00001110" // /* MW 8 */
	  1947      "00000000" // /* MW 7 */
	  1948      "00000000" // /* MW 6 */
	  1949      "00010000" // /* MW 5 */
	  1950      "00000000" // /* MW 4 */
	  1951      "00000000" // /* MW 3 */
	  1952      "00000000" // /* MW 2 */
	  1953      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 122
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  1954      "11001111" // 	LDA p4, [sp, #-144];NOP;                                              OR r12, r4, r6;               NOP;                                                                  VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 12 */
	  1955      "00000100" // /* MW 11 */
	  1956      "11101000" // /* MW 10 */
	  1957      "00011000" // /* MW 9 */
	  1958      "00000000" // /* MW 8 */
	  1959      "00000000" // /* MW 7 */
	  1960      "00000000" // /* MW 6 */
	  1961      "01100000" // /* MW 5 */
	  1962      "10110010" // /* MW 4 */
	  1963      "00011010" // /* MW 3 */
	  1964      "11110111" // /* MW 2 */
	  1965      "01101100" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  1966      "01011111" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-608];ST r12, [p4], #4;  NOP;                          VMOV0 vrh0, WSS.md0[ 8] /* MW 12 */
	  1967      "00000000" // /* MW 11 */
	  1968      "00100110" // /* MW 10 */
	  1969      "00000000" // /* MW 9 */
	  1970      "00000000" // /* MW 8 */
	  1971      "00011000" // /* MW 7 */
	  1972      "11100101" // /* MW 6 */
	  1973      "10101011" // /* MW 5 */
	  1974      "01111101" // /* MW 4 */
	  1975      "00001110" // /* MW 3 */
	  1976      "00000000" // /* MW 2 */
	  1977      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 5 "compare.hpp" 541 122 first
.nohwbrkpt
.noswbrkpt
	  1978      "00110111" // 	NOP;                                    ST r9, [p4], #4;              OR r9, r4, r6 /* MW 8 */
	  1979      "01000110" // /* MW 7 */
	  1980      "11110011" // /* MW 6 */
	  1981      "01001010" // /* MW 5 */
	  1982      "10110010" // /* MW 4 */
	  1983      "00011010" // /* MW 3 */
	  1984      "00000000" // /* MW 2 */
	  1985      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 262 36 first
.nohwbrkpt
.noswbrkpt
	  1986      "00110111" // 	NOP;                                    ST r9, [p4], #-12;            XOR r12, r9, r15 /* MW 8 */
	  1987      "01110110" // /* MW 7 */
	  1988      "11110011" // /* MW 6 */
	  1989      "11100010" // /* MW 5 */
	  1990      "01111100" // /* MW 4 */
	  1991      "00011011" // /* MW 3 */
	  1992      "00000000" // /* MW 2 */
	  1993      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1994      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-608];    NOP /* MW 8 */
	  1995      "00000111" // /* MW 7 */
	  1996      "10100000" // /* MW 6 */
	  1997      "11111101" // /* MW 5 */
	  1998      "11100000" // /* MW 4 */
	  1999      "00000000" // /* MW 3 */
	  2000      "00000000" // /* MW 2 */
	  2001      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 260 28 first
.nohwbrkpt
.noswbrkpt
	  2002      "10111010" // 	LDA r14, [p4], #4;  NOP;                VST wd0, [sp, #-640];         NOP;                          VMOV0 vrl1, WSS.md0[ 8];      NOP;                                    VCMP xd, r6, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  2003      "10000000" // /* MW 15 */
	  2004      "00001011" // /* MW 14 */
	  2005      "00000011" // /* MW 13 */
	  2006      "00000000" // /* MW 12 */
	  2007      "00000000" // /* MW 11 */
	  2008      "10000000" // /* MW 10 */
	  2009      "00000000" // /* MW 9 */
	  2010      "00100110" // /* MW 8 */
	  2011      "11101100" // /* MW 7 */
	  2012      "01110011" // /* MW 6 */
	  2013      "00000111" // /* MW 5 */
	  2014      "00000000" // /* MW 4 */
	  2015      "00000000" // /* MW 3 */
	  2016      "10100011" // /* MW 2 */
	  2017      "01111110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2018      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-1024];   NOP /* MW 8 */
	  2019      "00000111" // /* MW 7 */
	  2020      "00000000" // /* MW 6 */
	  2021      "11111100" // /* MW 5 */
	  2022      "11101110" // /* MW 4 */
	  2023      "00000000" // /* MW 3 */
	  2024      "00000000" // /* MW 2 */
	  2025      "10000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 6 "mask.hpp" 260 28
.nohwbrkpt
.noswbrkpt
	  2026      "01110111" // 	LDA p5, [sp, #-36];                                                   NOP;                          MOV r9, p4 /* MW 8 */
	  2027      "00000000" // /* MW 7 */
	  2028      "00000000" // /* MW 6 */
	  2029      "01000000" // /* MW 5 */
	  2030      "11001110" // /* MW 4 */
	  2031      "11000110" // /* MW 3 */
	  2032      "11111101" // /* MW 2 */
	  2033      "01101101" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.nohwbrkpt
.noswbrkpt
	  2034      "10010100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd0, [sp, #-640];   NOP;                                    VCMP xc, r1, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  2035      "10000000" // /* MW 15 */
	  2036      "00001011" // /* MW 14 */
	  2037      "00000010" // /* MW 13 */
	  2038      "10000000" // /* MW 12 */
	  2039      "00000010" // /* MW 11 */
	  2040      "00111011" // /* MW 10 */
	  2041      "01111011" // /* MW 9 */
	  2042      "00001100" // /* MW 8 */
	  2043      "00000000" // /* MW 7 */
	  2044      "00000000" // /* MW 6 */
	  2045      "00010000" // /* MW 5 */
	  2046      "00000000" // /* MW 4 */
	  2047      "00000000" // /* MW 3 */
	  2048      "00000000" // /* MW 2 */
	  2049      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.src_ref 5 "vector.hpp" 901 40
.nohwbrkpt
.noswbrkpt
	  2050      "10001111" // 	NOP;                                    VST wd0, [sp, #-1088];                                      VMOV0 vrh1, WSS.md0[ 8];      NOP;                                    VCMP xc, r4, yd.s16, r7, c0, r2, c0, c2 /* MW 12 */
	  2051      "00000100" // /* MW 11 */
	  2052      "11101000" // /* MW 10 */
	  2053      "00011000" // /* MW 9 */
	  2054      "00000000" // /* MW 8 */
	  2055      "00111100" // /* MW 7 */
	  2056      "00000000" // /* MW 6 */
	  2057      "00110001" // /* MW 5 */
	  2058      "10000000" // /* MW 4 */
	  2059      "11101001" // /* MW 3 */
	  2060      "00111101" // /* MW 2 */
	  2061      "01110111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2062      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-1120];   NOP /* MW 8 */
	  2063      "00000111" // /* MW 7 */
	  2064      "10100000" // /* MW 6 */
	  2065      "11111011" // /* MW 5 */
	  2066      "11101110" // /* MW 4 */
	  2067      "00000000" // /* MW 3 */
	  2068      "00000000" // /* MW 2 */
	  2069      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
.nohwbrkpt
.noswbrkpt
	  2070      "10110111" // 	NOP;                                    VST wr1, [sp, #-1056];        OR r4, r4, r1 /* MW 8 */
	  2071      "11101111" // /* MW 7 */
	  2072      "10100101" // /* MW 6 */
	  2073      "00100011" // /* MW 5 */
	  2074      "10001010" // /* MW 4 */
	  2075      "00011010" // /* MW 3 */
	  2076      "00000000" // /* MW 2 */
	  2077      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2078      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1024];  NOP /* MW 8 */
	  2079      "00100111" // /* MW 7 */
	  2080      "10000000" // /* MW 6 */
	  2081      "10111011" // /* MW 5 */
	  2082      "11000111" // /* MW 4 */
	  2083      "00000000" // /* MW 3 */
	  2084      "00000000" // /* MW 2 */
	  2085      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 260 27 first
.nohwbrkpt
.noswbrkpt
	  2086      "01110111" // 	PADDA [p4], #4;                                                       XOR r14, r14, r15;            VMOV0 vrl0, WSS.md0[ 8] /* MW 8 */
	  2087      "11011100" // /* MW 7 */
	  2088      "11011111" // /* MW 6 */
	  2089      "00000110" // /* MW 5 */
	  2090      "00000000" // /* MW 4 */
	  2091      "00100110" // /* MW 3 */
	  2092      "10100011" // /* MW 2 */
	  2093      "00001000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  2094      "11110111" // 	                                        ST r14, [p5];                 NOP;                          MOV r14, p4 /* MW 8 */
	  2095      "01111100" // /* MW 7 */
	  2096      "00110110" // /* MW 6 */
	  2097      "00000000" // /* MW 5 */
	  2098      "00000000" // /* MW 4 */
	  2099      "01010000" // /* MW 3 */
	  2100      "10110100" // /* MW 2 */
	  2101      "01011111" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
	  2102      "00000011" // 	NOP;                                    ST r13, [p5], #4 /* MW 4 */
	  2103      "01101000" // /* MW 3 */
	  2104      "10110100" // /* MW 2 */
	  2105      "10101111" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
	  2106      "00000011" // 	NOP;                                    ST r4, [p5], #4 /* MW 4 */
	  2107      "01101000" // /* MW 3 */
	  2108      "10010100" // /* MW 2 */
	  2109      "10101110" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 7 "aie.hpp" 1614 12
.src_ref 5 "vector.hpp" 901 40 first
	  2110      "11110111" // 	                                        ST r11, [p5], #4;             NOP;                          VMOV0 vrh0, WSS.md0[ 8] /* MW 8 */
	  2111      "00000010" // /* MW 7 */
	  2112      "00110000" // /* MW 6 */
	  2113      "00000001" // /* MW 5 */
	  2114      "00000000" // /* MW 4 */
	  2115      "11010000" // /* MW 3 */
	  2116      "11101000" // /* MW 2 */
	  2117      "01011110" // /* MW 1 */
	  2118      "00000001" // 	NOP /* MW 2 */
	  2119      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 542 37 first
	  2120      "10111100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr0, [sp, #-1152];   NOP;                                    VCMP xd, r7, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  2121      "00000000" // /* MW 15 */
	  2122      "00011101" // /* MW 14 */
	  2123      "00000011" // /* MW 13 */
	  2124      "10000000" // /* MW 12 */
	  2125      "00000000" // /* MW 11 */
	  2126      "10111000" // /* MW 10 */
	  2127      "00001111" // /* MW 9 */
	  2128      "00001110" // /* MW 8 */
	  2129      "00000000" // /* MW 7 */
	  2130      "00000000" // /* MW 6 */
	  2131      "00010000" // /* MW 5 */
	  2132      "00000000" // /* MW 4 */
	  2133      "00000000" // /* MW 3 */
	  2134      "00000000" // /* MW 2 */
	  2135      "00000000" // /* MW 1 */
	  2136      "00000001" // 	NOP /* MW 2 */
	  2137      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 5 "vector.hpp" 901 40 first
	  2138      "01110111" // 	NOP;                                                                  OR r11, r6, r7;               VMOV0 vrl1, WSS.md0[ 8] /* MW 8 */
	  2139      "11010110" // /* MW 7 */
	  2140      "10101110" // /* MW 6 */
	  2141      "10000110" // /* MW 5 */
	  2142      "00000000" // /* MW 4 */
	  2143      "00100110" // /* MW 3 */
	  2144      "00000000" // /* MW 2 */
	  2145      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 262 36 first
	  2146      "10110111" // 	NOP;                                    ST r11, [p5], #-12;           XOR r13, r11, r15 /* MW 8 */
	  2147      "01110110" // /* MW 7 */
	  2148      "11110111" // /* MW 6 */
	  2149      "11101010" // /* MW 5 */
	  2150      "01111101" // /* MW 4 */
	  2151      "00011011" // /* MW 3 */
	  2152      "00000000" // /* MW 2 */
	  2153      "00000000" // /* MW 1 */
	  2154      "00000001" // 	NOP /* MW 2 */
	  2155      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28 first
	  2156      "00110111" // 	LDA r6, [p5], #4;                       NOP;                          NOP /* MW 8 */
	  2157      "00000000" // /* MW 7 */
	  2158      "00000000" // /* MW 6 */
	  2159      "00000000" // /* MW 5 */
	  2160      "00000000" // /* MW 4 */
	  2161      "01000000" // /* MW 3 */
	  2162      "10100011" // /* MW 2 */
	  2163      "01110110" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 260 28
	  2164      "01010111" // 	NOP;                LDB r11, [p5], #4;                                                              VMOV0 vrh1, WSS.md0[ 8] /* MW 8 */
	  2165      "01100000" // /* MW 7 */
	  2166      "00000000" // /* MW 6 */
	  2167      "10110011" // /* MW 5 */
	  2168      "11010001" // /* MW 4 */
	  2169      "00111011" // /* MW 3 */
	  2170      "00000000" // /* MW 2 */
	  2171      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28 first
	  2172      "00000011" // 	NOP;                LDB r7, [p5], #-8 /* MW 4 */
	  2173      "01111000" // /* MW 3 */
	  2174      "10111101" // /* MW 2 */
	  2175      "01101111" // /* MW 1 */
	  2176      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1184];   NOP /* MW 8 */
	  2177      "00000111" // /* MW 7 */
	  2178      "01100000" // /* MW 6 */
	  2179      "11111011" // /* MW 5 */
	  2180      "11100010" // /* MW 4 */
	  2181      "00000000" // /* MW 3 */
	  2182      "00000000" // /* MW 2 */
	  2183      "10000000" // /* MW 1 */
	  2184      "11110111" // 	                                        NOP;                                                        ST.SPIL p5, [sp, #-36];       NOP /* MW 8 */
	  2185      "01000111" // /* MW 7 */
	  2186      "11011100" // /* MW 6 */
	  2187      "11111111" // /* MW 5 */
	  2188      "11101101" // /* MW 4 */
	  2189      "00000000" // /* MW 3 */
	  2190      "00000000" // /* MW 2 */
	  2191      "10000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  2192      "00000011" // 	NOP;                                                                                                VMOV0 vrl0, WSS.md0[ 8] /* MW 4 */
	  2193      "00011000" // /* MW 3 */
	  2194      "00000000" // /* MW 2 */
	  2195      "01001100" // /* MW 1 */
	  2196      "00000001" // 	NOP /* MW 2 */
	  2197      "00000000" // /* MW 1 */
	  2198      "00000001" // 	NOP /* MW 2 */
	  2199      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 260 27 first
.noswbrkpt
	  2200      "00110111" // 	PADDA [p4], #4;                         NOP;                          XOR r6, r6, r15 /* MW 8 */
	  2201      "00000000" // /* MW 7 */
	  2202      "00000000" // /* MW 6 */
	  2203      "00110000" // /* MW 5 */
	  2204      "01111011" // /* MW 4 */
	  2205      "00011011" // /* MW 3 */
	  2206      "10100011" // /* MW 2 */
	  2207      "00001000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
.nohwbrkpt
.noswbrkpt
	  2208      "01111111" // 	NOP;                                    ST r6, [p3];                  XOR r11, r11, r15;            MOV p3, p4;                   VMOV1 vrh0, WSS.md0[ 8] /* MW 12 */
	  2209      "01000000" // /* MW 11 */
	  2210      "01100010" // /* MW 10 */
	  2211      "11110111" // /* MW 9 */
	  2212      "01101101" // /* MW 8 */
	  2213      "01000011" // /* MW 7 */
	  2214      "11011011" // /* MW 6 */
	  2215      "11000101" // /* MW 5 */
	  2216      "11001010" // /* MW 4 */
	  2217      "00000110" // /* MW 3 */
	  2218      "00000000" // /* MW 2 */
	  2219      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25 first
.src_ref 6 "mask.hpp" 260 27 first
	  2220      "10110111" // 	NOP;                                    ST r11, [p1], #4;             XOR r11, r7, r15 /* MW 8 */
	  2221      "01000100" // /* MW 7 */
	  2222      "11110111" // /* MW 6 */
	  2223      "11011010" // /* MW 5 */
	  2224      "01111011" // /* MW 4 */
	  2225      "00011011" // /* MW 3 */
	  2226      "00000000" // /* MW 2 */
	  2227      "00000000" // /* MW 1 */
	  2228      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-1216];   NOP /* MW 8 */
	  2229      "00000111" // /* MW 7 */
	  2230      "01000000" // /* MW 6 */
	  2231      "11111011" // /* MW 5 */
	  2232      "11100000" // /* MW 4 */
	  2233      "00000000" // /* MW 3 */
	  2234      "00000000" // /* MW 2 */
	  2235      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
	  2236      "00000011" // 	NOP;                                    ST r11, [p1], #-8 /* MW 4 */
	  2237      "10001000" // /* MW 3 */
	  2238      "01110111" // /* MW 2 */
	  2239      "10101111" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  2240      "00000011" // 	NOP;                                                                                                VMOV0 vrl1, WSS.md0[ 8] /* MW 4 */
	  2241      "00011000" // /* MW 3 */
	  2242      "00000001" // /* MW 2 */
	  2243      "01001100" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 264 8 first
.noswbrkpt
	  2244      "01110111" // 	LDA r11, [p1];                          PADDS [p4], #4;                                             MOV r7, p1 /* MW 8 */
	  2245      "10001100" // /* MW 7 */
	  2246      "00000010" // /* MW 6 */
	  2247      "11010100" // /* MW 5 */
	  2248      "10011101" // /* MW 4 */
	  2249      "01000110" // /* MW 3 */
	  2250      "11010000" // /* MW 2 */
	  2251      "01111011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.nohwbrkpt
.noswbrkpt
	  2252      "10010101" // 	MOV p1, p4 /* MW 2 */
	  2253      "10110010" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  2254      "01110111" // 	PADDA [p4], #-12;                                                     NOP;                          MOV r6, p4 /* MW 8 */
	  2255      "00000000" // /* MW 7 */
	  2256      "00000000" // /* MW 6 */
	  2257      "10000000" // /* MW 5 */
	  2258      "11001101" // /* MW 4 */
	  2259      "00000110" // /* MW 3 */
	  2260      "10111011" // /* MW 2 */
	  2261      "00001000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15 first
.src_ref 5 "vector.hpp" 901 40 first
	  2262      "00000011" // 	NOP;                                                                                                VMOV0 vrh1, WSS.md0[ 8] /* MW 4 */
	  2263      "10011000" // /* MW 3 */
	  2264      "00000001" // /* MW 2 */
	  2265      "01001100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  2266      "00110111" // 	PADDA [p4], #4;                         NOP;                          NOP /* MW 8 */
	  2267      "00000000" // /* MW 7 */
	  2268      "00000000" // /* MW 6 */
	  2269      "00000000" // /* MW 5 */
	  2270      "00000000" // /* MW 4 */
	  2271      "00000000" // /* MW 3 */
	  2272      "10100011" // /* MW 2 */
	  2273      "00001000" // /* MW 1 */
	  2274      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1248];   NOP /* MW 8 */
	  2275      "00000111" // /* MW 7 */
	  2276      "00100000" // /* MW 6 */
	  2277      "11111011" // /* MW 5 */
	  2278      "11100010" // /* MW 4 */
	  2279      "00000000" // /* MW 3 */
	  2280      "00000000" // /* MW 2 */
	  2281      "10000000" // /* MW 1 */
	  2282      "00000001" // 	NOP /* MW 2 */
	  2283      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
	  2284      "00000011" // 	NOP;                                                                                                VMOV0 vrl0, WSS.md0[ 8] /* MW 4 */
	  2285      "00011000" // /* MW 3 */
	  2286      "00000000" // /* MW 2 */
	  2287      "01001100" // /* MW 1 */
	  2288      "00000001" // 	NOP /* MW 2 */
	  2289      "00000000" // /* MW 1 */
	  2290      "00000001" // 	NOP /* MW 2 */
	  2291      "00000000" // /* MW 1 */
	  2292      "00000001" // 	NOP /* MW 2 */
	  2293      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
	  2294      "00000011" // 	NOP;                                                                                                VMOV0 vrh0, WSS.md0[ 8] /* MW 4 */
	  2295      "10011000" // /* MW 3 */
	  2296      "00000000" // /* MW 2 */
	  2297      "01001100" // /* MW 1 */
	  2298      "00000001" // 	NOP /* MW 2 */
	  2299      "00000000" // /* MW 1 */
	  2300      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-1280];   NOP /* MW 8 */
	  2301      "00000111" // /* MW 7 */
	  2302      "00000000" // /* MW 6 */
	  2303      "11111011" // /* MW 5 */
	  2304      "11100000" // /* MW 4 */
	  2305      "00000000" // /* MW 3 */
	  2306      "00000000" // /* MW 2 */
	  2307      "10000000" // /* MW 1 */
	  2308      "00000001" // 	NOP /* MW 2 */
	  2309      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
	  2310      "00000011" // 	NOP;                                                                                                VMOV0 vrl1, WSS.md0[ 8] /* MW 4 */
	  2311      "00011000" // /* MW 3 */
	  2312      "00000001" // /* MW 2 */
	  2313      "01001100" // /* MW 1 */
	  2314      "00000001" // 	NOP /* MW 2 */
	  2315      "00000000" // /* MW 1 */
	  2316      "00000001" // 	NOP /* MW 2 */
	  2317      "00000000" // /* MW 1 */
	  2318      "00000001" // 	NOP /* MW 2 */
	  2319      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 180 15
.src_ref 5 "vector.hpp" 901 40
	  2320      "00000011" // 	NOP;                                                                                                VMOV0 vrh1, WSS.md0[ 8] /* MW 4 */
	  2321      "10011000" // /* MW 3 */
	  2322      "00000001" // /* MW 2 */
	  2323      "01001100" // /* MW 1 */
	  2324      "00000001" // 	NOP /* MW 2 */
	  2325      "00000000" // /* MW 1 */
	  2326      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1312];   NOP /* MW 8 */
	  2327      "00000111" // /* MW 7 */
	  2328      "11100000" // /* MW 6 */
	  2329      "11111010" // /* MW 5 */
	  2330      "11100010" // /* MW 4 */
	  2331      "00000000" // /* MW 3 */
	  2332      "00000000" // /* MW 2 */
	  2333      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  2334      "01110111" // 	VLDA wd0, [sp, #-1280];                                               NOP;                          MOV p5, r7 /* MW 8 */
	  2335      "00000000" // /* MW 7 */
	  2336      "00000000" // /* MW 6 */
	  2337      "01000000" // /* MW 5 */
	  2338      "01111011" // /* MW 4 */
	  2339      "00000111" // /* MW 3 */
	  2340      "11110110" // /* MW 2 */
	  2341      "00011010" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 371 32
	  2342      "01110111" // 	PADDA [p5], #4;                                                       NOP;                          MOV r0, p2 /* MW 8 */
	  2343      "00000000" // /* MW 7 */
	  2344      "00000000" // /* MW 6 */
	  2345      "00000000" // /* MW 5 */
	  2346      "10101100" // /* MW 4 */
	  2347      "01000110" // /* MW 3 */
	  2348      "10100011" // /* MW 2 */
	  2349      "00001000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
	  2350      "10100101" // 	MOV p2, r14 /* MW 2 */
	  2351      "11111010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14 first
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 264 8 first
	  2352      "01110111" // 	LDA cl5, [p5], #4;                      ST r11, [p2];                                               MOV r11, cl4 /* MW 8 */
	  2353      "01000010" // /* MW 7 */
	  2354      "11101111" // /* MW 6 */
	  2355      "11010101" // /* MW 5 */
	  2356      "11001110" // /* MW 4 */
	  2357      "01000100" // /* MW 3 */
	  2358      "10100011" // /* MW 2 */
	  2359      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  2360      "00110111" // 	LDA cl4, [p5];                          NOP;                          NOP /* MW 8 */
	  2361      "00000000" // /* MW 7 */
	  2362      "00000000" // /* MW 6 */
	  2363      "00000000" // /* MW 5 */
	  2364      "00000000" // /* MW 4 */
	  2365      "01000000" // /* MW 3 */
	  2366      "11010001" // /* MW 2 */
	  2367      "01011100" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  2368      "11110111" // 	                                        ST p5, [sp, #-44];            NOP;                          MOV p5, r0 /* MW 8 */
	  2369      "01011010" // /* MW 7 */
	  2370      "00111000" // /* MW 6 */
	  2371      "00000000" // /* MW 5 */
	  2372      "00000000" // /* MW 4 */
	  2373      "01010000" // /* MW 3 */
	  2374      "01111111" // /* MW 2 */
	  2375      "01011011" // /* MW 1 */
	  2376      "00000001" // 	NOP /* MW 2 */
	  2377      "00000000" // /* MW 1 */
	  2378      "00000001" // 	NOP /* MW 2 */
	  2379      "00000000" // /* MW 1 */
	  2380      "00000001" // 	NOP /* MW 2 */
	  2381      "00000000" // /* MW 1 */
	  2382      "00000001" // 	NOP /* MW 2 */
	  2383      "00000000" // /* MW 1 */
	  2384      "00000001" // 	NOP /* MW 2 */
	  2385      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 6 "mask.hpp" 260 28
	  2386      "11110111" // 	                                        ST cl5, [p2, cs1];            NOP;                          MOV p2, r9 /* MW 8 */
	  2387      "11010100" // /* MW 7 */
	  2388      "00111100" // /* MW 6 */
	  2389      "00000000" // /* MW 5 */
	  2390      "00000000" // /* MW 4 */
	  2391      "10100000" // /* MW 3 */
	  2392      "01110000" // /* MW 2 */
	  2393      "01010111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14
.src_ref 6 "mask.hpp" 260 28 first
.src_ref 6 "mask.hpp" 371 32
	  2394      "01110111" // 	LDA r14, [p2], #4;                      ST cl4, [p3, cs1];                                          MOV p3, r6 /* MW 8 */
	  2395      "00001011" // /* MW 7 */
	  2396      "01110011" // /* MW 6 */
	  2397      "11010101" // /* MW 5 */
	  2398      "01101010" // /* MW 4 */
	  2399      "10000111" // /* MW 3 */
	  2400      "10100010" // /* MW 2 */
	  2401      "01111110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 66 14 first
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 260 28
	  2402      "10110111" // 	LDA r7, [p2], #-8;                      ST r13, [p1, cs1];            MOV.s12 r13, #-2 /* MW 8 */
	  2403      "10000100" // /* MW 7 */
	  2404      "11111011" // /* MW 6 */
	  2405      "11101010" // /* MW 5 */
	  2406      "11111101" // /* MW 4 */
	  2407      "10111111" // /* MW 3 */
	  2408      "10111100" // /* MW 2 */
	  2409      "01110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 371 32 first
.src_ref 6 "mask.hpp" 371 32 first
	  2410      "01010111" // 	LDA r9, [p4], #4;   LDB r8, [p3, cs0];                                                              MOV p1, r8 /* MW 8 */
	  2411      "00100000" // /* MW 7 */
	  2412      "11000101" // /* MW 6 */
	  2413      "01100011" // /* MW 5 */
	  2414      "11100000" // /* MW 4 */
	  2415      "00111000" // /* MW 3 */
	  2416      "10100011" // /* MW 2 */
	  2417      "01111001" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
.src_ref 6 "mask.hpp" 371 32
	  2418      "01110111" // 	LDA r10, [p4], #4;                      ST p2, [sp, #-56];                                          MOV p2, r10 /* MW 8 */
	  2419      "11110010" // /* MW 7 */
	  2420      "10101011" // /* MW 6 */
	  2421      "10010101" // /* MW 5 */
	  2422      "10101010" // /* MW 4 */
	  2423      "00000111" // /* MW 3 */
	  2424      "10100011" // /* MW 2 */
	  2425      "01111010" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  2426      "00000011" // 	NOP;                LDB r6, [p4], #-12 /* MW 4 */
	  2427      "00111000" // /* MW 3 */
	  2428      "10111011" // /* MW 2 */
	  2429      "01101101" // /* MW 1 */
	  2430      "00000001" // 	NOP /* MW 2 */
	  2431      "00000000" // /* MW 1 */
	  2432      "00000001" // 	NOP /* MW 2 */
	  2433      "00000000" // /* MW 1 */
	  2434      "00000001" // 	NOP /* MW 2 */
	  2435      "00000000" // /* MW 1 */
	  2436      "00000001" // 	NOP /* MW 2 */
	  2437      "00000000" // /* MW 1 */
	  2438      "00000001" // 	NOP /* MW 2 */
	  2439      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
	  2440      "11000101" // 	MOV cl4, r9 /* MW 2 */
	  2441      "11100100" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27 first
	  2442      "11110111" // 	                                                                      XOR r14, r14, r15;            ST.SPIL r10, [sp, #-520];     NOP /* MW 8 */
	  2443      "01000111" // /* MW 7 */
	  2444      "11111000" // /* MW 6 */
	  2445      "11111101" // /* MW 5 */
	  2446      "11111010" // /* MW 4 */
	  2447      "11100000" // /* MW 3 */
	  2448      "11111110" // /* MW 2 */
	  2449      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  2450      "10110111" // 	NOP;                                    ST r14, [p1], #4;             XOR r14, r7, r15 /* MW 8 */
	  2451      "01000100" // /* MW 7 */
	  2452      "11111101" // /* MW 6 */
	  2453      "11110010" // /* MW 5 */
	  2454      "01111011" // /* MW 4 */
	  2455      "00011011" // /* MW 3 */
	  2456      "00000000" // /* MW 2 */
	  2457      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.src_ref 6 "mask.hpp" 260 25
	  2458      "10110111" // 	NOP;                                    ST r14, [p1], #-8;            LSHL r14, r9, r15 /* MW 8 */
	  2459      "01111000" // /* MW 7 */
	  2460      "11111101" // /* MW 6 */
	  2461      "11110010" // /* MW 5 */
	  2462      "01111100" // /* MW 4 */
	  2463      "00011111" // /* MW 3 */
	  2464      "00000000" // /* MW 2 */
	  2465      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  2466      "11110111" // 	                                                                      AND r14, r14, r11;            ST.SPIL r6, [sp, #-524];      NOP /* MW 8 */
	  2467      "01000111" // /* MW 7 */
	  2468      "11110100" // /* MW 6 */
	  2469      "11111101" // /* MW 5 */
	  2470      "11110110" // /* MW 4 */
	  2471      "11100000" // /* MW 3 */
	  2472      "10111110" // /* MW 2 */
	  2473      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 264 8 first
	  2474      "00110111" // 	LDA cl5, [p1], #4;                      NOP;                          SUB r14, r9, r14 /* MW 8 */
	  2475      "00000000" // /* MW 7 */
	  2476      "00000000" // /* MW 6 */
	  2477      "11110000" // /* MW 5 */
	  2478      "11110100" // /* MW 4 */
	  2479      "01011000" // /* MW 3 */
	  2480      "10100010" // /* MW 2 */
	  2481      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.src_ref 6 "mask.hpp" 264 8
	  2482      "00010111" // 	NOP;                LDB r7, [p1], #4;                                 LSHL r5, r8, r15 /* MW 8 */
	  2483      "00001010" // /* MW 7 */
	  2484      "11011111" // /* MW 6 */
	  2485      "00100111" // /* MW 5 */
	  2486      "11010001" // /* MW 4 */
	  2487      "00110111" // /* MW 3 */
	  2488      "00000000" // /* MW 2 */
	  2489      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 264 8 first
	  2490      "00110111" // 	LDA cl6, [p1];                          NOP;                          LSHL r9, r10, r15 /* MW 8 */
	  2491      "00000000" // /* MW 7 */
	  2492      "00000000" // /* MW 6 */
	  2493      "01001000" // /* MW 5 */
	  2494      "01111101" // /* MW 4 */
	  2495      "01011111" // /* MW 3 */
	  2496      "11010000" // /* MW 2 */
	  2497      "01011110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30 first
	  2498      "00000011" // 	NOP;                                                                  AND r5, r5, r11 /* MW 4 */
	  2499      "01010000" // /* MW 3 */
	  2500      "10110101" // /* MW 2 */
	  2501      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  2502      "00000011" // 	NOP;                                                                  AND r9, r9, r11 /* MW 4 */
	  2503      "10010000" // /* MW 3 */
	  2504      "10111001" // /* MW 2 */
	  2505      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  2506      "00000011" // 	NOP;                                                                  LSHL r0, r6, r15 /* MW 4 */
	  2507      "00000000" // /* MW 3 */
	  2508      "11110110" // /* MW 2 */
	  2509      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
	  2510      "01110111" // 	NOP;                                                                  SUB r10, r10, r9;             MOV r9, ch5 /* MW 8 */
	  2511      "01010100" // /* MW 7 */
	  2512      "00110011" // /* MW 6 */
	  2513      "01000110" // /* MW 5 */
	  2514      "01011110" // /* MW 4 */
	  2515      "00000100" // /* MW 3 */
	  2516      "00000000" // /* MW 2 */
	  2517      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  2518      "00000011" // 	NOP;                                                                  AND r0, r0, r11 /* MW 4 */
	  2519      "00000000" // /* MW 3 */
	  2520      "10110000" // /* MW 2 */
	  2521      "00110100" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14 first
.src_ref 6 "mask.hpp" 99 18
	  2522      "00110111" // 	NOP;                                    ST cl5, [p6];                 SUB r3, r6, r0 /* MW 8 */
	  2523      "10100011" // /* MW 7 */
	  2524      "10111011" // /* MW 6 */
	  2525      "00011010" // /* MW 5 */
	  2526      "10000011" // /* MW 4 */
	  2527      "00011000" // /* MW 3 */
	  2528      "00000000" // /* MW 2 */
	  2529      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
.src_ref 6 "mask.hpp" 99 18 first
	  2530      "00110111" // 	NOP;                                    ST r7, [p6, cs1];             SUB r7, r8, r5 /* MW 8 */
	  2531      "10000111" // /* MW 7 */
	  2532      "11101111" // /* MW 6 */
	  2533      "00111010" // /* MW 5 */
	  2534      "10101100" // /* MW 4 */
	  2535      "00011000" // /* MW 3 */
	  2536      "00000000" // /* MW 2 */
	  2537      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14 first
.src_ref 6 "mask.hpp" 100 19 first
	  2538      "10110111" // 	NOP;                                    ST cl6, [p7, cs1];            AND r6, r9, r7 /* MW 8 */
	  2539      "10000111" // /* MW 7 */
	  2540      "10111101" // /* MW 6 */
	  2541      "10110010" // /* MW 5 */
	  2542      "00111100" // /* MW 4 */
	  2543      "00011010" // /* MW 3 */
	  2544      "00000000" // /* MW 2 */
	  2545      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 67 14
.src_ref 6 "mask.hpp" 100 39
	  2546      "00110111" // 	NOP;                                    ST r12, [p0, cs1];            LSHL r12, r7, r13 /* MW 8 */
	  2547      "10000100" // /* MW 7 */
	  2548      "11111001" // /* MW 6 */
	  2549      "11100010" // /* MW 5 */
	  2550      "01101011" // /* MW 4 */
	  2551      "00011111" // /* MW 3 */
	  2552      "00000000" // /* MW 2 */
	  2553      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 371 32 first
	  2554      "00010111" // 	NOP;                LDB r7, [p5], #4;                                 AND r12, r12, r9 /* MW 8 */
	  2555      "10011000" // /* MW 7 */
	  2556      "10010011" // /* MW 6 */
	  2557      "10100110" // /* MW 5 */
	  2558      "11010001" // /* MW 4 */
	  2559      "00110111" // /* MW 3 */
	  2560      "00000000" // /* MW 2 */
	  2561      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
.src_ref 6 "mask.hpp" 371 32
	  2562      "00010111" // 	NOP;                LDB r1, [p5], #4;                                 ADD r2, r12, r6 /* MW 8 */
	  2563      "10000100" // /* MW 7 */
	  2564      "00001101" // /* MW 6 */
	  2565      "10100110" // /* MW 5 */
	  2566      "11010001" // /* MW 4 */
	  2567      "00110001" // /* MW 3 */
	  2568      "00000000" // /* MW 2 */
	  2569      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  2570      "00000011" // 	NOP;                                                                  LSHL r6, r10, r13 /* MW 4 */
	  2571      "01100000" // /* MW 3 */
	  2572      "11011010" // /* MW 2 */
	  2573      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  2574      "00010111" // 	NOP;                LDB r0, [p5], #-12;                               AND r5, r6, r9 /* MW 8 */
	  2575      "11001010" // /* MW 7 */
	  2576      "10010010" // /* MW 6 */
	  2577      "10100110" // /* MW 5 */
	  2578      "11011101" // /* MW 4 */
	  2579      "00110000" // /* MW 3 */
	  2580      "00000000" // /* MW 2 */
	  2581      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
.nohwbrkpt
.noswbrkpt
	  2582      "00000011" // 	NOP;                                                                  LSHL r6, r3, r13 /* MW 4 */
	  2583      "01100000" // /* MW 3 */
	  2584      "11010011" // /* MW 2 */
	  2585      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.nohwbrkpt
.noswbrkpt
	  2586      "00000011" // 	NOP;                                                                  AND r6, r6, r9 /* MW 4 */
	  2587      "01100000" // /* MW 3 */
	  2588      "10010110" // /* MW 2 */
	  2589      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.nohwbrkpt
.noswbrkpt
	  2590      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  2591      "00110000" // /* MW 3 */
	  2592      "00111001" // /* MW 2 */
	  2593      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.nohwbrkpt
.noswbrkpt
	  2594      "00000011" // 	NOP;                                                                  ADD r6, r6, r3 /* MW 4 */
	  2595      "01100000" // /* MW 3 */
	  2596      "00110110" // /* MW 2 */
	  2597      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  2598      "01110111" // 	NOP;                                                                  LSHL r0, r7, r15;             MOV ch5, r7 /* MW 8 */
	  2599      "11100000" // /* MW 7 */
	  2600      "11011110" // /* MW 6 */
	  2601      "01000111" // /* MW 5 */
	  2602      "01110001" // /* MW 4 */
	  2603      "00000111" // /* MW 3 */
	  2604      "00000000" // /* MW 2 */
	  2605      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  2606      "11110111" // 	                                                                      AND r0, r0, r11;              ST.SPIL r1, [sp, #-528];      NOP /* MW 8 */
	  2607      "01000111" // /* MW 7 */
	  2608      "11110000" // /* MW 6 */
	  2609      "11111101" // /* MW 5 */
	  2610      "11110001" // /* MW 4 */
	  2611      "00000000" // /* MW 3 */
	  2612      "10110000" // /* MW 2 */
	  2613      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  2614      "00000011" // 	NOP;                                                                  SUB r7, r7, r0 /* MW 4 */
	  2615      "01110000" // /* MW 3 */
	  2616      "00000111" // /* MW 2 */
	  2617      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  2618      "11110111" // 	                                                                      LSHL r12, r14, r13;           ST.SPIL r0, [sp, #-1252];     NOP /* MW 8 */
	  2619      "01000111" // /* MW 7 */
	  2620      "00011100" // /* MW 6 */
	  2621      "11111011" // /* MW 5 */
	  2622      "11110000" // /* MW 4 */
	  2623      "11000000" // /* MW 3 */
	  2624      "11011110" // /* MW 2 */
	  2625      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  2626      "00000011" // 	NOP;                                                                  LSHL r3, r1, r15 /* MW 4 */
	  2627      "00110000" // /* MW 3 */
	  2628      "11110001" // /* MW 2 */
	  2629      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  2630      "00000011" // 	NOP;                                                                  AND r3, r3, r11 /* MW 4 */
	  2631      "00110000" // /* MW 3 */
	  2632      "10110011" // /* MW 2 */
	  2633      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  2634      "00000011" // 	NOP;                                                                  AND r12, r12, r9 /* MW 4 */
	  2635      "11000000" // /* MW 3 */
	  2636      "10011100" // /* MW 2 */
	  2637      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  2638      "00000011" // 	NOP;                                                                  AND r14, r14, r9 /* MW 4 */
	  2639      "11100000" // /* MW 3 */
	  2640      "10011110" // /* MW 2 */
	  2641      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
	  2642      "00000011" // 	NOP;                                                                  SUB r3, r1, r3 /* MW 4 */
	  2643      "00110000" // /* MW 3 */
	  2644      "00110001" // /* MW 2 */
	  2645      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 101 25
	  2646      "01110111" // 	NOP;                                                                  ADD r12, r12, r14;            MOV.s8 r14, #-4 /* MW 8 */
	  2647      "10011000" // /* MW 7 */
	  2648      "00011101" // /* MW 6 */
	  2649      "10000110" // /* MW 5 */
	  2650      "11001111" // /* MW 4 */
	  2651      "00111111" // /* MW 3 */
	  2652      "00000000" // /* MW 2 */
	  2653      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  2654      "00000011" // 	NOP;                                                                  LSHL r1, r0, r15 /* MW 4 */
	  2655      "00010000" // /* MW 3 */
	  2656      "11110000" // /* MW 2 */
	  2657      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
	  2658      "00000011" // 	NOP;                                                                  AND r10, r10, r9 /* MW 4 */
	  2659      "10100000" // /* MW 3 */
	  2660      "10011010" // /* MW 2 */
	  2661      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30 first
	  2662      "00000011" // 	NOP;                                                                  AND r1, r1, r11 /* MW 4 */
	  2663      "00010000" // /* MW 3 */
	  2664      "10110001" // /* MW 2 */
	  2665      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  2666      "10011111" // 	NOP;                LDB r12, [p2, cs0]; NOP;                          ADD r5, r10, r5;              MOV.s8 r10, #-24 /* MW 12 */
	  2667      "10001110" // /* MW 11 */
	  2668      "01111110" // /* MW 10 */
	  2669      "01101001" // /* MW 9 */
	  2670      "11000001" // /* MW 8 */
	  2671      "00000000" // /* MW 7 */
	  2672      "00000000" // /* MW 6 */
	  2673      "01000000" // /* MW 5 */
	  2674      "11100000" // /* MW 4 */
	  2675      "00111100" // /* MW 3 */
	  2676      "00000000" // /* MW 2 */
	  2677      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
.nohwbrkpt
.noswbrkpt
	  2678      "00000011" // 	NOP;                                                                  SUB r0, r0, r1 /* MW 4 */
	  2679      "00000000" // /* MW 3 */
	  2680      "00010000" // /* MW 2 */
	  2681      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.nohwbrkpt
.noswbrkpt
	  2682      "00000011" // 	NOP;                                                                  LSHL r1, r5, r14 /* MW 4 */
	  2683      "00010000" // /* MW 3 */
	  2684      "11100101" // /* MW 2 */
	  2685      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.nohwbrkpt
.noswbrkpt
	  2686      "00000011" // 	NOP;                                                                  ADD r5, r1, r5 /* MW 4 */
	  2687      "01010000" // /* MW 3 */
	  2688      "01010001" // /* MW 2 */
	  2689      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
.nohwbrkpt
.noswbrkpt
	  2690      "00000011" // 	NOP;                                                                  LSHL r4, r2, r14 /* MW 4 */
	  2691      "01000000" // /* MW 3 */
	  2692      "11100010" // /* MW 2 */
	  2693      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.nohwbrkpt
.noswbrkpt
	  2694      "00000011" // 	NOP;                                                                  ADD r2, r4, r2 /* MW 4 */
	  2695      "00100000" // /* MW 3 */
	  2696      "00100100" // /* MW 2 */
	  2697      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
.nohwbrkpt
.noswbrkpt
	  2698      "00000011" // 	NOP;                                                                  LSHL r1, r12, r14 /* MW 4 */
	  2699      "00010000" // /* MW 3 */
	  2700      "11101100" // /* MW 2 */
	  2701      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.nohwbrkpt
.noswbrkpt
	  2702      "00000011" // 	NOP;                                                                  ADD r4, r12, r1 /* MW 4 */
	  2703      "01000000" // /* MW 3 */
	  2704      "00011100" // /* MW 2 */
	  2705      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  2706      "00000011" // 	NOP;                                                                  LSHL r1, r7, r13 /* MW 4 */
	  2707      "00010000" // /* MW 3 */
	  2708      "11010111" // /* MW 2 */
	  2709      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  2710      "00000011" // 	NOP;                                                                  AND r1, r1, r9 /* MW 4 */
	  2711      "00010000" // /* MW 3 */
	  2712      "10010001" // /* MW 2 */
	  2713      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  2714      "00000011" // 	NOP;                                                                  AND r7, r9, r7 /* MW 4 */
	  2715      "01110000" // /* MW 3 */
	  2716      "01111001" // /* MW 2 */
	  2717      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  2718      "00000011" // 	NOP;                                                                  ADD r7, r1, r7 /* MW 4 */
	  2719      "01110000" // /* MW 3 */
	  2720      "01110001" // /* MW 2 */
	  2721      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  2722      "00000011" // 	NOP;                                                                  LSHL r1, r6, r14 /* MW 4 */
	  2723      "00010000" // /* MW 3 */
	  2724      "11100110" // /* MW 2 */
	  2725      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  2726      "00000011" // 	NOP;                                                                  LSHL r15, r12, r15 /* MW 4 */
	  2727      "11110000" // /* MW 3 */
	  2728      "11111100" // /* MW 2 */
	  2729      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  2730      "00000011" // 	NOP;                                                                  AND r15, r11, r15 /* MW 4 */
	  2731      "11110000" // /* MW 3 */
	  2732      "11111011" // /* MW 2 */
	  2733      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  2734      "00000011" // 	NOP;                                                                  SUB r15, r12, r15 /* MW 4 */
	  2735      "11110000" // /* MW 3 */
	  2736      "11111100" // /* MW 2 */
	  2737      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20 first
	  2738      "00000011" // 	NOP;                                                                  ADD r6, r6, r1 /* MW 4 */
	  2739      "01100000" // /* MW 3 */
	  2740      "00010110" // /* MW 2 */
	  2741      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  2742      "00000011" // 	NOP;                                                                  LSHL r1, r15, r13 /* MW 4 */
	  2743      "00010000" // /* MW 3 */
	  2744      "11011111" // /* MW 2 */
	  2745      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  2746      "00000011" // 	NOP;                                                                  AND r1, r1, r9 /* MW 4 */
	  2747      "00010000" // /* MW 3 */
	  2748      "10010001" // /* MW 2 */
	  2749      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  2750      "00000011" // 	NOP;                                                                  AND r15, r9, r15 /* MW 4 */
	  2751      "11110000" // /* MW 3 */
	  2752      "11111001" // /* MW 2 */
	  2753      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  2754      "00000011" // 	NOP;                                                                  ADD r15, r1, r15 /* MW 4 */
	  2755      "11110000" // /* MW 3 */
	  2756      "11110001" // /* MW 2 */
	  2757      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  2758      "00000011" // 	NOP;                                                                  LSHL r1, r3, r13 /* MW 4 */
	  2759      "00010000" // /* MW 3 */
	  2760      "11010011" // /* MW 2 */
	  2761      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  2762      "00000011" // 	NOP;                                                                  AND r1, r1, r9 /* MW 4 */
	  2763      "00010000" // /* MW 3 */
	  2764      "10010001" // /* MW 2 */
	  2765      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  2766      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  2767      "00110000" // /* MW 3 */
	  2768      "00111001" // /* MW 2 */
	  2769      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 101 31
	  2770      "01110111" // 	NOP;                                                                  ADD r1, r1, r3;               MOV r3, ch3 /* MW 8 */
	  2771      "00100010" // /* MW 7 */
	  2772      "00000110" // /* MW 6 */
	  2773      "11000110" // /* MW 5 */
	  2774      "00111100" // /* MW 4 */
	  2775      "00000100" // /* MW 3 */
	  2776      "00000000" // /* MW 2 */
	  2777      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  2778      "00000011" // 	NOP;                                                                  LSHL r14, r7, r14 /* MW 4 */
	  2779      "11100000" // /* MW 3 */
	  2780      "11100111" // /* MW 2 */
	  2781      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 44
.src_ref 6 "mask.hpp" 101 44
	  2782      "01110111" // 	NOP;                                                                  ADD r7, r14, r7;              MOV r14, cl3 /* MW 8 */
	  2783      "11001110" // /* MW 7 */
	  2784      "00001111" // /* MW 6 */
	  2785      "10000110" // /* MW 5 */
	  2786      "10111111" // /* MW 4 */
	  2787      "00000100" // /* MW 3 */
	  2788      "00000000" // /* MW 2 */
	  2789      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2790      "00000011" // 	NOP;                                                                  AND r4, r4, r3 /* MW 4 */
	  2791      "01000000" // /* MW 3 */
	  2792      "00110100" // /* MW 2 */
	  2793      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2794      "00000011" // 	NOP;                                                                  AND r2, r2, r3 /* MW 4 */
	  2795      "00100000" // /* MW 3 */
	  2796      "00110010" // /* MW 2 */
	  2797      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2798      "00000011" // 	NOP;                                                                  AND r5, r5, r3 /* MW 4 */
	  2799      "01010000" // /* MW 3 */
	  2800      "00110101" // /* MW 2 */
	  2801      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2802      "00000011" // 	NOP;                                                                  MUL r4, r4, r14 /* MW 4 */
	  2803      "01000000" // /* MW 3 */
	  2804      "11100100" // /* MW 2 */
	  2805      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2806      "00000011" // 	NOP;                                                                  MUL r2, r2, r14 /* MW 4 */
	  2807      "00100000" // /* MW 3 */
	  2808      "11100010" // /* MW 2 */
	  2809      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2810      "00000011" // 	NOP;                                                                  MUL r5, r14, r5 /* MW 4 */
	  2811      "01010000" // /* MW 3 */
	  2812      "01011110" // /* MW 2 */
	  2813      "00110111" // /* MW 1 */
	  2814      "00000001" // 	NOP /* MW 2 */
	  2815      "00000000" // /* MW 1 */
	  2816      "00000001" // 	NOP /* MW 2 */
	  2817      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  2818      "00000011" // 	NOP;                                                                  LSHL r4, r4, r10 /* MW 4 */
	  2819      "01000000" // /* MW 3 */
	  2820      "10100100" // /* MW 2 */
	  2821      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  2822      "00000011" // 	NOP;                                                                  LSHL r2, r2, r10 /* MW 4 */
	  2823      "00100000" // /* MW 3 */
	  2824      "10100010" // /* MW 2 */
	  2825      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  2826      "00000011" // 	NOP;                                                                  ADD r4, r4, r2 /* MW 4 */
	  2827      "01000000" // /* MW 3 */
	  2828      "00100100" // /* MW 2 */
	  2829      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
	  2830      "00000011" // 	NOP;                                                                  LSHL r5, r5, r10 /* MW 4 */
	  2831      "01010000" // /* MW 3 */
	  2832      "10100101" // /* MW 2 */
	  2833      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 371 18 first
	  2834      "01110111" // 	NOP;                                                                  ADD r4, r4, r5;               MOV.s8 r5, #-4 /* MW 8 */
	  2835      "10001000" // /* MW 7 */
	  2836      "00001010" // /* MW 6 */
	  2837      "01000110" // /* MW 5 */
	  2838      "11001101" // /* MW 4 */
	  2839      "00111111" // /* MW 3 */
	  2840      "00000000" // /* MW 2 */
	  2841      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31 first
	  2842      "00000011" // 	NOP;                                                                  AND r6, r6, r3 /* MW 4 */
	  2843      "01100000" // /* MW 3 */
	  2844      "00110110" // /* MW 2 */
	  2845      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  2846      "00000011" // 	NOP;                                                                  LSHL r13, r0, r13 /* MW 4 */
	  2847      "11010000" // /* MW 3 */
	  2848      "11010000" // /* MW 2 */
	  2849      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44 first
	  2850      "00000011" // 	NOP;                                                                  MUL r6, r6, r14 /* MW 4 */
	  2851      "01100000" // /* MW 3 */
	  2852      "11100110" // /* MW 2 */
	  2853      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  2854      "00000011" // 	NOP;                                                                  AND r13, r9, r13 /* MW 4 */
	  2855      "11010000" // /* MW 3 */
	  2856      "11011001" // /* MW 2 */
	  2857      "00110100" // /* MW 1 */
	  2858      "00000001" // 	NOP /* MW 2 */
	  2859      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
	  2860      "00000011" // 	NOP;                                                                  LSHL r6, r6, r10 /* MW 4 */
	  2861      "01100000" // /* MW 3 */
	  2862      "10100110" // /* MW 2 */
	  2863      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
	  2864      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  2865      "00000000" // /* MW 3 */
	  2866      "10010000" // /* MW 2 */
	  2867      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  2868      "00000011" // 	NOP;                                                                  ADD r6, r4, r6 /* MW 4 */
	  2869      "01100000" // /* MW 3 */
	  2870      "01100100" // /* MW 2 */
	  2871      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
	  2872      "00000011" // 	NOP;                                                                  ADD r13, r0, r13 /* MW 4 */
	  2873      "11010000" // /* MW 3 */
	  2874      "11010000" // /* MW 2 */
	  2875      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  2876      "00000011" // 	NOP;                                                                  LSHL r4, r15, r5 /* MW 4 */
	  2877      "01000000" // /* MW 3 */
	  2878      "01011111" // /* MW 2 */
	  2879      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  2880      "00000011" // 	NOP;                                                                  LSHL r0, r1, r5 /* MW 4 */
	  2881      "00000000" // /* MW 3 */
	  2882      "01010001" // /* MW 2 */
	  2883      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  2884      "00000011" // 	NOP;                                                                  LSHL r5, r13, r5 /* MW 4 */
	  2885      "01010000" // /* MW 3 */
	  2886      "01011101" // /* MW 2 */
	  2887      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  2888      "00000011" // 	NOP;                                                                  ADD r15, r4, r15 /* MW 4 */
	  2889      "11110000" // /* MW 3 */
	  2890      "11110100" // /* MW 2 */
	  2891      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  2892      "00000011" // 	NOP;                                                                  ADD r13, r5, r13 /* MW 4 */
	  2893      "11010000" // /* MW 3 */
	  2894      "11010101" // /* MW 2 */
	  2895      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  2896      "00000011" // 	NOP;                                                                  ADD r0, r0, r1 /* MW 4 */
	  2897      "00000000" // /* MW 3 */
	  2898      "00010000" // /* MW 2 */
	  2899      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2900      "00000011" // 	NOP;                                                                  AND r15, r3, r15 /* MW 4 */
	  2901      "11110000" // /* MW 3 */
	  2902      "11110011" // /* MW 2 */
	  2903      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2904      "00000011" // 	NOP;                                                                  AND r7, r3, r7 /* MW 4 */
	  2905      "01110000" // /* MW 3 */
	  2906      "01110011" // /* MW 2 */
	  2907      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2908      "00000011" // 	NOP;                                                                  AND r13, r13, r3 /* MW 4 */
	  2909      "11010000" // /* MW 3 */
	  2910      "00111101" // /* MW 2 */
	  2911      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  2912      "00000011" // 	NOP;                                                                  AND r0, r0, r3 /* MW 4 */
	  2913      "00000000" // /* MW 3 */
	  2914      "00110000" // /* MW 2 */
	  2915      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2916      "00000011" // 	NOP;                                                                  MUL r15, r14, r15 /* MW 4 */
	  2917      "11110000" // /* MW 3 */
	  2918      "11111110" // /* MW 2 */
	  2919      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2920      "00000011" // 	NOP;                                                                  MUL r7, r14, r7 /* MW 4 */
	  2921      "01110000" // /* MW 3 */
	  2922      "01111110" // /* MW 2 */
	  2923      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2924      "00000011" // 	NOP;                                                                  MUL r13, r14, r13 /* MW 4 */
	  2925      "11010000" // /* MW 3 */
	  2926      "11011110" // /* MW 2 */
	  2927      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  2928      "00000011" // 	NOP;                                                                  MUL r0, r0, r14 /* MW 4 */
	  2929      "00000000" // /* MW 3 */
	  2930      "11100000" // /* MW 2 */
	  2931      "00110111" // /* MW 1 */
	  2932      "00000001" // 	NOP /* MW 2 */
	  2933      "00000000" // /* MW 1 */
	  2934      "00000001" // 	NOP /* MW 2 */
	  2935      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  2936      "00000011" // 	NOP;                                                                  LSHL r14, r15, r10 /* MW 4 */
	  2937      "11100000" // /* MW 3 */
	  2938      "10101111" // /* MW 2 */
	  2939      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  2940      "00000011" // 	NOP;                                                                  LSHL r15, r7, r10 /* MW 4 */
	  2941      "11110000" // /* MW 3 */
	  2942      "10100111" // /* MW 2 */
	  2943      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  2944      "00000011" // 	NOP;                                                                  LSHL r7, r0, r10 /* MW 4 */
	  2945      "01110000" // /* MW 3 */
	  2946      "10100000" // /* MW 2 */
	  2947      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  2948      "00000011" // 	NOP;                                                                  LSHL r10, r13, r10 /* MW 4 */
	  2949      "10100000" // /* MW 3 */
	  2950      "10101101" // /* MW 2 */
	  2951      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  2952      "00000011" // 	NOP;                                                                  ADD r13, r14, r15 /* MW 4 */
	  2953      "11010000" // /* MW 3 */
	  2954      "11111110" // /* MW 2 */
	  2955      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  2956      "00000011" // 	NOP;                                                                  ADD r13, r13, r7 /* MW 4 */
	  2957      "11010000" // /* MW 3 */
	  2958      "01111101" // /* MW 2 */
	  2959      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  2960      "00000011" // 	NOP;                                                                  ADD r10, r10, r13 /* MW 4 */
	  2961      "10100000" // /* MW 3 */
	  2962      "11011010" // /* MW 2 */
	  2963      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 70 34 first
	  2964      "00000011" // 	NOP;                                                                  ADD r10, r10, r6 /* MW 4 */
	  2965      "10100000" // /* MW 3 */
	  2966      "01101010" // /* MW 2 */
	  2967      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 71 12 first
	  2968      "11110111" // 	                                        NOP;                                                        BEQZ r10,#3056;               NOP /* MW 8 */
	  2969      "00000111" // /* MW 7 */
	  2970      "10111111" // /* MW 6 */
	  2971      "01000000" // /* MW 5 */
	  2972      "10000001" // /* MW 4 */
	  2973      "00000000" // /* MW 3 */
	  2974      "00000000" // /* MW 2 */
	  2975      "10000000" // /* MW 1 */
.delay_slot
	  2976      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1312];  NOP /* MW 8 */
	  2977      "00100111" // /* MW 7 */
	  2978      "01011100" // /* MW 6 */
	  2979      "10111011" // /* MW 5 */
	  2980      "11000111" // /* MW 4 */
	  2981      "00000000" // /* MW 3 */
	  2982      "00000000" // /* MW 2 */
	  2983      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  2984      "11110111" // 	                                        NOP;                                                        VLDA.SPIL vrl2, [sp, #-128];  NOP /* MW 8 */
	  2985      "00100111" // /* MW 7 */
	  2986      "11110000" // /* MW 6 */
	  2987      "00010011" // /* MW 5 */
	  2988      "11001111" // /* MW 4 */
	  2989      "00000000" // /* MW 3 */
	  2990      "00000000" // /* MW 2 */
	  2991      "10000000" // /* MW 1 */
.delay_slot
	  2992      "11110111" // 	                                        NOP;                                                        ST.SPIL p4, [sp, #-144];      NOP /* MW 8 */
	  2993      "01000111" // /* MW 7 */
	  2994      "01110000" // /* MW 6 */
	  2995      "11111111" // /* MW 5 */
	  2996      "11101100" // /* MW 4 */
	  2997      "00000000" // /* MW 3 */
	  2998      "00000000" // /* MW 2 */
	  2999      "10000000" // /* MW 1 */
.delay_slot
	  3000      "11110111" // 	                                        NOP;                                                        ST.SPIL p1, [sp, #-52];       NOP /* MW 8 */
	  3001      "01000111" // /* MW 7 */
	  3002      "11001100" // /* MW 6 */
	  3003      "11111111" // /* MW 5 */
	  3004      "11101001" // /* MW 4 */
	  3005      "00000000" // /* MW 3 */
	  3006      "00000000" // /* MW 2 */
	  3007      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  3008      "00111111" // 	NOP;                MOV.s9 r2, #-1;     NOP;                                                        ST.SPIL p5, [sp, #-148];      NOP /* MW 12 */
	  3009      "11000100" // /* MW 11 */
	  3010      "11110110" // /* MW 10 */
	  3011      "11011111" // /* MW 9 */
	  3012      "00001110" // /* MW 8 */
	  3013      "00000000" // /* MW 7 */
	  3014      "00000000" // /* MW 6 */
	  3015      "11110000" // /* MW 5 */
	  3016      "11111111" // /* MW 4 */
	  3017      "00010010" // /* MW 3 */
	  3018      "00000000" // /* MW 2 */
	  3019      "00000000" // /* MW 1 */
	  3020      "00000001" // 	NOP /* MW 2 */
	  3021      "00000000" // /* MW 1 */
	  3022      "00000001" // 	NOP /* MW 2 */
	  3023      "00000000" // /* MW 1 */
	  3024      "11110111" // 	                                        NOP;                                                        J #3072;                      NOP /* MW 8 */
	  3025      "00000111" // /* MW 7 */
	  3026      "11000000" // /* MW 6 */
	  3027      "00000000" // /* MW 5 */
	  3028      "10100000" // /* MW 4 */
	  3029      "00000000" // /* MW 3 */
	  3030      "00000000" // /* MW 2 */
	  3031      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23 first
.delay_slot
	  3032      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[0], r2 /* MW 4 */
	  3033      "00011000" // /* MW 3 */
	  3034      "01011010" // /* MW 2 */
	  3035      "00100010" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  3036      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[1], r10 /* MW 4 */
	  3037      "00011000" // /* MW 3 */
	  3038      "01011010" // /* MW 2 */
	  3039      "00101011" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8 first
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.delay_slot
	  3040      "00111111" // 	MOV.s10 r2, #0;     NOP;                NOP;                                                        MOV.s8 r7, #32;               VMOV1 WMS.md0[10], vrl2, #0 /* MW 12 */
	  3041      "10010000" // /* MW 11 */
	  3042      "11000000" // /* MW 10 */
	  3043      "00001101" // /* MW 9 */
	  3044      "01110010" // /* MW 8 */
	  3045      "00000000" // /* MW 7 */
	  3046      "00000000" // /* MW 6 */
	  3047      "00010000" // /* MW 5 */
	  3048      "00000000" // /* MW 4 */
	  3049      "00000000" // /* MW 3 */
	  3050      "00000000" // /* MW 2 */
	  3051      "00111010" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3052      "00000001" // 	NOP /* MW 2 */
	  3053      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3054      "00000001" // 	NOP /* MW 2 */
	  3055      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_2464
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
	  3056      "00000010" // 	NOP;                NOP;                NOP;                          MOV.s12 r7, #32;              MOV.s8 r2, #0;                NOP;                                    NOP /* MW 16 */
	  3057      "00000000" // /* MW 15 */
	  3058      "00000000" // /* MW 14 */
	  3059      "10111000" // /* MW 13 */
	  3060      "01000001" // /* MW 12 */
	  3061      "00100000" // /* MW 11 */
	  3062      "10000000" // /* MW 10 */
	  3063      "00001100" // /* MW 9 */
	  3064      "00110000" // /* MW 8 */
	  3065      "00000000" // /* MW 7 */
	  3066      "00000000" // /* MW 6 */
	  3067      "00000000" // /* MW 5 */
	  3068      "00000000" // /* MW 4 */
	  3069      "00000000" // /* MW 3 */
	  3070      "00000000" // /* MW 2 */
	  3071      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_2480
.src_ref 3 "my_kernel_1.cpp" 77 30
.src_ref 3 "my_kernel_1.cpp" 106 16
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
	  3072      "01110111" // 	VLDA wr1, [sp, #-1184];                                               MOV.s12 r10, #0;              MOV.s8 r13, #0 /* MW 8 */
	  3073      "01110100" // /* MW 7 */
	  3074      "00000000" // /* MW 6 */
	  3075      "01001000" // /* MW 5 */
	  3076      "00001111" // /* MW 4 */
	  3077      "11110000" // /* MW 3 */
	  3078      "11110110" // /* MW 2 */
	  3079      "00000110" // /* MW 1 */
	  3080      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1152];  NOP /* MW 8 */
	  3081      "00100111" // /* MW 7 */
	  3082      "01110000" // /* MW 6 */
	  3083      "10000011" // /* MW 5 */
	  3084      "11000111" // /* MW 4 */
	  3085      "00000000" // /* MW 3 */
	  3086      "00000000" // /* MW 2 */
	  3087      "10000000" // /* MW 1 */
.noswbrkpt
	  3088      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr2, [sp, #-608];   NOP /* MW 8 */
	  3089      "00100111" // /* MW 7 */
	  3090      "10110100" // /* MW 6 */
	  3091      "10010011" // /* MW 5 */
	  3092      "11000111" // /* MW 4 */
	  3093      "00000000" // /* MW 3 */
	  3094      "00000000" // /* MW 2 */
	  3095      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3096      "11110111" // 	                                        NOP;                                                        VST.SPIL vrl2, [sp, #-128];   NOP /* MW 8 */
	  3097      "10000111" // /* MW 7 */
	  3098      "10000000" // /* MW 6 */
	  3099      "11111111" // /* MW 5 */
	  3100      "11000100" // /* MW 4 */
	  3101      "00000000" // /* MW 3 */
	  3102      "00000000" // /* MW 2 */
	  3103      "10000000" // /* MW 1 */
	  3104      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-1216];  NOP /* MW 8 */
	  3105      "00100111" // /* MW 7 */
	  3106      "01101000" // /* MW 6 */
	  3107      "10100011" // /* MW 5 */
	  3108      "11000111" // /* MW 4 */
	  3109      "00000000" // /* MW 3 */
	  3110      "00000000" // /* MW 2 */
	  3111      "10000000" // /* MW 1 */
	  3112      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-1056];  NOP /* MW 8 */
	  3113      "00100111" // /* MW 7 */
	  3114      "01111100" // /* MW 6 */
	  3115      "10011011" // /* MW 5 */
	  3116      "11000111" // /* MW 4 */
	  3117      "00000000" // /* MW 3 */
	  3118      "00000000" // /* MW 2 */
	  3119      "10000000" // /* MW 1 */
	  3120      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc1, [sp, #-1248];  NOP /* MW 8 */
	  3121      "00100111" // /* MW 7 */
	  3122      "01100100" // /* MW 6 */
	  3123      "10101011" // /* MW 5 */
	  3124      "11000111" // /* MW 4 */
	  3125      "00000000" // /* MW 3 */
	  3126      "00000000" // /* MW 2 */
	  3127      "10000000" // /* MW 1 */
	  3128      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1152];   NOP /* MW 8 */
	  3129      "00000111" // /* MW 7 */
	  3130      "10000000" // /* MW 6 */
	  3131      "11111011" // /* MW 5 */
	  3132      "11100010" // /* MW 4 */
	  3133      "00000000" // /* MW 3 */
	  3134      "00000000" // /* MW 2 */
	  3135      "10000000" // /* MW 1 */
.noswbrkpt
	  3136      "00110111" // 	VLDA.UNPACK.u8 xa, [sp, #-1152];        NOP;                          NOP /* MW 8 */
	  3137      "00000000" // /* MW 7 */
	  3138      "00000000" // /* MW 6 */
	  3139      "00000000" // /* MW 5 */
	  3140      "00000000" // /* MW 4 */
	  3141      "00000000" // /* MW 3 */
	  3142      "11110111" // /* MW 2 */
	  3143      "00000100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3144      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-1056];   NOP /* MW 8 */
	  3145      "00000111" // /* MW 7 */
	  3146      "11100000" // /* MW 6 */
	  3147      "11111011" // /* MW 5 */
	  3148      "11100000" // /* MW 4 */
	  3149      "00000000" // /* MW 3 */
	  3150      "00000000" // /* MW 2 */
	  3151      "10000000" // /* MW 1 */
	  3152      "11110111" // 	                                        NOP;                                                        VST.SPIL wr2, [sp, #-1184];   NOP /* MW 8 */
	  3153      "00000111" // /* MW 7 */
	  3154      "01100000" // /* MW 6 */
	  3155      "11111011" // /* MW 5 */
	  3156      "11100100" // /* MW 4 */
	  3157      "00000000" // /* MW 3 */
	  3158      "00000000" // /* MW 2 */
	  3159      "10000000" // /* MW 1 */
	  3160      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-1152];   NOP /* MW 8 */
	  3161      "00000111" // /* MW 7 */
	  3162      "10000000" // /* MW 6 */
	  3163      "11111011" // /* MW 5 */
	  3164      "11101110" // /* MW 4 */
	  3165      "00000000" // /* MW 3 */
	  3166      "00000000" // /* MW 2 */
	  3167      "10000000" // /* MW 1 */
	  3168      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-608];    NOP /* MW 8 */
	  3169      "00000111" // /* MW 7 */
	  3170      "10100000" // /* MW 6 */
	  3171      "11111101" // /* MW 5 */
	  3172      "11101100" // /* MW 4 */
	  3173      "00000000" // /* MW 3 */
	  3174      "00000000" // /* MW 2 */
	  3175      "10000000" // /* MW 1 */
.noswbrkpt
	  3176      "00110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1056];        NOP;                          NOP /* MW 8 */
	  3177      "00000000" // /* MW 7 */
	  3178      "00000000" // /* MW 6 */
	  3179      "00000000" // /* MW 5 */
	  3180      "00000000" // /* MW 4 */
	  3181      "11000000" // /* MW 3 */
	  3182      "11110111" // /* MW 2 */
	  3183      "00001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3184      "11110111" // 	                                        NOP;                                                        VST.SPIL wr3, [sp, #-1248];   NOP /* MW 8 */
	  3185      "00000111" // /* MW 7 */
	  3186      "00100000" // /* MW 6 */
	  3187      "11111011" // /* MW 5 */
	  3188      "11100110" // /* MW 4 */
	  3189      "00000000" // /* MW 3 */
	  3190      "00000000" // /* MW 2 */
	  3191      "10000000" // /* MW 1 */
.noswbrkpt
	  3192      "00000011" // 	NOP;                VLDB.UNPACK.u8 xc, [sp, #-1152] /* MW 4 */
	  3193      "00111000" // /* MW 3 */
	  3194      "11110111" // /* MW 2 */
	  3195      "00010100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3196      "11110111" // 	                                        NOP;                                                        VST.SPIL wc1, [sp, #-1312];   NOP /* MW 8 */
	  3197      "00000111" // /* MW 7 */
	  3198      "11100000" // /* MW 6 */
	  3199      "11111010" // /* MW 5 */
	  3200      "11101010" // /* MW 4 */
	  3201      "00000000" // /* MW 3 */
	  3202      "00000000" // /* MW 2 */
	  3203      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3204      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-1216];   NOP /* MW 8 */
	  3205      "00000111" // /* MW 7 */
	  3206      "01000000" // /* MW 6 */
	  3207      "11111011" // /* MW 5 */
	  3208      "11101000" // /* MW 4 */
	  3209      "00000000" // /* MW 3 */
	  3210      "00000000" // /* MW 2 */
	  3211      "10000000" // /* MW 1 */
	  3212      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-608] /* MW 4 */
	  3213      "01111000" // /* MW 3 */
	  3214      "11111011" // /* MW 2 */
	  3215      "00011100" // /* MW 1 */
.noswbrkpt
	  3216      "00110111" // 	VLDA.UNPACK.u8 xa, [sp, #-1184];        NOP;                          NOP /* MW 8 */
	  3217      "00000000" // /* MW 7 */
	  3218      "00000000" // /* MW 6 */
	  3219      "00000000" // /* MW 5 */
	  3220      "00000000" // /* MW 4 */
	  3221      "11000000" // /* MW 3 */
	  3222      "11110110" // /* MW 2 */
	  3223      "00000100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3224      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-608];    NOP /* MW 8 */
	  3225      "00000111" // /* MW 7 */
	  3226      "10100000" // /* MW 6 */
	  3227      "11111101" // /* MW 5 */
	  3228      "11100000" // /* MW 4 */
	  3229      "00000000" // /* MW 3 */
	  3230      "00000000" // /* MW 2 */
	  3231      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3232      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1344];   NOP /* MW 8 */
	  3233      "00000111" // /* MW 7 */
	  3234      "11000000" // /* MW 6 */
	  3235      "11111010" // /* MW 5 */
	  3236      "11100010" // /* MW 4 */
	  3237      "00000000" // /* MW 3 */
	  3238      "00000000" // /* MW 2 */
	  3239      "10000000" // /* MW 1 */
.noswbrkpt
	  3240      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-1216] /* MW 4 */
	  3241      "10111000" // /* MW 3 */
	  3242      "11110110" // /* MW 2 */
	  3243      "00011100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3244      "00000011" // 	NOP;                VLDB.UNPACK.u8 xc, [sp, #-1248] /* MW 4 */
	  3245      "01111000" // /* MW 3 */
	  3246      "11110110" // /* MW 2 */
	  3247      "00010100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3248      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-1376];   NOP /* MW 8 */
	  3249      "00000111" // /* MW 7 */
	  3250      "10100000" // /* MW 6 */
	  3251      "11111010" // /* MW 5 */
	  3252      "11101000" // /* MW 4 */
	  3253      "00000000" // /* MW 3 */
	  3254      "00000000" // /* MW 2 */
	  3255      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3256      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-1056];   NOP /* MW 8 */
	  3257      "00000111" // /* MW 7 */
	  3258      "11100000" // /* MW 6 */
	  3259      "11111011" // /* MW 5 */
	  3260      "11101100" // /* MW 4 */
	  3261      "00000000" // /* MW 3 */
	  3262      "00000000" // /* MW 2 */
	  3263      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3264      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-1152];   NOP /* MW 8 */
	  3265      "00000111" // /* MW 7 */
	  3266      "10000000" // /* MW 6 */
	  3267      "11111011" // /* MW 5 */
	  3268      "11101110" // /* MW 4 */
	  3269      "00000000" // /* MW 3 */
	  3270      "00000000" // /* MW 2 */
	  3271      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3272      "11110111" // 	                                        NOP;                                                        VST.SPIL wc1, [sp, #-1408];   NOP /* MW 8 */
	  3273      "00000111" // /* MW 7 */
	  3274      "10000000" // /* MW 6 */
	  3275      "11111010" // /* MW 5 */
	  3276      "11101010" // /* MW 4 */
	  3277      "00000000" // /* MW 3 */
	  3278      "00000000" // /* MW 2 */
	  3279      "10000000" // /* MW 1 */
.noswbrkpt
	  3280      "00110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1312];        NOP;                          NOP /* MW 8 */
	  3281      "00000000" // /* MW 7 */
	  3282      "00000000" // /* MW 6 */
	  3283      "00000000" // /* MW 5 */
	  3284      "00000000" // /* MW 4 */
	  3285      "11000000" // /* MW 3 */
	  3286      "11110101" // /* MW 2 */
	  3287      "00001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3288      "11110111" // 	                                        NOP;                                                        VST.SPIL wr2, [sp, #-1440];   NOP /* MW 8 */
	  3289      "00000111" // /* MW 7 */
	  3290      "01100000" // /* MW 6 */
	  3291      "11111010" // /* MW 5 */
	  3292      "11100100" // /* MW 4 */
	  3293      "00000000" // /* MW 3 */
	  3294      "00000000" // /* MW 2 */
	  3295      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3296      "11110111" // 	                                        NOP;                                                        VST.SPIL wr3, [sp, #-1472];   NOP /* MW 8 */
	  3297      "00000111" // /* MW 7 */
	  3298      "01000000" // /* MW 6 */
	  3299      "11111010" // /* MW 5 */
	  3300      "11100110" // /* MW 4 */
	  3301      "00000000" // /* MW 3 */
	  3302      "00000000" // /* MW 2 */
	  3303      "10000000" // /* MW 1 */
.noswbrkpt
	  3304      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-448];   NOP /* MW 8 */
	  3305      "00100111" // /* MW 7 */
	  3306      "11001000" // /* MW 6 */
	  3307      "10000011" // /* MW 5 */
	  3308      "11000111" // /* MW 4 */
	  3309      "00000000" // /* MW 3 */
	  3310      "00000000" // /* MW 2 */
	  3311      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3312      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-1184];   NOP /* MW 8 */
	  3313      "00000111" // /* MW 7 */
	  3314      "01100000" // /* MW 6 */
	  3315      "11111011" // /* MW 5 */
	  3316      "11100000" // /* MW 4 */
	  3317      "00000000" // /* MW 3 */
	  3318      "00000000" // /* MW 2 */
	  3319      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3320      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1216];   NOP /* MW 8 */
	  3321      "00000111" // /* MW 7 */
	  3322      "01000000" // /* MW 6 */
	  3323      "11111011" // /* MW 5 */
	  3324      "11100010" // /* MW 4 */
	  3325      "00000000" // /* MW 3 */
	  3326      "00000000" // /* MW 2 */
	  3327      "10000000" // /* MW 1 */
	  3328      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-416];   NOP /* MW 8 */
	  3329      "00100111" // /* MW 7 */
	  3330      "11001100" // /* MW 6 */
	  3331      "10001011" // /* MW 5 */
	  3332      "11000111" // /* MW 4 */
	  3333      "00000000" // /* MW 3 */
	  3334      "00000000" // /* MW 2 */
	  3335      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  3336      "11110111" // 	                                        NOP;                                                        LDA.SPIL p4, [sp, #-156];     NOP /* MW 8 */
	  3337      "11100111" // /* MW 7 */
	  3338      "11101100" // /* MW 6 */
	  3339      "10110011" // /* MW 5 */
	  3340      "11000111" // /* MW 4 */
	  3341      "00000000" // /* MW 3 */
	  3342      "00000000" // /* MW 2 */
	  3343      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  3344      "11110111" // 	                                        NOP;                                                        LDA.SPIL p5, [sp, #-132];     NOP /* MW 8 */
	  3345      "11100111" // /* MW 7 */
	  3346      "11101111" // /* MW 6 */
	  3347      "10110111" // /* MW 5 */
	  3348      "11000111" // /* MW 4 */
	  3349      "00000000" // /* MW 3 */
	  3350      "00000000" // /* MW 2 */
	  3351      "10000000" // /* MW 1 */
	  3352      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-1248];   NOP /* MW 8 */
	  3353      "00000111" // /* MW 7 */
	  3354      "00100000" // /* MW 6 */
	  3355      "11111011" // /* MW 5 */
	  3356      "11101100" // /* MW 4 */
	  3357      "00000000" // /* MW 3 */
	  3358      "00000000" // /* MW 2 */
	  3359      "10000000" // /* MW 1 */
	  3360      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-1312];   NOP /* MW 8 */
	  3361      "00000111" // /* MW 7 */
	  3362      "11100000" // /* MW 6 */
	  3363      "11111010" // /* MW 5 */
	  3364      "11101110" // /* MW 4 */
	  3365      "00000000" // /* MW 3 */
	  3366      "00000000" // /* MW 2 */
	  3367      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 79 20
	  3368      "11110111" // 	                                        NOP;                                                        LDA.SPIL p6, [sp, #-24];      NOP /* MW 8 */
	  3369      "01100111" // /* MW 7 */
	  3370      "11111101" // /* MW 6 */
	  3371      "10111011" // /* MW 5 */
	  3372      "11000111" // /* MW 4 */
	  3373      "00000000" // /* MW 3 */
	  3374      "00000000" // /* MW 2 */
	  3375      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 80 20
	  3376      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-28];      NOP /* MW 8 */
	  3377      "11100111" // /* MW 7 */
	  3378      "11111100" // /* MW 6 */
	  3379      "10111111" // /* MW 5 */
	  3380      "11000111" // /* MW 4 */
	  3381      "00000000" // /* MW 3 */
	  3382      "00000000" // /* MW 2 */
	  3383      "10000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 5 "vector.hpp" 1041 35
.src_ref 5 "vector.hpp" 1041 35
	  3384      "01110111" // 	LDA cl5, [sp, #-64];                                                  NOP;                          VMOV xd, xa /* MW 8 */
	  3385      "00000000" // /* MW 7 */
	  3386      "00000000" // /* MW 6 */
	  3387      "00000000" // /* MW 5 */
	  3388      "00010111" // /* MW 4 */
	  3389      "00100100" // /* MW 3 */
	  3390      "11111100" // /* MW 2 */
	  3391      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  3392      "11110111" // 	                                        NOP;                                                        LDA.SPIL p0, [sp, #-60];      NOP /* MW 8 */
	  3393      "11100111" // /* MW 7 */
	  3394      "11111000" // /* MW 6 */
	  3395      "10100011" // /* MW 5 */
	  3396      "11000111" // /* MW 4 */
	  3397      "00000000" // /* MW 3 */
	  3398      "00000000" // /* MW 2 */
	  3399      "10000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
	  3400      "11110111" // 	                                        NOP;                                                        LDA.SPIL p1, [sp, #-100];     NOP /* MW 8 */
	  3401      "11100111" // /* MW 7 */
	  3402      "11110011" // /* MW 6 */
	  3403      "10100111" // /* MW 5 */
	  3404      "11000111" // /* MW 4 */
	  3405      "00000000" // /* MW 3 */
	  3406      "00000000" // /* MW 2 */
	  3407      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  3408      "11110111" // 	                                        NOP;                                                        LDA.SPIL p2, [sp, #-152];     NOP /* MW 8 */
	  3409      "01100111" // /* MW 7 */
	  3410      "11101101" // /* MW 6 */
	  3411      "10101011" // /* MW 5 */
	  3412      "11000111" // /* MW 4 */
	  3413      "00000000" // /* MW 3 */
	  3414      "00000000" // /* MW 2 */
	  3415      "10000000" // /* MW 1 */
	  3416      "11110111" // 	                                        NOP;                                                        VST.SPIL wr2, [sp, #-1504];   NOP /* MW 8 */
	  3417      "00000111" // /* MW 7 */
	  3418      "00100000" // /* MW 6 */
	  3419      "11111010" // /* MW 5 */
	  3420      "11100100" // /* MW 4 */
	  3421      "00000000" // /* MW 3 */
	  3422      "00000000" // /* MW 2 */
	  3423      "10000000" // /* MW 1 */
	  3424      "11110111" // 	                                        NOP;                                                        VST.SPIL wr3, [sp, #-1536];   NOP /* MW 8 */
	  3425      "00000111" // /* MW 7 */
	  3426      "00000000" // /* MW 6 */
	  3427      "11111010" // /* MW 5 */
	  3428      "11100110" // /* MW 4 */
	  3429      "00000000" // /* MW 3 */
	  3430      "00000000" // /* MW 2 */
	  3431      "10000000" // /* MW 1 */
	  3432      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-1568];   NOP /* MW 8 */
	  3433      "00000111" // /* MW 7 */
	  3434      "11100000" // /* MW 6 */
	  3435      "11111001" // /* MW 5 */
	  3436      "11101000" // /* MW 4 */
	  3437      "00000000" // /* MW 3 */
	  3438      "00000000" // /* MW 2 */
	  3439      "10000000" // /* MW 1 */
	  3440      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wc1, [sp, #-1600];   NOP;                                    NOP /* MW 16 */
	  3441      "00000000" // /* MW 15 */
	  3442      "00000000" // /* MW 14 */
	  3443      "00000000" // /* MW 13 */
	  3444      "10000000" // /* MW 12 */
	  3445      "00000000" // /* MW 11 */
	  3446      "10011100" // /* MW 10 */
	  3447      "10101111" // /* MW 9 */
	  3448      "00001110" // /* MW 8 */
	  3449      "00000000" // /* MW 7 */
	  3450      "00000000" // /* MW 6 */
	  3451      "00010000" // /* MW 5 */
	  3452      "00000000" // /* MW 4 */
	  3453      "00000000" // /* MW 3 */
	  3454      "00000000" // /* MW 2 */
	  3455      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_2864
.src_ref 5 "vector.hpp" 1041 35 first
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 101 25
.loop_nesting 2
	  3456      "00111111" // 	NOP;                MOV.s9 r15, #-4;    NOP;                                                        VST.SPIL wr0, [sp, #-1632];   NOP /* MW 12 */
	  3457      "00000000" // /* MW 11 */
	  3458      "10011010" // /* MW 10 */
	  3459      "00001111" // /* MW 9 */
	  3460      "00001110" // /* MW 8 */
	  3461      "00000000" // /* MW 7 */
	  3462      "00000000" // /* MW 6 */
	  3463      "10010000" // /* MW 5 */
	  3464      "11111111" // /* MW 4 */
	  3465      "00011111" // /* MW 3 */
	  3466      "00000000" // /* MW 2 */
	  3467      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.src_ref 6 "mask.hpp" 130 25 first
	  3468      "00110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1632];        ST m0, [p4], #4;              NOP /* MW 8 */
	  3469      "01000110" // /* MW 7 */
	  3470      "11000001" // /* MW 6 */
	  3471      "00000010" // /* MW 5 */
	  3472      "00000000" // /* MW 4 */
	  3473      "01000000" // /* MW 3 */
	  3474      "11110011" // /* MW 2 */
	  3475      "00001100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	  3476      "11110111" // 	                                        ST m0, [p4], #-12;                                          VLDA.SPIL wr0, [sp, #-1248];  NOP /* MW 8 */
	  3477      "00100111" // /* MW 7 */
	  3478      "01100100" // /* MW 6 */
	  3479      "10000011" // /* MW 5 */
	  3480      "11000111" // /* MW 4 */
	  3481      "01100000" // /* MW 3 */
	  3482      "00010111" // /* MW 2 */
	  3483      "10101100" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  3484      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1664];   NOP /* MW 8 */
	  3485      "00000111" // /* MW 7 */
	  3486      "10000000" // /* MW 6 */
	  3487      "11111001" // /* MW 5 */
	  3488      "11100010" // /* MW 4 */
	  3489      "00000000" // /* MW 3 */
	  3490      "00000000" // /* MW 2 */
	  3491      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 204 25
	  3492      "01110111" // 	VLDA wr1, [sp, #-1312];                 ST m0, [p4], #4;                                            MOV p3, p4 /* MW 8 */
	  3493      "10001100" // /* MW 7 */
	  3494      "10000010" // /* MW 6 */
	  3495      "11010101" // /* MW 5 */
	  3496      "11001010" // /* MW 4 */
	  3497      "11000110" // /* MW 3 */
	  3498      "11110101" // /* MW 2 */
	  3499      "00000110" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  3500      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-1696];   NOP /* MW 8 */
	  3501      "00000111" // /* MW 7 */
	  3502      "01100000" // /* MW 6 */
	  3503      "11111001" // /* MW 5 */
	  3504      "11101100" // /* MW 4 */
	  3505      "00000000" // /* MW 3 */
	  3506      "00000000" // /* MW 2 */
	  3507      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 204 25
.noswbrkpt
	  3508      "01110111" // 	VLDA wr0, [sp, #-1184];                 ST m0, [p5], #4;                                            MOV cl6, p4 /* MW 8 */
	  3509      "10001101" // /* MW 7 */
	  3510      "10000010" // /* MW 6 */
	  3511      "10010101" // /* MW 5 */
	  3512      "11000011" // /* MW 4 */
	  3513      "11000110" // /* MW 3 */
	  3514      "11110110" // /* MW 2 */
	  3515      "00000010" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  3516      "11110111" // 	                                        ST m0, [p5], #-12;                                          VLDA.SPIL wr1, [sp, #-1216];  NOP /* MW 8 */
	  3517      "00100111" // /* MW 7 */
	  3518      "01101000" // /* MW 6 */
	  3519      "10001011" // /* MW 5 */
	  3520      "11000111" // /* MW 4 */
	  3521      "01101000" // /* MW 3 */
	  3522      "00010111" // /* MW 2 */
	  3523      "10101100" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  3524      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-1632];   NOP /* MW 8 */
	  3525      "00000111" // /* MW 7 */
	  3526      "10100000" // /* MW 6 */
	  3527      "11111001" // /* MW 5 */
	  3528      "11101110" // /* MW 4 */
	  3529      "00000000" // /* MW 3 */
	  3530      "00000000" // /* MW 2 */
	  3531      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.src_ref 6 "mask.hpp" 130 25 first
.nohwbrkpt
.noswbrkpt
	  3532      "10110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1664];        ST m0, [p5], #4;              NOP /* MW 8 */
	  3533      "01000110" // /* MW 7 */
	  3534      "11000001" // /* MW 6 */
	  3535      "00000010" // /* MW 5 */
	  3536      "00000000" // /* MW 4 */
	  3537      "00000000" // /* MW 3 */
	  3538      "11110011" // /* MW 2 */
	  3539      "00001100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 204 25
.nohwbrkpt
.noswbrkpt
	  3540      "01110111" // 	VLDA wd0, [sp, #-1504];                 ST m0, [p4];                                                MOV p4, p5 /* MW 8 */
	  3541      "01000100" // /* MW 7 */
	  3542      "10000011" // /* MW 6 */
	  3543      "00010101" // /* MW 5 */
	  3544      "11011011" // /* MW 4 */
	  3545      "01000110" // /* MW 3 */
	  3546      "11110100" // /* MW 2 */
	  3547      "00011010" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 6 "mask.hpp" 204 25
.nohwbrkpt
.noswbrkpt
	  3548      "00001111" // 	NOP;                                    VST wr2, [sp, #-1728];                                      MOV ch6, p5;                  NOP;                                    VCMP xc, r4, ya.s16, r2, c0, r7, c0, c2 /* MW 12 */
	  3549      "00000100" // /* MW 11 */
	  3550      "01011100" // /* MW 10 */
	  3551      "00011000" // /* MW 9 */
	  3552      "00000000" // /* MW 8 */
	  3553      "00111100" // /* MW 7 */
	  3554      "00000000" // /* MW 6 */
	  3555      "01100001" // /* MW 5 */
	  3556      "10110100" // /* MW 4 */
	  3557      "10100001" // /* MW 3 */
	  3558      "00111100" // /* MW 2 */
	  3559      "01110101" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  3560      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr3, [sp, #-1760];   NOP;                                    VCMP xc, r6, ya.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  3561      "00000000" // /* MW 15 */
	  3562      "00011101" // /* MW 14 */
	  3563      "00000011" // /* MW 13 */
	  3564      "10000000" // /* MW 12 */
	  3565      "00000000" // /* MW 11 */
	  3566      "10010010" // /* MW 10 */
	  3567      "01101111" // /* MW 9 */
	  3568      "00001110" // /* MW 8 */
	  3569      "00000000" // /* MW 7 */
	  3570      "00000000" // /* MW 6 */
	  3571      "00010000" // /* MW 5 */
	  3572      "00000000" // /* MW 4 */
	  3573      "00000000" // /* MW 3 */
	  3574      "00000000" // /* MW 2 */
	  3575      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.nohwbrkpt
.noswbrkpt
	  3576      "11110111" // 	                                        ST m0, [p2], #-8;                                           VLDA.SPIL wd1, [sp, #-1536];  NOP /* MW 8 */
	  3577      "00100111" // /* MW 7 */
	  3578      "01000000" // /* MW 6 */
	  3579      "10111011" // /* MW 5 */
	  3580      "11000111" // /* MW 4 */
	  3581      "10010000" // /* MW 3 */
	  3582      "00010111" // /* MW 2 */
	  3583      "10101100" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 122 first
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  3584      "10100010" // 	VLDA wr0, [sp, #-1376];NOP;             ST m0, [p2], #4;              OR r14, r4, r6;               NOP;                          NOP;                                    VCMP xd, r4, ya.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  3585      "10000000" // /* MW 15 */
	  3586      "00001011" // /* MW 14 */
	  3587      "01110011" // /* MW 13 */
	  3588      "10110010" // /* MW 12 */
	  3589      "00011010" // /* MW 11 */
	  3590      "00000000" // /* MW 10 */
	  3591      "00000000" // /* MW 9 */
	  3592      "00000000" // /* MW 8 */
	  3593      "10001010" // /* MW 7 */
	  3594      "10000010" // /* MW 6 */
	  3595      "00000101" // /* MW 5 */
	  3596      "00000000" // /* MW 4 */
	  3597      "01000000" // /* MW 3 */
	  3598      "11110101" // /* MW 2 */
	  3599      "00000010" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  3600      "10001010" // 	VLDA wd0, [sp, #-1568];NOP;             ST m0, [p5];                  NOP;                          MOV p5, p2;                   NOP;                                    VCMP xc, r6, ya.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  3601      "00000000" // /* MW 15 */
	  3602      "00011101" // /* MW 14 */
	  3603      "00000011" // /* MW 13 */
	  3604      "00000000" // /* MW 12 */
	  3605      "00000000" // /* MW 11 */
	  3606      "01000000" // /* MW 10 */
	  3607      "10101011" // /* MW 9 */
	  3608      "00000110" // /* MW 8 */
	  3609      "01000101" // /* MW 7 */
	  3610      "10000011" // /* MW 6 */
	  3611      "00000101" // /* MW 5 */
	  3612      "00000000" // /* MW 4 */
	  3613      "11000000" // /* MW 3 */
	  3614      "11110011" // /* MW 2 */
	  3615      "00011010" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.nohwbrkpt
.noswbrkpt
	  3616      "11110111" // 	                                        ST r14, [p1], #4;                                           VLDA.SPIL wd1, [sp, #-1600];  NOP /* MW 8 */
	  3617      "00100111" // /* MW 7 */
	  3618      "00111000" // /* MW 6 */
	  3619      "10111011" // /* MW 5 */
	  3620      "11000111" // /* MW 4 */
	  3621      "01001000" // /* MW 3 */
	  3622      "11010100" // /* MW 2 */
	  3623      "10101111" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122 first
.src_ref 6 "mask.hpp" 130 25 first
.nohwbrkpt
.noswbrkpt
	  3624      "00110111" // 	VLDA wr1, [sp, #-1408];                 ST m0, [p2];                  OR r1, r4, r6 /* MW 8 */
	  3625      "10100001" // /* MW 7 */
	  3626      "11000001" // /* MW 6 */
	  3627      "00001010" // /* MW 5 */
	  3628      "10110010" // /* MW 4 */
	  3629      "00011010" // /* MW 3 */
	  3630      "11110101" // /* MW 2 */
	  3631      "00000110" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  3632      "00110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1696];        ST m0, [p0], #-8;             NOP /* MW 8 */
	  3633      "01111000" // /* MW 7 */
	  3634      "11000001" // /* MW 6 */
	  3635      "00000010" // /* MW 5 */
	  3636      "00000000" // /* MW 4 */
	  3637      "11000000" // /* MW 3 */
	  3638      "11110010" // /* MW 2 */
	  3639      "00001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3640      "11110111" // 	                                        NOP;                                                        VST.SPIL wr2, [sp, #-1664];   NOP /* MW 8 */
	  3641      "00000111" // /* MW 7 */
	  3642      "10000000" // /* MW 6 */
	  3643      "11111001" // /* MW 5 */
	  3644      "11100100" // /* MW 4 */
	  3645      "00000000" // /* MW 3 */
	  3646      "00000000" // /* MW 2 */
	  3647      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.nohwbrkpt
.noswbrkpt
	  3648      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr3, [sp, #-1792];   NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  3649      "10000000" // /* MW 15 */
	  3650      "00001011" // /* MW 14 */
	  3651      "00000011" // /* MW 13 */
	  3652      "10000000" // /* MW 12 */
	  3653      "00000000" // /* MW 11 */
	  3654      "10010000" // /* MW 10 */
	  3655      "01101111" // /* MW 9 */
	  3656      "00001110" // /* MW 8 */
	  3657      "00000000" // /* MW 7 */
	  3658      "00000000" // /* MW 6 */
	  3659      "00010000" // /* MW 5 */
	  3660      "00000000" // /* MW 4 */
	  3661      "00000000" // /* MW 3 */
	  3662      "00000000" // /* MW 2 */
	  3663      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  3664      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd0, [sp, #-1056];  NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  3665      "00000000" // /* MW 15 */
	  3666      "00011101" // /* MW 14 */
	  3667      "00000011" // /* MW 13 */
	  3668      "10000000" // /* MW 12 */
	  3669      "11000010" // /* MW 11 */
	  3670      "00110111" // /* MW 10 */
	  3671      "01111011" // /* MW 9 */
	  3672      "00001100" // /* MW 8 */
	  3673      "00000000" // /* MW 7 */
	  3674      "00000000" // /* MW 6 */
	  3675      "00010000" // /* MW 5 */
	  3676      "00000000" // /* MW 4 */
	  3677      "00000000" // /* MW 3 */
	  3678      "00000000" // /* MW 2 */
	  3679      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3680      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1152];  NOP /* MW 8 */
	  3681      "00100111" // /* MW 7 */
	  3682      "01110000" // /* MW 6 */
	  3683      "10111011" // /* MW 5 */
	  3684      "11000111" // /* MW 4 */
	  3685      "00000000" // /* MW 3 */
	  3686      "00000000" // /* MW 2 */
	  3687      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.src_ref 5 "compare.hpp" 541 122 first
.nohwbrkpt
.noswbrkpt
	  3688      "00000111" // 	NOP;                                                                  OR r14, r4, r6;                                                                                     VCMP xd, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 8 */
	  3689      "00001011" // /* MW 7 */
	  3690      "10111000" // /* MW 6 */
	  3691      "00110000" // /* MW 5 */
	  3692      "00000000" // /* MW 4 */
	  3693      "11100000" // /* MW 3 */
	  3694      "01100100" // /* MW 2 */
	  3695      "00110101" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  3696      "10011000" // 	NOP;                NOP;                ST r14, [p1], #4;             NOP;                          VLDA.SPIL wd0, [sp, #-1440];  NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  3697      "00000000" // /* MW 15 */
	  3698      "00011101" // /* MW 14 */
	  3699      "00000011" // /* MW 13 */
	  3700      "10000000" // /* MW 12 */
	  3701      "11000010" // /* MW 11 */
	  3702      "00110100" // /* MW 10 */
	  3703      "01111011" // /* MW 9 */
	  3704      "00001100" // /* MW 8 */
	  3705      "10001001" // /* MW 7 */
	  3706      "11111010" // /* MW 6 */
	  3707      "00010101" // /* MW 5 */
	  3708      "00000000" // /* MW 4 */
	  3709      "00000000" // /* MW 3 */
	  3710      "00000000" // /* MW 2 */
	  3711      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3712      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1472];  NOP /* MW 8 */
	  3713      "00100111" // /* MW 7 */
	  3714      "01001000" // /* MW 6 */
	  3715      "10111011" // /* MW 5 */
	  3716      "11000111" // /* MW 4 */
	  3717      "00000000" // /* MW 3 */
	  3718      "00000000" // /* MW 2 */
	  3719      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
.nohwbrkpt
.noswbrkpt
	  3720      "10110111" // 	NOP;                                    VST wr2, [sp, #-1696];        OR r6, r4, r6 /* MW 8 */
	  3721      "11100101" // /* MW 7 */
	  3722      "10101001" // /* MW 6 */
	  3723      "00110011" // /* MW 5 */
	  3724      "10110010" // /* MW 4 */
	  3725      "00011010" // /* MW 3 */
	  3726      "00000000" // /* MW 2 */
	  3727      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  3728      "00110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1632];        NOP;                          NOP /* MW 8 */
	  3729      "00000000" // /* MW 7 */
	  3730      "00000000" // /* MW 6 */
	  3731      "00000000" // /* MW 5 */
	  3732      "00000000" // /* MW 4 */
	  3733      "01000000" // /* MW 3 */
	  3734      "11110011" // /* MW 2 */
	  3735      "00001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3736      "11110111" // 	                                        NOP;                                                        VST.SPIL wr3, [sp, #-1824];   NOP /* MW 8 */
	  3737      "00000111" // /* MW 7 */
	  3738      "11100000" // /* MW 6 */
	  3739      "11111000" // /* MW 5 */
	  3740      "11100110" // /* MW 4 */
	  3741      "00000000" // /* MW 3 */
	  3742      "00000000" // /* MW 2 */
	  3743      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.nohwbrkpt
.noswbrkpt
	  3744      "10011100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd0, [sp, #-608];   NOP;                                    VCMP xc, r3, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  3745      "10000000" // /* MW 15 */
	  3746      "00001011" // /* MW 14 */
	  3747      "00000010" // /* MW 13 */
	  3748      "10000000" // /* MW 12 */
	  3749      "01000010" // /* MW 11 */
	  3750      "00111011" // /* MW 10 */
	  3751      "01111011" // /* MW 9 */
	  3752      "00001100" // /* MW 8 */
	  3753      "00000000" // /* MW 7 */
	  3754      "00000000" // /* MW 6 */
	  3755      "00010000" // /* MW 5 */
	  3756      "00000000" // /* MW 4 */
	  3757      "00000000" // /* MW 3 */
	  3758      "00000000" // /* MW 2 */
	  3759      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  3760      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd1, [sp, #-1344];  NOP;                                    VCMP xc, r4, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  3761      "00000000" // /* MW 15 */
	  3762      "00011101" // /* MW 14 */
	  3763      "00000011" // /* MW 13 */
	  3764      "10000000" // /* MW 12 */
	  3765      "10000010" // /* MW 11 */
	  3766      "10110101" // /* MW 10 */
	  3767      "01111011" // /* MW 9 */
	  3768      "00001100" // /* MW 8 */
	  3769      "00000000" // /* MW 7 */
	  3770      "00000000" // /* MW 6 */
	  3771      "00010000" // /* MW 5 */
	  3772      "00000000" // /* MW 4 */
	  3773      "00000000" // /* MW 3 */
	  3774      "00000000" // /* MW 2 */
	  3775      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3776      "00000001" // 	NOP /* MW 2 */
	  3777      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 122 first
.nohwbrkpt
.noswbrkpt
	  3778      "11000111" // 	NOP;                                                                  OR r14, r4, r3;                                                                                     VCMP xc, r3, yd.s16, r2, c0, r7, c0, c2 /* MW 8 */
	  3779      "00001001" // /* MW 7 */
	  3780      "10111000" // /* MW 6 */
	  3781      "00100000" // /* MW 5 */
	  3782      "00000000" // /* MW 4 */
	  3783      "11100000" // /* MW 3 */
	  3784      "00110100" // /* MW 2 */
	  3785      "00110101" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 262 36
.src_ref 6 "mask.hpp" 262 36
.nohwbrkpt
.noswbrkpt
	  3786      "10001111" // 	NOP;                                    ST r14, [p1], #4;             MOV.s12 r14, #-1;                                           NOP;                                    VCMP xc, r4, yd.s16, r7, c0, r2, c0, c2 /* MW 12 */
	  3787      "00000100" // /* MW 11 */
	  3788      "11101000" // /* MW 10 */
	  3789      "00011000" // /* MW 9 */
	  3790      "00000000" // /* MW 8 */
	  3791      "00111100" // /* MW 7 */
	  3792      "00000000" // /* MW 6 */
	  3793      "11111100" // /* MW 5 */
	  3794      "11111111" // /* MW 4 */
	  3795      "10011111" // /* MW 3 */
	  3796      "10101000" // /* MW 2 */
	  3797      "01011111" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
	  3798      "00010011" // 	NOP;                                                                                                                                                                      VCMP xc, r0, ya.s16, r2, c0, r7, c0, c2 /* MW 4 */
	  3799      "00010000" // /* MW 3 */
	  3800      "01110000" // /* MW 2 */
	  3801      "01000001" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
	  3802      "11000111" // 	NOP;                                                                  OR r4, r4, r3;                                                                                      VCMP xc, r3, ya.s16, r7, c0, r2, c0, c2 /* MW 8 */
	  3803      "00001000" // /* MW 7 */
	  3804      "11010000" // /* MW 6 */
	  3805      "00100001" // /* MW 5 */
	  3806      "00000000" // /* MW 4 */
	  3807      "01000000" // /* MW 3 */
	  3808      "00110100" // /* MW 2 */
	  3809      "00110101" // /* MW 1 */
	  3810      "00000001" // 	NOP /* MW 2 */
	  3811      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 5 "compare.hpp" 542 37
.noswbrkpt
	  3812      "01000111" // 	NOP;                                                                  OR r7, r0, r3;                                                                                      VCMP xc, r5, yd.s16, r7, c0, r2, c0, c2 /* MW 8 */
	  3813      "00001001" // /* MW 7 */
	  3814      "11010000" // /* MW 6 */
	  3815      "00110001" // /* MW 5 */
	  3816      "00000000" // /* MW 4 */
	  3817      "01110000" // /* MW 3 */
	  3818      "00110000" // /* MW 2 */
	  3819      "00110101" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 6 "mask.hpp" 262 36 first
.nohwbrkpt
.noswbrkpt
	  3820      "10011010" // 	NOP;                NOP;                ST r7, [p1], #-12;            XOR r7, r14, r7;              VMOV xd, xb;                  NOP;                                    VCMP xc, r2, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  3821      "10000000" // /* MW 15 */
	  3822      "00001011" // /* MW 14 */
	  3823      "00111010" // /* MW 13 */
	  3824      "00111111" // /* MW 12 */
	  3825      "00011011" // /* MW 11 */
	  3826      "00000000" // /* MW 10 */
	  3827      "01010111" // /* MW 9 */
	  3828      "00100100" // /* MW 8 */
	  3829      "11101001" // /* MW 7 */
	  3830      "11011110" // /* MW 6 */
	  3831      "00000101" // /* MW 5 */
	  3832      "00000000" // /* MW 4 */
	  3833      "00000000" // /* MW 3 */
	  3834      "00000000" // /* MW 2 */
	  3835      "00000000" // /* MW 1 */
	  3836      "00000001" // 	NOP /* MW 2 */
	  3837      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 6 "mask.hpp" 260 28 first
	  3838      "00110111" // 	LDA r3, [p1], #4;                       NOP;                          OR r2, r2, r5 /* MW 8 */
	  3839      "00000000" // /* MW 7 */
	  3840      "00000000" // /* MW 6 */
	  3841      "00010000" // /* MW 5 */
	  3842      "10101001" // /* MW 4 */
	  3843      "01011010" // /* MW 3 */
	  3844      "10100010" // /* MW 2 */
	  3845      "01110011" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28
	  3846      "00000011" // 	NOP;                LDB r5, [p1], #4 /* MW 4 */
	  3847      "01111000" // /* MW 3 */
	  3848      "10100010" // /* MW 2 */
	  3849      "01101011" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28
.noswbrkpt
	  3850      "00000011" // 	NOP;                LDB r5, [p1], #-8 /* MW 4 */
	  3851      "01111000" // /* MW 3 */
	  3852      "10111100" // /* MW 2 */
	  3853      "01101011" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3854      "00000001" // 	NOP /* MW 2 */
	  3855      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3856      "00000001" // 	NOP /* MW 2 */
	  3857      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3858      "00000001" // 	NOP /* MW 2 */
	  3859      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3860      "00000001" // 	NOP /* MW 2 */
	  3861      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3862      "00000001" // 	NOP /* MW 2 */
	  3863      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27
.nohwbrkpt
.noswbrkpt
	  3864      "00000011" // 	NOP;                                                                  XOR r3, r14, r3 /* MW 4 */
	  3865      "00110000" // /* MW 3 */
	  3866      "00111110" // /* MW 2 */
	  3867      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
.nohwbrkpt
.noswbrkpt
	  3868      "10110111" // 	NOP;                                    ST r3, [p5];                  XOR r3, r14, r5 /* MW 8 */
	  3869      "10100010" // /* MW 7 */
	  3870      "11100111" // /* MW 6 */
	  3871      "00011010" // /* MW 5 */
	  3872      "00101111" // /* MW 4 */
	  3873      "00011011" // /* MW 3 */
	  3874      "00000000" // /* MW 2 */
	  3875      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  3876      "00110111" // 	NOP;                                    ST r3, [p2], #4;              XOR r5, r14, r5 /* MW 8 */
	  3877      "01000101" // /* MW 7 */
	  3878      "11100111" // /* MW 6 */
	  3879      "00101010" // /* MW 5 */
	  3880      "00101111" // /* MW 4 */
	  3881      "00011011" // /* MW 3 */
	  3882      "00000000" // /* MW 2 */
	  3883      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 262 36 first
	  3884      "00110111" // 	NOP;                                    ST r5, [p2], #-8;             XOR r3, r2, r14 /* MW 8 */
	  3885      "01111001" // /* MW 7 */
	  3886      "11101011" // /* MW 6 */
	  3887      "00011010" // /* MW 5 */
	  3888      "01110001" // /* MW 4 */
	  3889      "00011011" // /* MW 3 */
	  3890      "00000000" // /* MW 2 */
	  3891      "00000000" // /* MW 1 */
	  3892      "00000001" // 	NOP /* MW 2 */
	  3893      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8 first
	  3894      "00110111" // 	LDA cl7, [p2], #4;                      NOP;                          NOP /* MW 8 */
	  3895      "00000000" // /* MW 7 */
	  3896      "00000000" // /* MW 6 */
	  3897      "00000000" // /* MW 5 */
	  3898      "00000000" // /* MW 4 */
	  3899      "10000000" // /* MW 3 */
	  3900      "10100010" // /* MW 2 */
	  3901      "01011111" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  3902      "00110111" // 	LDA r5, [p2], #4;                       NOP;                          NOP /* MW 8 */
	  3903      "00000000" // /* MW 7 */
	  3904      "00000000" // /* MW 6 */
	  3905      "00000000" // /* MW 5 */
	  3906      "00000000" // /* MW 4 */
	  3907      "10000000" // /* MW 3 */
	  3908      "10100010" // /* MW 2 */
	  3909      "01110101" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  3910      "00110111" // 	LDA ch7, [p2];                          NOP;                          NOP /* MW 8 */
	  3911      "00000000" // /* MW 7 */
	  3912      "00000000" // /* MW 6 */
	  3913      "00000000" // /* MW 5 */
	  3914      "00000000" // /* MW 4 */
	  3915      "10000000" // /* MW 3 */
	  3916      "11010000" // /* MW 2 */
	  3917      "01010111" // /* MW 1 */
	  3918      "00000001" // 	NOP /* MW 2 */
	  3919      "00000000" // /* MW 1 */
	  3920      "00000001" // 	NOP /* MW 2 */
	  3921      "00000000" // /* MW 1 */
	  3922      "00000001" // 	NOP /* MW 2 */
	  3923      "00000000" // /* MW 1 */
	  3924      "00000001" // 	NOP /* MW 2 */
	  3925      "00000000" // /* MW 1 */
	  3926      "00000001" // 	NOP /* MW 2 */
	  3927      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 80 20 first
	  3928      "00000011" // 	NOP;                                    ST cl7, [p7], #4 /* MW 4 */
	  3929      "01111000" // /* MW 3 */
	  3930      "11110100" // /* MW 2 */
	  3931      "10101011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 80 20
	  3932      "00000011" // 	NOP;                                    ST r5, [p7], #4 /* MW 4 */
	  3933      "01111000" // /* MW 3 */
	  3934      "10110100" // /* MW 2 */
	  3935      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 80 20
	  3936      "00000011" // 	NOP;                                    ST ch7, [p7], #4 /* MW 4 */
	  3937      "01111000" // /* MW 3 */
	  3938      "11110100" // /* MW 2 */
	  3939      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 80 20
	  3940      "00000011" // 	NOP;                                    ST r7, [p7], #-12 /* MW 4 */
	  3941      "01111000" // /* MW 3 */
	  3942      "11110111" // /* MW 2 */
	  3943      "10101110" // /* MW 1 */
	  3944      "00000001" // 	NOP /* MW 2 */
	  3945      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
	  3946      "00110111" // 	LDA r5, [p7], #4;                       NOP;                          NOP /* MW 8 */
	  3947      "00000000" // /* MW 7 */
	  3948      "00000000" // /* MW 6 */
	  3949      "00000000" // /* MW 5 */
	  3950      "00000000" // /* MW 4 */
	  3951      "11000000" // /* MW 3 */
	  3952      "10100011" // /* MW 2 */
	  3953      "01110101" // /* MW 1 */
	  3954      "00000001" // 	NOP /* MW 2 */
	  3955      "00000000" // /* MW 1 */
	  3956      "00000001" // 	NOP /* MW 2 */
	  3957      "00000000" // /* MW 1 */
	  3958      "00000001" // 	NOP /* MW 2 */
	  3959      "00000000" // /* MW 1 */
	  3960      "00000001" // 	NOP /* MW 2 */
	  3961      "00000000" // /* MW 1 */
	  3962      "00000001" // 	NOP /* MW 2 */
	  3963      "00000000" // /* MW 1 */
	  3964      "00000001" // 	NOP /* MW 2 */
	  3965      "00000000" // /* MW 1 */
	  3966      "00000001" // 	NOP /* MW 2 */
	  3967      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36 first
	  3968      "00000011" // 	NOP;                                                                  AND r7, r12, r5 /* MW 4 */
	  3969      "01110000" // /* MW 3 */
	  3970      "01011100" // /* MW 2 */
	  3971      "00110100" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 6 "mask.hpp" 99 24 first
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 204 25
	  3972      "00011111" // 	NOP;                MOV.s9 r7, #-2;     ST r7, [p4];                  LSHL r0, r5, r14;             MOV p4, cl5 /* MW 12 */
	  3973      "11011011" // /* MW 11 */
	  3974      "00000100" // /* MW 10 */
	  3975      "10010100" // /* MW 9 */
	  3976      "11111011" // /* MW 8 */
	  3977      "10001000" // /* MW 7 */
	  3978      "10111110" // /* MW 6 */
	  3979      "11001011" // /* MW 5 */
	  3980      "11111111" // /* MW 4 */
	  3981      "00010111" // /* MW 3 */
	  3982      "00000000" // /* MW 2 */
	  3983      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 99 30
	  3984      "00110111" // 	NOP;                                    ST r1, [p4], #4;              AND r1, r0, r11 /* MW 8 */
	  3985      "01000110" // /* MW 7 */
	  3986      "11100011" // /* MW 6 */
	  3987      "00001010" // /* MW 5 */
	  3988      "01011000" // /* MW 4 */
	  3989      "00011010" // /* MW 3 */
	  3990      "00000000" // /* MW 2 */
	  3991      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 6 "mask.hpp" 99 18 first
	  3992      "00110111" // 	NOP;                                    ST r6, [p4], #4;              SUB r6, r5, r1 /* MW 8 */
	  3993      "01000110" // /* MW 7 */
	  3994      "11101101" // /* MW 6 */
	  3995      "10110010" // /* MW 5 */
	  3996      "10001010" // /* MW 4 */
	  3997      "00011000" // /* MW 3 */
	  3998      "00000000" // /* MW 2 */
	  3999      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 100 39 first
	  4000      "00110111" // 	NOP;                                    ST r4, [p4], #4;              LSHL r4, r6, r7 /* MW 8 */
	  4001      "01000110" // /* MW 7 */
	  4002      "11101001" // /* MW 6 */
	  4003      "00100010" // /* MW 5 */
	  4004      "00111011" // /* MW 4 */
	  4005      "00011111" // /* MW 3 */
	  4006      "00000000" // /* MW 2 */
	  4007      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 6 "mask.hpp" 100 19
	  4008      "00110111" // 	NOP;                                    ST r2, [p4], #-12;            AND r6, r6, r9 /* MW 8 */
	  4009      "01110110" // /* MW 7 */
	  4010      "11100101" // /* MW 6 */
	  4011      "00110010" // /* MW 5 */
	  4012      "01001011" // /* MW 4 */
	  4013      "00011010" // /* MW 3 */
	  4014      "00000000" // /* MW 2 */
	  4015      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4016      "00000011" // 	NOP;                                                                  AND r4, r4, r9 /* MW 4 */
	  4017      "01000000" // /* MW 3 */
	  4018      "10010100" // /* MW 2 */
	  4019      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 260 28 first
	  4020      "00110111" // 	LDA r4, [p4], #4;                       NOP;                          ADD r1, r4, r6 /* MW 8 */
	  4021      "00000000" // /* MW 7 */
	  4022      "00000000" // /* MW 6 */
	  4023      "00001000" // /* MW 5 */
	  4024      "00110010" // /* MW 4 */
	  4025      "00011000" // /* MW 3 */
	  4026      "10100011" // /* MW 2 */
	  4027      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.src_ref 6 "mask.hpp" 260 28
	  4028      "00010111" // 	NOP;                LDB r6, [p4], #4;                                 LSHL r2, r1, r15 /* MW 8 */
	  4029      "00100100" // /* MW 7 */
	  4030      "11011110" // /* MW 6 */
	  4031      "10000111" // /* MW 5 */
	  4032      "11010001" // /* MW 4 */
	  4033      "00110110" // /* MW 3 */
	  4034      "00000000" // /* MW 2 */
	  4035      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 260 28 first
	  4036      "00010111" // 	NOP;                LDB r2, [p4], #-8;                                ADD r1, r2, r1 /* MW 8 */
	  4037      "01000010" // /* MW 7 */
	  4038      "00000010" // /* MW 6 */
	  4039      "10000110" // /* MW 5 */
	  4040      "11011110" // /* MW 4 */
	  4041      "00110010" // /* MW 3 */
	  4042      "00000000" // /* MW 2 */
	  4043      "00000000" // /* MW 1 */
	  4044      "00000001" // 	NOP /* MW 2 */
	  4045      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 6 "mask.hpp" 130 25 first
.noswbrkpt
	  4046      "11110111" // 	                                        ST m0, [p0], #4;              NOP;                          MOV cl5, p4 /* MW 8 */
	  4047      "00011010" // /* MW 7 */
	  4048      "00110110" // /* MW 6 */
	  4049      "00000000" // /* MW 5 */
	  4050      "00000000" // /* MW 4 */
	  4051      "10000000" // /* MW 3 */
	  4052      "00101000" // /* MW 2 */
	  4053      "01011000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  4054      "11110111" // 	                                        ST m0, [p0];                  NOP;                          MOV p4, p0 /* MW 8 */
	  4055      "01011000" // /* MW 7 */
	  4056      "00110100" // /* MW 6 */
	  4057      "00000000" // /* MW 5 */
	  4058      "00000000" // /* MW 4 */
	  4059      "00000000" // /* MW 3 */
	  4060      "00110100" // /* MW 2 */
	  4061      "01011000" // /* MW 1 */
	  4062      "00000001" // 	NOP /* MW 2 */
	  4063      "00000000" // /* MW 1 */
	  4064      "00000001" // 	NOP /* MW 2 */
	  4065      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27 first
	  4066      "00000011" // 	NOP;                                                                  XOR r4, r4, r14 /* MW 4 */
	  4067      "01000000" // /* MW 3 */
	  4068      "11100100" // /* MW 2 */
	  4069      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  4070      "00110111" // 	NOP;                                    ST r4, [p4];                  XOR r6, r6, r14 /* MW 8 */
	  4071      "10100010" // /* MW 7 */
	  4072      "11101001" // /* MW 6 */
	  4073      "00110010" // /* MW 5 */
	  4074      "01110011" // /* MW 4 */
	  4075      "00011011" // /* MW 3 */
	  4076      "00000000" // /* MW 2 */
	  4077      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  4078      "00110111" // 	NOP;                                    ST r6, [p0], #4;              XOR r6, r2, r14 /* MW 8 */
	  4079      "01000100" // /* MW 7 */
	  4080      "11101101" // /* MW 6 */
	  4081      "00110010" // /* MW 5 */
	  4082      "01110001" // /* MW 4 */
	  4083      "00011011" // /* MW 3 */
	  4084      "00000000" // /* MW 2 */
	  4085      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
	  4086      "00000011" // 	NOP;                                    ST r6, [p0], #-8 /* MW 4 */
	  4087      "10000000" // /* MW 3 */
	  4088      "11010111" // /* MW 2 */
	  4089      "10101110" // /* MW 1 */
	  4090      "00000001" // 	NOP /* MW 2 */
	  4091      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8 first
	  4092      "00110111" // 	LDA cl7, [p0], #4;                      NOP;                          NOP /* MW 8 */
	  4093      "00000000" // /* MW 7 */
	  4094      "00000000" // /* MW 6 */
	  4095      "00000000" // /* MW 5 */
	  4096      "00000000" // /* MW 4 */
	  4097      "00000000" // /* MW 3 */
	  4098      "10100010" // /* MW 2 */
	  4099      "01011111" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  4100      "00110111" // 	LDA r6, [p0], #4;                       NOP;                          NOP /* MW 8 */
	  4101      "00000000" // /* MW 7 */
	  4102      "00000000" // /* MW 6 */
	  4103      "00000000" // /* MW 5 */
	  4104      "00000000" // /* MW 4 */
	  4105      "00000000" // /* MW 3 */
	  4106      "10100010" // /* MW 2 */
	  4107      "01110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  4108      "00110111" // 	LDA ch7, [p0];                          NOP;                          NOP /* MW 8 */
	  4109      "00000000" // /* MW 7 */
	  4110      "00000000" // /* MW 6 */
	  4111      "00000000" // /* MW 5 */
	  4112      "00000000" // /* MW 4 */
	  4113      "00000000" // /* MW 3 */
	  4114      "11010000" // /* MW 2 */
	  4115      "01010111" // /* MW 1 */
	  4116      "00000001" // 	NOP /* MW 2 */
	  4117      "00000000" // /* MW 1 */
	  4118      "00000001" // 	NOP /* MW 2 */
	  4119      "00000000" // /* MW 1 */
	  4120      "00000001" // 	NOP /* MW 2 */
	  4121      "00000000" // /* MW 1 */
	  4122      "00000001" // 	NOP /* MW 2 */
	  4123      "00000000" // /* MW 1 */
	  4124      "00000001" // 	NOP /* MW 2 */
	  4125      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 79 20 first
	  4126      "00000011" // 	NOP;                                    ST cl7, [p6], #4 /* MW 4 */
	  4127      "01110000" // /* MW 3 */
	  4128      "11110100" // /* MW 2 */
	  4129      "10101011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 79 20
	  4130      "00000011" // 	NOP;                                    ST r6, [p6], #4 /* MW 4 */
	  4131      "01110000" // /* MW 3 */
	  4132      "11010100" // /* MW 2 */
	  4133      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 79 20
	  4134      "00000011" // 	NOP;                                    ST ch7, [p6], #4 /* MW 4 */
	  4135      "01110000" // /* MW 3 */
	  4136      "11110100" // /* MW 2 */
	  4137      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 79 20
	  4138      "00000011" // 	NOP;                                    ST r3, [p6], #-12 /* MW 4 */
	  4139      "01110000" // /* MW 3 */
	  4140      "01110111" // /* MW 2 */
	  4141      "10101110" // /* MW 1 */
	  4142      "00000001" // 	NOP /* MW 2 */
	  4143      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
	  4144      "00110111" // 	LDA r2, [p6], #4;                       NOP;                          NOP /* MW 8 */
	  4145      "00000000" // /* MW 7 */
	  4146      "00000000" // /* MW 6 */
	  4147      "00000000" // /* MW 5 */
	  4148      "00000000" // /* MW 4 */
	  4149      "10000000" // /* MW 3 */
	  4150      "10100011" // /* MW 2 */
	  4151      "01110010" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  4152      "00000011" // 	NOP;                LDB r4, [p6], #4 /* MW 4 */
	  4153      "10111000" // /* MW 3 */
	  4154      "10100011" // /* MW 2 */
	  4155      "01101001" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  4156      "00000011" // 	NOP;                LDB r6, [p6], #4 /* MW 4 */
	  4157      "10111000" // /* MW 3 */
	  4158      "10100011" // /* MW 2 */
	  4159      "01101101" // /* MW 1 */
	  4160      "00000001" // 	NOP /* MW 2 */
	  4161      "00000000" // /* MW 1 */
	  4162      "00000001" // 	NOP /* MW 2 */
	  4163      "00000000" // /* MW 1 */
	  4164      "00000001" // 	NOP /* MW 2 */
	  4165      "00000000" // /* MW 1 */
	  4166      "00000001" // 	NOP /* MW 2 */
	  4167      "00000000" // /* MW 1 */
	  4168      "00000001" // 	NOP /* MW 2 */
	  4169      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  4170      "00000011" // 	NOP;                                                                  LSHL r3, r2, r14 /* MW 4 */
	  4171      "00110000" // /* MW 3 */
	  4172      "11100010" // /* MW 2 */
	  4173      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36 first
	  4174      "00000011" // 	NOP;                                                                  AND r5, r8, r2 /* MW 4 */
	  4175      "01010000" // /* MW 3 */
	  4176      "00101000" // /* MW 2 */
	  4177      "00110100" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 83 20
.src_ref 6 "mask.hpp" 99 30 first
.src_ref 6 "mask.hpp" 204 25
	  4178      "11110111" // 	                                        ST r5, [p3];                  AND r3, r3, r11;              MOV p3, p6 /* MW 8 */
	  4179      "01010110" // /* MW 7 */
	  4180      "00110111" // /* MW 6 */
	  4181      "01100110" // /* MW 5 */
	  4182      "10010110" // /* MW 4 */
	  4183      "00110110" // /* MW 3 */
	  4184      "01110100" // /* MW 2 */
	  4185      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  4186      "00000011" // 	NOP;                                                                  SUB r2, r2, r3 /* MW 4 */
	  4187      "00100000" // /* MW 3 */
	  4188      "00110010" // /* MW 2 */
	  4189      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  4190      "00000011" // 	NOP;                                                                  LSHL r3, r2, r7 /* MW 4 */
	  4191      "00110000" // /* MW 3 */
	  4192      "01110010" // /* MW 2 */
	  4193      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  4194      "00000011" // 	NOP;                                                                  AND r2, r2, r9 /* MW 4 */
	  4195      "00100000" // /* MW 3 */
	  4196      "10010010" // /* MW 2 */
	  4197      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4198      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  4199      "00110000" // /* MW 3 */
	  4200      "00111001" // /* MW 2 */
	  4201      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  4202      "00000011" // 	NOP;                                                                  ADD r2, r2, r3 /* MW 4 */
	  4203      "00100000" // /* MW 3 */
	  4204      "00110010" // /* MW 2 */
	  4205      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  4206      "00000011" // 	NOP;                                                                  LSHL r3, r4, r14 /* MW 4 */
	  4207      "00110000" // /* MW 3 */
	  4208      "11100100" // /* MW 2 */
	  4209      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  4210      "00000011" // 	NOP;                                                                  AND r5, r3, r11 /* MW 4 */
	  4211      "01010000" // /* MW 3 */
	  4212      "10110011" // /* MW 2 */
	  4213      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  4214      "00000011" // 	NOP;                                                                  LSHL r3, r6, r14 /* MW 4 */
	  4215      "00110000" // /* MW 3 */
	  4216      "11100110" // /* MW 2 */
	  4217      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  4218      "00000011" // 	NOP;                                                                  SUB r5, r4, r5 /* MW 4 */
	  4219      "01010000" // /* MW 3 */
	  4220      "01010100" // /* MW 2 */
	  4221      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  4222      "00000011" // 	NOP;                                                                  AND r3, r3, r11 /* MW 4 */
	  4223      "00110000" // /* MW 3 */
	  4224      "10110011" // /* MW 2 */
	  4225      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  4226      "00000011" // 	NOP;                                                                  LSHL r0, r5, r7 /* MW 4 */
	  4227      "00000000" // /* MW 3 */
	  4228      "01110101" // /* MW 2 */
	  4229      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
	  4230      "00000011" // 	NOP;                                                                  SUB r3, r6, r3 /* MW 4 */
	  4231      "00110000" // /* MW 3 */
	  4232      "00110110" // /* MW 2 */
	  4233      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  4234      "00000011" // 	NOP;                                                                  LSHL r7, r3, r7 /* MW 4 */
	  4235      "01110000" // /* MW 3 */
	  4236      "01110011" // /* MW 2 */
	  4237      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  4238      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  4239      "00110000" // /* MW 3 */
	  4240      "00111001" // /* MW 2 */
	  4241      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4242      "00000011" // 	NOP;                                                                  AND r7, r9, r7 /* MW 4 */
	  4243      "01110000" // /* MW 3 */
	  4244      "01111001" // /* MW 2 */
	  4245      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  4246      "00000011" // 	NOP;                                                                  AND r5, r9, r5 /* MW 4 */
	  4247      "01010000" // /* MW 3 */
	  4248      "01011001" // /* MW 2 */
	  4249      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4250      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  4251      "00000000" // /* MW 3 */
	  4252      "10010000" // /* MW 2 */
	  4253      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  4254      "00000011" // 	NOP;                                                                  ADD r3, r3, r7 /* MW 4 */
	  4255      "00110000" // /* MW 3 */
	  4256      "01110011" // /* MW 2 */
	  4257      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  4258      "00000011" // 	NOP;                                                                  ADD r7, r0, r5 /* MW 4 */
	  4259      "01110000" // /* MW 3 */
	  4260      "01010000" // /* MW 2 */
	  4261      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  4262      "00000011" // 	NOP;                                                                  LSHL r0, r2, r15 /* MW 4 */
	  4263      "00000000" // /* MW 3 */
	  4264      "11110010" // /* MW 2 */
	  4265      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  4266      "00000011" // 	NOP;                                                                  LSHL r5, r7, r15 /* MW 4 */
	  4267      "01010000" // /* MW 3 */
	  4268      "11110111" // /* MW 2 */
	  4269      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  4270      "00000011" // 	NOP;                                                                  LSHL r15, r3, r15 /* MW 4 */
	  4271      "11110000" // /* MW 3 */
	  4272      "11110011" // /* MW 2 */
	  4273      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 44
.src_ref 6 "mask.hpp" 101 44
	  4274      "01110111" // 	NOP;                                                                  ADD r5, r5, r7;               MOV r7, cl3 /* MW 8 */
	  4275      "10101010" // /* MW 7 */
	  4276      "00001110" // /* MW 6 */
	  4277      "11000110" // /* MW 5 */
	  4278      "10111101" // /* MW 4 */
	  4279      "00000100" // /* MW 3 */
	  4280      "00000000" // /* MW 2 */
	  4281      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 101 57
	  4282      "01110111" // 	NOP;                                                                  ADD r0, r0, r2;               MOV.s8 r2, #-24 /* MW 8 */
	  4283      "00000000" // /* MW 7 */
	  4284      "00000100" // /* MW 6 */
	  4285      "10000110" // /* MW 5 */
	  4286      "10001100" // /* MW 4 */
	  4287      "00111110" // /* MW 3 */
	  4288      "00000000" // /* MW 2 */
	  4289      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 101 31
	  4290      "01110111" // 	NOP;                                                                  ADD r3, r3, r15;              MOV r15, ch3 /* MW 8 */
	  4291      "01100110" // /* MW 7 */
	  4292      "00011110" // /* MW 6 */
	  4293      "11000110" // /* MW 5 */
	  4294      "00111111" // /* MW 4 */
	  4295      "00000100" // /* MW 3 */
	  4296      "00000000" // /* MW 2 */
	  4297      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4298      "00000011" // 	NOP;                                                                  AND r0, r0, r15 /* MW 4 */
	  4299      "00000000" // /* MW 3 */
	  4300      "11110000" // /* MW 2 */
	  4301      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4302      "00000011" // 	NOP;                                                                  AND r1, r1, r15 /* MW 4 */
	  4303      "00010000" // /* MW 3 */
	  4304      "11110001" // /* MW 2 */
	  4305      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4306      "00000011" // 	NOP;                                                                  AND r5, r5, r15 /* MW 4 */
	  4307      "01010000" // /* MW 3 */
	  4308      "11110101" // /* MW 2 */
	  4309      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4310      "00000011" // 	NOP;                                                                  AND r3, r3, r15 /* MW 4 */
	  4311      "00110000" // /* MW 3 */
	  4312      "11110011" // /* MW 2 */
	  4313      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  4314      "00000011" // 	NOP;                                                                  MUL r0, r0, r7 /* MW 4 */
	  4315      "00000000" // /* MW 3 */
	  4316      "01110000" // /* MW 2 */
	  4317      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  4318      "00000011" // 	NOP;                                                                  MUL r1, r1, r7 /* MW 4 */
	  4319      "00010000" // /* MW 3 */
	  4320      "01110001" // /* MW 2 */
	  4321      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  4322      "00000011" // 	NOP;                                                                  MUL r5, r5, r7 /* MW 4 */
	  4323      "01010000" // /* MW 3 */
	  4324      "01110101" // /* MW 2 */
	  4325      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  4326      "00010111" // 	NOP;                LDB r5, [p6], #-12;                               MUL r3, r3, r7 /* MW 8 */
	  4327      "01100110" // /* MW 7 */
	  4328      "11101110" // /* MW 6 */
	  4329      "11000110" // /* MW 5 */
	  4330      "11011101" // /* MW 4 */
	  4331      "00110101" // /* MW 3 */
	  4332      "00000000" // /* MW 2 */
	  4333      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4334      "00000001" // 	NOP /* MW 2 */
	  4335      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  4336      "00110111" // 	PADDA [p6], #4;                         NOP;                          NOP /* MW 8 */
	  4337      "00000000" // /* MW 7 */
	  4338      "00000000" // /* MW 6 */
	  4339      "00000000" // /* MW 5 */
	  4340      "00000000" // /* MW 4 */
	  4341      "10000000" // /* MW 3 */
	  4342      "10100011" // /* MW 2 */
	  4343      "00001000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
.nohwbrkpt
.noswbrkpt
	  4344      "00000011" // 	NOP;                                                                  LSHL r0, r0, r2 /* MW 4 */
	  4345      "00000000" // /* MW 3 */
	  4346      "00100000" // /* MW 2 */
	  4347      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  4348      "00000011" // 	NOP;                                                                  LSHL r1, r1, r2 /* MW 4 */
	  4349      "00010000" // /* MW 3 */
	  4350      "00100001" // /* MW 2 */
	  4351      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  4352      "00000011" // 	NOP;                                                                  LSHL r5, r5, r2 /* MW 4 */
	  4353      "01010000" // /* MW 3 */
	  4354      "00100101" // /* MW 2 */
	  4355      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  4356      "00000011" // 	NOP;                                                                  LSHL r3, r3, r2 /* MW 4 */
	  4357      "00110000" // /* MW 3 */
	  4358      "00100011" // /* MW 2 */
	  4359      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  4360      "00000011" // 	NOP;                                                                  ADD r2, r0, r5 /* MW 4 */
	  4361      "00100000" // /* MW 3 */
	  4362      "01010000" // /* MW 2 */
	  4363      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  4364      "00000011" // 	NOP;                                                                  ADD r2, r2, r3 /* MW 4 */
	  4365      "00100000" // /* MW 3 */
	  4366      "00110010" // /* MW 2 */
	  4367      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 204 36
.noswbrkpt
	  4368      "00111111" // 	NOP;                MOV.s9 r3, #-4;     NOP;                                                        LDA.SPIL r4, [sp, #-520];     NOP /* MW 12 */
	  4369      "11110110" // /* MW 11 */
	  4370      "00111011" // /* MW 10 */
	  4371      "01111101" // /* MW 9 */
	  4372      "00001100" // /* MW 8 */
	  4373      "00000000" // /* MW 7 */
	  4374      "00000000" // /* MW 6 */
	  4375      "10010000" // /* MW 5 */
	  4376      "11111111" // /* MW 4 */
	  4377      "00010011" // /* MW 3 */
	  4378      "00000000" // /* MW 2 */
	  4379      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  4380      "00000101" // 	MOV r0, cl4 /* MW 2 */
	  4381      "00110011" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36 first
.nohwbrkpt
.noswbrkpt
	  4382      "01110111" // 	NOP;                                                                  AND r0, r0, r4;               MOV p4, cl6 /* MW 8 */
	  4383      "00000000" // /* MW 7 */
	  4384      "10001000" // /* MW 6 */
	  4385      "00000110" // /* MW 5 */
	  4386      "11101011" // /* MW 4 */
	  4387      "00000100" // /* MW 3 */
	  4388      "00000000" // /* MW 2 */
	  4389      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36
.noswbrkpt
	  4390      "11110111" // 	                                        ST r0, [p4], #4;                                            LDA.SPIL r4, [sp, #-524];     NOP /* MW 8 */
	  4391      "11100111" // /* MW 7 */
	  4392      "10111110" // /* MW 6 */
	  4393      "11010011" // /* MW 5 */
	  4394      "11000111" // /* MW 4 */
	  4395      "01100000" // /* MW 3 */
	  4396      "00010100" // /* MW 2 */
	  4397      "10101110" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.nohwbrkpt
.noswbrkpt
	  4398      "11010101" // 	MOV p5, ch6 /* MW 2 */
	  4399      "00011010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4400      "00000001" // 	NOP /* MW 2 */
	  4401      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4402      "00000001" // 	NOP /* MW 2 */
	  4403      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4404      "00000001" // 	NOP /* MW 2 */
	  4405      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  4406      "01110111" // 	NOP;                                                                  AND r0, r4, r6;               MOV.s8 r6, #-2 /* MW 8 */
	  4407      "10000000" // /* MW 7 */
	  4408      "10001100" // /* MW 6 */
	  4409      "10000110" // /* MW 5 */
	  4410      "11101101" // /* MW 4 */
	  4411      "00111111" // /* MW 3 */
	  4412      "00000000" // /* MW 2 */
	  4413      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
	  4414      "00000011" // 	NOP;                                    ST r0, [p4], #4 /* MW 4 */
	  4415      "01100000" // /* MW 3 */
	  4416      "00010100" // /* MW 2 */
	  4417      "10101110" // /* MW 1 */
	  4418      "00000001" // 	NOP /* MW 2 */
	  4419      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
	  4420      "00000011" // 	NOP;                                                                  AND r4, r4, r5 /* MW 4 */
	  4421      "01000000" // /* MW 3 */
	  4422      "01010100" // /* MW 2 */
	  4423      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
	  4424      "00000011" // 	NOP;                                    ST r4, [p4], #-12 /* MW 4 */
	  4425      "01100000" // /* MW 3 */
	  4426      "10010111" // /* MW 2 */
	  4427      "10101110" // /* MW 1 */
	  4428      "00000001" // 	NOP /* MW 2 */
	  4429      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8 first
	  4430      "00110111" // 	LDA r0, [p4], #4;                       NOP;                          NOP /* MW 8 */
	  4431      "00000000" // /* MW 7 */
	  4432      "00000000" // /* MW 6 */
	  4433      "00000000" // /* MW 5 */
	  4434      "00000000" // /* MW 4 */
	  4435      "00000000" // /* MW 3 */
	  4436      "10100011" // /* MW 2 */
	  4437      "01110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  4438      "00000011" // 	NOP;                LDB r4, [p4], #4 /* MW 4 */
	  4439      "00111000" // /* MW 3 */
	  4440      "10100011" // /* MW 2 */
	  4441      "01101001" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
.noswbrkpt
	  4442      "00000011" // 	NOP;                LDB r4, [p4], #4 /* MW 4 */
	  4443      "00111000" // /* MW 3 */
	  4444      "10100011" // /* MW 2 */
	  4445      "01101001" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
.nohwbrkpt
.noswbrkpt
	  4446      "00000011" // 	NOP;                LDB r0, [p4], #-4 /* MW 4 */
	  4447      "00111000" // /* MW 3 */
	  4448      "10111111" // /* MW 2 */
	  4449      "01100001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4450      "00000001" // 	NOP /* MW 2 */
	  4451      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4452      "00000001" // 	NOP /* MW 2 */
	  4453      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4454      "00000001" // 	NOP /* MW 2 */
	  4455      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4456      "00000001" // 	NOP /* MW 2 */
	  4457      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 83 20 first
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  4458      "10110111" // 	NOP;                                    ST r0, [p3, cs0];             LSHL r0, r5, r14 /* MW 8 */
	  4459      "10000001" // /* MW 7 */
	  4460      "11100001" // /* MW 6 */
	  4461      "10000010" // /* MW 5 */
	  4462      "01110010" // /* MW 4 */
	  4463      "00011111" // /* MW 3 */
	  4464      "00000000" // /* MW 2 */
	  4465      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 83 20
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  4466      "00110111" // 	NOP;                                    ST r4, [p6], #4;              AND r0, r0, r11 /* MW 8 */
	  4467      "01000111" // /* MW 7 */
	  4468      "11101001" // /* MW 6 */
	  4469      "00000010" // /* MW 5 */
	  4470      "01011000" // /* MW 4 */
	  4471      "00011010" // /* MW 3 */
	  4472      "00000000" // /* MW 2 */
	  4473      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 83 20
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  4474      "00110111" // 	NOP;                                    ST r4, [p6], #4;              SUB r5, r5, r0 /* MW 8 */
	  4475      "01000111" // /* MW 7 */
	  4476      "11101001" // /* MW 6 */
	  4477      "10101010" // /* MW 5 */
	  4478      "10000010" // /* MW 4 */
	  4479      "00011000" // /* MW 3 */
	  4480      "00000000" // /* MW 2 */
	  4481      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 83 20
.src_ref 6 "mask.hpp" 100 39 first
	  4482      "00110111" // 	NOP;                                    ST r0, [p6], #-12;            LSHL r4, r5, r6 /* MW 8 */
	  4483      "01110111" // /* MW 7 */
	  4484      "11100001" // /* MW 6 */
	  4485      "10100010" // /* MW 5 */
	  4486      "00110010" // /* MW 4 */
	  4487      "00011111" // /* MW 3 */
	  4488      "00000000" // /* MW 2 */
	  4489      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4490      "00000011" // 	NOP;                                                                  AND r4, r4, r9 /* MW 4 */
	  4491      "01000000" // /* MW 3 */
	  4492      "10010100" // /* MW 2 */
	  4493      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  4494      "00110111" // 	LDA r5, [p6], #4;                       NOP;                          AND r5, r9, r5 /* MW 8 */
	  4495      "00000000" // /* MW 7 */
	  4496      "00000000" // /* MW 6 */
	  4497      "10101000" // /* MW 5 */
	  4498      "00101100" // /* MW 4 */
	  4499      "10011010" // /* MW 3 */
	  4500      "10100011" // /* MW 2 */
	  4501      "01110101" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
.nohwbrkpt
.noswbrkpt
	  4502      "00000011" // 	NOP;                                                                  ADD r4, r4, r5 /* MW 4 */
	  4503      "01000000" // /* MW 3 */
	  4504      "01010100" // /* MW 2 */
	  4505      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  4506      "00000011" // 	NOP;                                                                  LSHL r3, r4, r3 /* MW 4 */
	  4507      "00110000" // /* MW 3 */
	  4508      "00110100" // /* MW 2 */
	  4509      "00111110" // /* MW 1 */
	  4510      "00000001" // 	NOP /* MW 2 */
	  4511      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  4512      "00000011" // 	NOP;                LDB r4, [p6], #4 /* MW 4 */
	  4513      "10111000" // /* MW 3 */
	  4514      "10100011" // /* MW 2 */
	  4515      "01101001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4516      "00000001" // 	NOP /* MW 2 */
	  4517      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4518      "00000001" // 	NOP /* MW 2 */
	  4519      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4520      "00000001" // 	NOP /* MW 2 */
	  4521      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  4522      "00000011" // 	NOP;                                                                  LSHL r0, r5, r14 /* MW 4 */
	  4523      "00000000" // /* MW 3 */
	  4524      "11100101" // /* MW 2 */
	  4525      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  4526      "00000011" // 	NOP;                                                                  AND r0, r0, r11 /* MW 4 */
	  4527      "00000000" // /* MW 3 */
	  4528      "10110000" // /* MW 2 */
	  4529      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  4530      "00000011" // 	NOP;                                                                  SUB r5, r5, r0 /* MW 4 */
	  4531      "01010000" // /* MW 3 */
	  4532      "00000101" // /* MW 2 */
	  4533      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20 first
.nohwbrkpt
.noswbrkpt
	  4534      "00000011" // 	NOP;                                                                  ADD r0, r4, r3 /* MW 4 */
	  4535      "00000000" // /* MW 3 */
	  4536      "00110100" // /* MW 2 */
	  4537      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4538      "00000011" // 	NOP;                                                                  AND r15, r0, r15 /* MW 4 */
	  4539      "11110000" // /* MW 3 */
	  4540      "11110000" // /* MW 2 */
	  4541      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  4542      "00000011" // 	NOP;                                                                  MUL r0, r7, r15 /* MW 4 */
	  4543      "00000000" // /* MW 3 */
	  4544      "11110111" // /* MW 2 */
	  4545      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  4546      "00010111" // 	NOP;                LDB r3, [p6], #4;                                 LSHL r3, r5, r6 /* MW 8 */
	  4547      "10100110" // /* MW 7 */
	  4548      "11001100" // /* MW 6 */
	  4549      "11000111" // /* MW 5 */
	  4550      "11010001" // /* MW 4 */
	  4551      "00110011" // /* MW 3 */
	  4552      "00000000" // /* MW 2 */
	  4553      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4554      "00000001" // 	NOP /* MW 2 */
	  4555      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  4556      "00000011" // 	NOP;                                                                  LSHL r15, r4, r14 /* MW 4 */
	  4557      "11110000" // /* MW 3 */
	  4558      "11100100" // /* MW 2 */
	  4559      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  4560      "00000011" // 	NOP;                                                                  AND r15, r11, r15 /* MW 4 */
	  4561      "11110000" // /* MW 3 */
	  4562      "11111011" // /* MW 2 */
	  4563      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
.src_ref 6 "mask.hpp" 371 32 first
.nohwbrkpt
.noswbrkpt
	  4564      "00010111" // 	NOP;                LDB r2, [p6], #-12;                               AND r7, r9, r3 /* MW 8 */
	  4565      "00101110" // /* MW 7 */
	  4566      "10000111" // /* MW 6 */
	  4567      "11000110" // /* MW 5 */
	  4568      "11011101" // /* MW 4 */
	  4569      "00110010" // /* MW 3 */
	  4570      "00000000" // /* MW 2 */
	  4571      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  4572      "01110111" // 	NOP;                                                                  SUB r4, r4, r15;              MOV.s8 r15, #-24 /* MW 8 */
	  4573      "10001000" // /* MW 7 */
	  4574      "00111110" // /* MW 6 */
	  4575      "11000110" // /* MW 5 */
	  4576      "10001111" // /* MW 4 */
	  4577      "00111110" // /* MW 3 */
	  4578      "00000000" // /* MW 2 */
	  4579      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
.nohwbrkpt
.noswbrkpt
	  4580      "00000011" // 	NOP;                                                                  LSHL r3, r0, r15 /* MW 4 */
	  4581      "00110000" // /* MW 3 */
	  4582      "11110000" // /* MW 2 */
	  4583      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  4584      "00000011" // 	NOP;                                                                  ADD r2, r2, r3 /* MW 4 */
	  4585      "00100000" // /* MW 3 */
	  4586      "00110010" // /* MW 2 */
	  4587      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 81 40
.src_ref 6 "mask.hpp" 100 39 first
.nohwbrkpt
.noswbrkpt
	  4588      "01110111" // 	NOP;                                                                  LSHL r2, r4, r6;              MOV cl6, r2 /* MW 8 */
	  4589      "10000100" // /* MW 7 */
	  4590      "11001100" // /* MW 6 */
	  4591      "10000111" // /* MW 5 */
	  4592      "00100011" // /* MW 4 */
	  4593      "00000111" // /* MW 3 */
	  4594      "00000000" // /* MW 2 */
	  4595      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.nohwbrkpt
.noswbrkpt
	  4596      "00000011" // 	NOP;                                                                  AND r2, r2, r9 /* MW 4 */
	  4597      "00100000" // /* MW 3 */
	  4598      "10010010" // /* MW 2 */
	  4599      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.nohwbrkpt
.noswbrkpt
	  4600      "00000011" // 	NOP;                                                                  AND r4, r4, r9 /* MW 4 */
	  4601      "01000000" // /* MW 3 */
	  4602      "10010100" // /* MW 2 */
	  4603      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.nohwbrkpt
.noswbrkpt
	  4604      "00000011" // 	NOP;                                                                  ADD r4, r4, r2 /* MW 4 */
	  4605      "01000000" // /* MW 3 */
	  4606      "00100100" // /* MW 2 */
	  4607      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  4608      "00000011" // 	NOP;                                                                  LSHL r0, r3, r14 /* MW 4 */
	  4609      "00000000" // /* MW 3 */
	  4610      "11100011" // /* MW 2 */
	  4611      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  4612      "00000011" // 	NOP;                                                                  AND r0, r0, r11 /* MW 4 */
	  4613      "00000000" // /* MW 3 */
	  4614      "10110000" // /* MW 2 */
	  4615      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  4616      "00000011" // 	NOP;                                                                  SUB r3, r3, r0 /* MW 4 */
	  4617      "00110000" // /* MW 3 */
	  4618      "00000011" // /* MW 2 */
	  4619      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  4620      "00000011" // 	NOP;                                                                  LSHL r0, r3, r6 /* MW 4 */
	  4621      "00000000" // /* MW 3 */
	  4622      "01100011" // /* MW 2 */
	  4623      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  4624      "00000011" // 	NOP;                                                                  AND r5, r9, r5 /* MW 4 */
	  4625      "01010000" // /* MW 3 */
	  4626      "01011001" // /* MW 2 */
	  4627      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4628      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  4629      "00000000" // /* MW 3 */
	  4630      "10010000" // /* MW 2 */
	  4631      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 101 25
	  4632      "01110111" // 	NOP;                                                                  ADD r5, r5, r7;               MOV.s8 r7, #-4 /* MW 8 */
	  4633      "10101010" // /* MW 7 */
	  4634      "00001110" // /* MW 6 */
	  4635      "11000110" // /* MW 5 */
	  4636      "11001101" // /* MW 4 */
	  4637      "00111111" // /* MW 3 */
	  4638      "00000000" // /* MW 2 */
	  4639      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  4640      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  4641      "00110000" // /* MW 3 */
	  4642      "00111001" // /* MW 2 */
	  4643      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  4644      "00000011" // 	NOP;                                                                  LSHL r14, r2, r14 /* MW 4 */
	  4645      "11100000" // /* MW 3 */
	  4646      "11100010" // /* MW 2 */
	  4647      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  4648      "00000011" // 	NOP;                                                                  AND r14, r14, r11 /* MW 4 */
	  4649      "11100000" // /* MW 3 */
	  4650      "10111110" // /* MW 2 */
	  4651      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 101 31
	  4652      "01110111" // 	NOP;                                                                  SUB r2, r2, r14;              MOV r14, ch3 /* MW 8 */
	  4653      "01000100" // /* MW 7 */
	  4654      "00111100" // /* MW 6 */
	  4655      "10000110" // /* MW 5 */
	  4656      "00111111" // /* MW 4 */
	  4657      "00000100" // /* MW 3 */
	  4658      "00000000" // /* MW 2 */
	  4659      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
	  4660      "00000011" // 	NOP;                                                                  ADD r3, r0, r3 /* MW 4 */
	  4661      "00110000" // /* MW 3 */
	  4662      "00110000" // /* MW 2 */
	  4663      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  4664      "00000011" // 	NOP;                                                                  LSHL r0, r5, r7 /* MW 4 */
	  4665      "00000000" // /* MW 3 */
	  4666      "01110101" // /* MW 2 */
	  4667      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  4668      "00000011" // 	NOP;                                                                  ADD r5, r0, r5 /* MW 4 */
	  4669      "01010000" // /* MW 3 */
	  4670      "01010000" // /* MW 2 */
	  4671      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
.src_ref 6 "mask.hpp" 101 44
.src_ref 6 "mask.hpp" 101 44
	  4672      "01110111" // 	NOP;                                                                  LSHL r0, r2, r6;              MOV r6, cl3 /* MW 8 */
	  4673      "01000000" // /* MW 7 */
	  4674      "11001100" // /* MW 6 */
	  4675      "10000111" // /* MW 5 */
	  4676      "10111101" // /* MW 4 */
	  4677      "00000100" // /* MW 3 */
	  4678      "00000000" // /* MW 2 */
	  4679      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  4680      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  4681      "00000000" // /* MW 3 */
	  4682      "10010000" // /* MW 2 */
	  4683      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  4684      "00000011" // 	NOP;                                                                  AND r2, r2, r9 /* MW 4 */
	  4685      "00100000" // /* MW 3 */
	  4686      "10010010" // /* MW 2 */
	  4687      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  4688      "00000011" // 	NOP;                                                                  ADD r2, r0, r2 /* MW 4 */
	  4689      "00100000" // /* MW 3 */
	  4690      "00100000" // /* MW 2 */
	  4691      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  4692      "00000011" // 	NOP;                                                                  LSHL r0, r3, r7 /* MW 4 */
	  4693      "00000000" // /* MW 3 */
	  4694      "01110011" // /* MW 2 */
	  4695      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  4696      "00000011" // 	NOP;                                                                  ADD r3, r0, r3 /* MW 4 */
	  4697      "00110000" // /* MW 3 */
	  4698      "00110000" // /* MW 2 */
	  4699      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  4700      "00000011" // 	NOP;                                                                  LSHL r0, r4, r7 /* MW 4 */
	  4701      "00000000" // /* MW 3 */
	  4702      "01110100" // /* MW 2 */
	  4703      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 204 36
	  4704      "01110111" // 	NOP;                                                                  ADD r0, r0, r4;               MOV r4, ch5 /* MW 8 */
	  4705      "00000000" // /* MW 7 */
	  4706      "00001000" // /* MW 6 */
	  4707      "00000110" // /* MW 5 */
	  4708      "01011101" // /* MW 4 */
	  4709      "00000100" // /* MW 3 */
	  4710      "00000000" // /* MW 2 */
	  4711      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4712      "00000011" // 	NOP;                                                                  AND r3, r14, r3 /* MW 4 */
	  4713      "00110000" // /* MW 3 */
	  4714      "00111110" // /* MW 2 */
	  4715      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4716      "00000011" // 	NOP;                                                                  AND r0, r0, r14 /* MW 4 */
	  4717      "00000000" // /* MW 3 */
	  4718      "11100000" // /* MW 2 */
	  4719      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  4720      "00000011" // 	NOP;                                                                  MUL r0, r0, r6 /* MW 4 */
	  4721      "00000000" // /* MW 3 */
	  4722      "01100000" // /* MW 2 */
	  4723      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  4724      "00010111" // 	NOP;                LDB r5, [p7], #4;                                 AND r5, r14, r5 /* MW 8 */
	  4725      "11001010" // /* MW 7 */
	  4726      "10001011" // /* MW 6 */
	  4727      "11100110" // /* MW 5 */
	  4728      "11010001" // /* MW 4 */
	  4729      "00110101" // /* MW 3 */
	  4730      "00000000" // /* MW 2 */
	  4731      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44 first
.nohwbrkpt
.noswbrkpt
	  4732      "00000011" // 	NOP;                                                                  MUL r5, r6, r5 /* MW 4 */
	  4733      "01010000" // /* MW 3 */
	  4734      "01010110" // /* MW 2 */
	  4735      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 371 32 first
.nohwbrkpt
.noswbrkpt
	  4736      "00010111" // 	NOP;                LDB r3, [p7], #4;                                 LSHL r0, r0, r15 /* MW 8 */
	  4737      "00000000" // /* MW 7 */
	  4738      "11011110" // /* MW 6 */
	  4739      "11100111" // /* MW 5 */
	  4740      "11010001" // /* MW 4 */
	  4741      "00110011" // /* MW 3 */
	  4742      "00000000" // /* MW 2 */
	  4743      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44 first
.nohwbrkpt
.noswbrkpt
	  4744      "00000011" // 	NOP;                                                                  MUL r3, r6, r3 /* MW 4 */
	  4745      "00110000" // /* MW 3 */
	  4746      "00110110" // /* MW 2 */
	  4747      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  4748      "00000011" // 	NOP;                                                                  LSHL r5, r5, r15 /* MW 4 */
	  4749      "01010000" // /* MW 3 */
	  4750      "11110101" // /* MW 2 */
	  4751      "00111110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4752      "00000001" // 	NOP /* MW 2 */
	  4753      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  4754      "00000011" // 	NOP;                                                                  ADD r0, r0, r5 /* MW 4 */
	  4755      "00000000" // /* MW 3 */
	  4756      "01010000" // /* MW 2 */
	  4757      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
.nohwbrkpt
.noswbrkpt
	  4758      "00000011" // 	NOP;                                                                  LSHL r3, r3, r15 /* MW 4 */
	  4759      "00110000" // /* MW 3 */
	  4760      "11110011" // /* MW 2 */
	  4761      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  4762      "00000011" // 	NOP;                                                                  ADD r0, r0, r3 /* MW 4 */
	  4763      "00000000" // /* MW 3 */
	  4764      "00110000" // /* MW 2 */
	  4765      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36 first
	  4766      "00000011" // 	NOP;                                                                  AND r4, r4, r5 /* MW 4 */
	  4767      "01000000" // /* MW 3 */
	  4768      "01010100" // /* MW 2 */
	  4769      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.src_ref 6 "mask.hpp" 204 25
	  4770      "10110111" // 	NOP;                                    ST r4, [p5], #4;              LSHL r4, r2, r7 /* MW 8 */
	  4771      "01000110" // /* MW 7 */
	  4772      "11101001" // /* MW 6 */
	  4773      "00100010" // /* MW 5 */
	  4774      "00111001" // /* MW 4 */
	  4775      "00011111" // /* MW 3 */
	  4776      "00000000" // /* MW 2 */
	  4777      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 204 36
.noswbrkpt
	  4778      "00111111" // 	NOP;                MOV.s9 r4, #-1;                                   ADD r2, r4, r2;               LDA.SPIL r0, [sp, #-528];     NOP /* MW 12 */
	  4779      "11100110" // /* MW 11 */
	  4780      "00111011" // /* MW 10 */
	  4781      "01111100" // /* MW 9 */
	  4782      "00001100" // /* MW 8 */
	  4783      "10000100" // /* MW 7 */
	  4784      "00000100" // /* MW 6 */
	  4785      "11100110" // /* MW 5 */
	  4786      "11111111" // /* MW 4 */
	  4787      "00010100" // /* MW 3 */
	  4788      "00000000" // /* MW 2 */
	  4789      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
.nohwbrkpt
.noswbrkpt
	  4790      "00000011" // 	NOP;                                                                  AND r2, r2, r14 /* MW 4 */
	  4791      "00100000" // /* MW 3 */
	  4792      "11100010" // /* MW 2 */
	  4793      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
.nohwbrkpt
.noswbrkpt
	  4794      "00000011" // 	NOP;                                                                  MUL r2, r2, r6 /* MW 4 */
	  4795      "00100000" // /* MW 3 */
	  4796      "01100010" // /* MW 2 */
	  4797      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  4798      "00000011" // 	NOP;                                                                  LSHL r4, r5, r4 /* MW 4 */
	  4799      "01000000" // /* MW 3 */
	  4800      "01000101" // /* MW 2 */
	  4801      "00111110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4802      "00000001" // 	NOP /* MW 2 */
	  4803      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
.nohwbrkpt
.noswbrkpt
	  4804      "00000011" // 	NOP;                                                                  LSHL r2, r2, r15 /* MW 4 */
	  4805      "00100000" // /* MW 3 */
	  4806      "11110010" // /* MW 2 */
	  4807      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  4808      "00000011" // 	NOP;                                                                  ADD r2, r0, r2 /* MW 4 */
	  4809      "00100000" // /* MW 3 */
	  4810      "00100000" // /* MW 2 */
	  4811      "00110000" // /* MW 1 */
	  4812      "00000001" // 	NOP /* MW 2 */
	  4813      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36 first
	  4814      "00000011" // 	NOP;                                                                  AND r0, r0, r3 /* MW 4 */
	  4815      "00000000" // /* MW 3 */
	  4816      "00110000" // /* MW 2 */
	  4817      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30 first
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  4818      "00011111" // 	NOP;                LDB r7, [p7], #-12; ST r0, [p5], #4;              AND r4, r4, r11;              NOP /* MW 12 */
	  4819      "00000000" // /* MW 11 */
	  4820      "00000000" // /* MW 10 */
	  4821      "11010001" // /* MW 9 */
	  4822      "11010010" // /* MW 8 */
	  4823      "00011010" // /* MW 7 */
	  4824      "10000101" // /* MW 6 */
	  4825      "11101011" // /* MW 5 */
	  4826      "11011101" // /* MW 4 */
	  4827      "00110111" // /* MW 3 */
	  4828      "00000000" // /* MW 2 */
	  4829      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 100 39
.nohwbrkpt
.noswbrkpt
	  4830      "01110111" // 	NOP;                                                                  SUB r5, r5, r4;               MOV.s8 r4, #-2 /* MW 8 */
	  4831      "10101010" // /* MW 7 */
	  4832      "00101000" // /* MW 6 */
	  4833      "00000110" // /* MW 5 */
	  4834      "11101101" // /* MW 4 */
	  4835      "00111111" // /* MW 3 */
	  4836      "00000000" // /* MW 2 */
	  4837      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
.nohwbrkpt
.noswbrkpt
	  4838      "00000011" // 	NOP;                                                                  LSHL r0, r5, r4 /* MW 4 */
	  4839      "00000000" // /* MW 3 */
	  4840      "01000101" // /* MW 2 */
	  4841      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.nohwbrkpt
.noswbrkpt
	  4842      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  4843      "00000000" // /* MW 3 */
	  4844      "10010000" // /* MW 2 */
	  4845      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.nohwbrkpt
.noswbrkpt
	  4846      "00000011" // 	NOP;                                                                  AND r5, r9, r5 /* MW 4 */
	  4847      "01010000" // /* MW 3 */
	  4848      "01011001" // /* MW 2 */
	  4849      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 100 33
.nohwbrkpt
.noswbrkpt
	  4850      "01110111" // 	NOP;                                                                  ADD r0, r0, r5;               MOV.s8 r5, #-1 /* MW 8 */
	  4851      "00000000" // /* MW 7 */
	  4852      "00001010" // /* MW 6 */
	  4853      "01000110" // /* MW 5 */
	  4854      "11111101" // /* MW 4 */
	  4855      "00111111" // /* MW 3 */
	  4856      "00000000" // /* MW 2 */
	  4857      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.nohwbrkpt
.noswbrkpt
	  4858      "00000011" // 	NOP;                                                                  LSHL r7, r0, r7 /* MW 4 */
	  4859      "01110000" // /* MW 3 */
	  4860      "01110000" // /* MW 2 */
	  4861      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.nohwbrkpt
.noswbrkpt
	  4862      "00000011" // 	NOP;                                                                  ADD r0, r0, r7 /* MW 4 */
	  4863      "00000000" // /* MW 3 */
	  4864      "01110000" // /* MW 2 */
	  4865      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  4866      "00000011" // 	NOP;                                                                  AND r0, r0, r14 /* MW 4 */
	  4867      "00000000" // /* MW 3 */
	  4868      "11100000" // /* MW 2 */
	  4869      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  4870      "00000011" // 	NOP;                                                                  MUL r0, r0, r6 /* MW 4 */
	  4871      "00000000" // /* MW 3 */
	  4872      "01100000" // /* MW 2 */
	  4873      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.noswbrkpt
	  4874      "11110111" // 	                                        NOP;                                                        LDA.SPIL r0, [sp, #-1252];    NOP /* MW 8 */
	  4875      "11100111" // /* MW 7 */
	  4876      "01100011" // /* MW 6 */
	  4877      "11000011" // /* MW 5 */
	  4878      "11000111" // /* MW 4 */
	  4879      "00000000" // /* MW 3 */
	  4880      "00000000" // /* MW 2 */
	  4881      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4882      "00000001" // 	NOP /* MW 2 */
	  4883      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  4884      "00000011" // 	NOP;                                                                  LSHL r0, r0, r15 /* MW 4 */
	  4885      "00000000" // /* MW 3 */
	  4886      "11110000" // /* MW 2 */
	  4887      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  4888      "00000011" // 	NOP;                                                                  ADD r1, r0, r1 /* MW 4 */
	  4889      "00010000" // /* MW 3 */
	  4890      "00010000" // /* MW 2 */
	  4891      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  4892      "00000011" // 	NOP;                                                                  LSHL r0, r3, r5 /* MW 4 */
	  4893      "00000000" // /* MW 3 */
	  4894      "01010011" // /* MW 2 */
	  4895      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  4896      "00000011" // 	NOP;                                                                  AND r0, r0, r11 /* MW 4 */
	  4897      "00000000" // /* MW 3 */
	  4898      "10110000" // /* MW 2 */
	  4899      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  4900      "00000011" // 	NOP;                                                                  SUB r3, r3, r0 /* MW 4 */
	  4901      "00110000" // /* MW 3 */
	  4902      "00000011" // /* MW 2 */
	  4903      "00110001" // /* MW 1 */
	  4904      "00000001" // 	NOP /* MW 2 */
	  4905      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36 first
	  4906      "00000011" // 	NOP;                                                                  AND r0, r0, r7 /* MW 4 */
	  4907      "00000000" // /* MW 3 */
	  4908      "01110000" // /* MW 2 */
	  4909      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
	  4910      "00000011" // 	NOP;                                    ST r0, [p5], #-12 /* MW 4 */
	  4911      "01101000" // /* MW 3 */
	  4912      "00010111" // /* MW 2 */
	  4913      "10101110" // /* MW 1 */
	  4914      "00000001" // 	NOP /* MW 2 */
	  4915      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8 first
	  4916      "00110111" // 	LDA r0, [p5], #4;                       NOP;                          NOP /* MW 8 */
	  4917      "00000000" // /* MW 7 */
	  4918      "00000000" // /* MW 6 */
	  4919      "00000000" // /* MW 5 */
	  4920      "00000000" // /* MW 4 */
	  4921      "01000000" // /* MW 3 */
	  4922      "10100011" // /* MW 2 */
	  4923      "01110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
.noswbrkpt
	  4924      "00110111" // 	LDA r0, [p5], #4;                       NOP;                          NOP /* MW 8 */
	  4925      "00000000" // /* MW 7 */
	  4926      "00000000" // /* MW 6 */
	  4927      "00000000" // /* MW 5 */
	  4928      "00000000" // /* MW 4 */
	  4929      "01000000" // /* MW 3 */
	  4930      "10100011" // /* MW 2 */
	  4931      "01110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
.nohwbrkpt
.noswbrkpt
	  4932      "00110111" // 	LDA r0, [p5], #4;                       NOP;                          NOP /* MW 8 */
	  4933      "00000000" // /* MW 7 */
	  4934      "00000000" // /* MW 6 */
	  4935      "00000000" // /* MW 5 */
	  4936      "00000000" // /* MW 4 */
	  4937      "01000000" // /* MW 3 */
	  4938      "10100011" // /* MW 2 */
	  4939      "01110000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4940      "00000001" // 	NOP /* MW 2 */
	  4941      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4942      "00000001" // 	NOP /* MW 2 */
	  4943      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4944      "00000001" // 	NOP /* MW 2 */
	  4945      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4946      "00000001" // 	NOP /* MW 2 */
	  4947      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  4948      "00000001" // 	NOP /* MW 2 */
	  4949      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 84 20 first
.src_ref 6 "mask.hpp" 206 8
.nohwbrkpt
.noswbrkpt
	  4950      "00010111" // 	NOP;                LDB r3, [p5], #-4;  ST r0, [p7], #4 /* MW 8 */
	  4951      "10001111" // /* MW 7 */
	  4952      "11000010" // /* MW 6 */
	  4953      "10110101" // /* MW 5 */
	  4954      "11011111" // /* MW 4 */
	  4955      "00110011" // /* MW 3 */
	  4956      "00000000" // /* MW 2 */
	  4957      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 84 20
.nohwbrkpt
.noswbrkpt
	  4958      "00000011" // 	NOP;                                    ST r0, [p7], #4 /* MW 4 */
	  4959      "01111000" // /* MW 3 */
	  4960      "00010100" // /* MW 2 */
	  4961      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 84 20
.src_ref 6 "mask.hpp" 100 39 first
.nohwbrkpt
.noswbrkpt
	  4962      "10110111" // 	NOP;                                    ST r0, [p7], #4;              LSHL r0, r3, r4 /* MW 8 */
	  4963      "01000111" // /* MW 7 */
	  4964      "11100001" // /* MW 6 */
	  4965      "10000010" // /* MW 5 */
	  4966      "00100001" // /* MW 4 */
	  4967      "00011111" // /* MW 3 */
	  4968      "00000000" // /* MW 2 */
	  4969      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.nohwbrkpt
.noswbrkpt
	  4970      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  4971      "00000000" // /* MW 3 */
	  4972      "10010000" // /* MW 2 */
	  4973      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.nohwbrkpt
.noswbrkpt
	  4974      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  4975      "00110000" // /* MW 3 */
	  4976      "00111001" // /* MW 2 */
	  4977      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 25
.nohwbrkpt
.noswbrkpt
	  4978      "01110111" // 	NOP;                                                                  ADD r3, r0, r3;               MOV.s8 r0, #-4 /* MW 8 */
	  4979      "00000110" // /* MW 7 */
	  4980      "00000110" // /* MW 6 */
	  4981      "00000110" // /* MW 5 */
	  4982      "11001100" // /* MW 4 */
	  4983      "00111111" // /* MW 3 */
	  4984      "00000000" // /* MW 2 */
	  4985      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.nohwbrkpt
.noswbrkpt
	  4986      "00000011" // 	NOP;                                                                  LSHL r0, r3, r0 /* MW 4 */
	  4987      "00000000" // /* MW 3 */
	  4988      "00000011" // /* MW 2 */
	  4989      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.nohwbrkpt
.noswbrkpt
	  4990      "00000011" // 	NOP;                                                                  ADD r0, r0, r3 /* MW 4 */
	  4991      "00000000" // /* MW 3 */
	  4992      "00110000" // /* MW 2 */
	  4993      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 84 20 first
.src_ref 6 "mask.hpp" 101 31
	  4994      "10110111" // 	NOP;                                    ST r3, [p7], #-12;            AND r14, r0, r14 /* MW 8 */
	  4995      "01110111" // /* MW 7 */
	  4996      "11100111" // /* MW 6 */
	  4997      "01110010" // /* MW 5 */
	  4998      "01110000" // /* MW 4 */
	  4999      "00011010" // /* MW 3 */
	  5000      "00000000" // /* MW 2 */
	  5001      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44 first
	  5002      "00000011" // 	NOP;                                                                  MUL r14, r6, r14 /* MW 4 */
	  5003      "11100000" // /* MW 3 */
	  5004      "11100110" // /* MW 2 */
	  5005      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  5006      "00110111" // 	LDA r14, [p7], #4;                      NOP;                          NOP /* MW 8 */
	  5007      "00000000" // /* MW 7 */
	  5008      "00000000" // /* MW 6 */
	  5009      "00000000" // /* MW 5 */
	  5010      "00000000" // /* MW 4 */
	  5011      "11000000" // /* MW 3 */
	  5012      "10100011" // /* MW 2 */
	  5013      "01111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
.nohwbrkpt
.noswbrkpt
	  5014      "00000011" // 	NOP;                LDB r3, [p7], #4 /* MW 4 */
	  5015      "11111000" // /* MW 3 */
	  5016      "10100011" // /* MW 2 */
	  5017      "01100111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
.nohwbrkpt
.noswbrkpt
	  5018      "00000011" // 	NOP;                                                                  LSHL r14, r14, r15 /* MW 4 */
	  5019      "11100000" // /* MW 3 */
	  5020      "11111110" // /* MW 2 */
	  5021      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  5022      "00000011" // 	NOP;                                                                  ADD r1, r14, r1 /* MW 4 */
	  5023      "00010000" // /* MW 3 */
	  5024      "00011110" // /* MW 2 */
	  5025      "00110000" // /* MW 1 */
	  5026      "00000001" // 	NOP /* MW 2 */
	  5027      "00000000" // /* MW 1 */
	  5028      "00000001" // 	NOP /* MW 2 */
	  5029      "00000000" // /* MW 1 */
	  5030      "00000001" // 	NOP /* MW 2 */
	  5031      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
.noswbrkpt
	  5032      "00000011" // 	NOP;                LDB r0, [p7], #4 /* MW 4 */
	  5033      "11111000" // /* MW 3 */
	  5034      "10100011" // /* MW 2 */
	  5035      "01100001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  5036      "00000011" // 	NOP;                                                                  LSHL r15, r14, r5 /* MW 4 */
	  5037      "11110000" // /* MW 3 */
	  5038      "01011110" // /* MW 2 */
	  5039      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.nohwbrkpt
.noswbrkpt
	  5040      "00000011" // 	NOP;                                                                  LSHL r0, r3, r5 /* MW 4 */
	  5041      "00000000" // /* MW 3 */
	  5042      "01010011" // /* MW 2 */
	  5043      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  5044      "00000011" // 	NOP;                                                                  AND r0, r0, r11 /* MW 4 */
	  5045      "00000000" // /* MW 3 */
	  5046      "10110000" // /* MW 2 */
	  5047      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  5048      "00000011" // 	NOP;                                                                  SUB r3, r3, r0 /* MW 4 */
	  5049      "00110000" // /* MW 3 */
	  5050      "00000011" // /* MW 2 */
	  5051      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.nohwbrkpt
.noswbrkpt
	  5052      "00000011" // 	NOP;                                                                  LSHL r0, r7, r5 /* MW 4 */
	  5053      "00000000" // /* MW 3 */
	  5054      "01010111" // /* MW 2 */
	  5055      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  5056      "00000011" // 	NOP;                                                                  AND r0, r0, r11 /* MW 4 */
	  5057      "00000000" // /* MW 3 */
	  5058      "10110000" // /* MW 2 */
	  5059      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  5060      "00000011" // 	NOP;                                                                  SUB r7, r7, r0 /* MW 4 */
	  5061      "01110000" // /* MW 3 */
	  5062      "00000111" // /* MW 2 */
	  5063      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  5064      "00000011" // 	NOP;                                                                  LSHL r5, r0, r5 /* MW 4 */
	  5065      "01010000" // /* MW 3 */
	  5066      "01010000" // /* MW 2 */
	  5067      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  5068      "00000011" // 	NOP;                                                                  AND r5, r5, r11 /* MW 4 */
	  5069      "01010000" // /* MW 3 */
	  5070      "10110101" // /* MW 2 */
	  5071      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  5072      "00000011" // 	NOP;                                                                  SUB r5, r0, r5 /* MW 4 */
	  5073      "01010000" // /* MW 3 */
	  5074      "01010000" // /* MW 2 */
	  5075      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  5076      "00000011" // 	NOP;                                                                  LSHL r0, r7, r4 /* MW 4 */
	  5077      "00000000" // /* MW 3 */
	  5078      "01000111" // /* MW 2 */
	  5079      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  5080      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  5081      "00000000" // /* MW 3 */
	  5082      "10010000" // /* MW 2 */
	  5083      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  5084      "00000011" // 	NOP;                                                                  AND r7, r9, r7 /* MW 4 */
	  5085      "01110000" // /* MW 3 */
	  5086      "01111001" // /* MW 2 */
	  5087      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 25
	  5088      "01110111" // 	NOP;                                                                  ADD r7, r0, r7;               MOV.s8 r0, #-4 /* MW 8 */
	  5089      "00001110" // /* MW 7 */
	  5090      "00001110" // /* MW 6 */
	  5091      "00000110" // /* MW 5 */
	  5092      "11001100" // /* MW 4 */
	  5093      "00111111" // /* MW 3 */
	  5094      "00000000" // /* MW 2 */
	  5095      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  5096      "00000011" // 	NOP;                                                                  LSHL r0, r7, r0 /* MW 4 */
	  5097      "00000000" // /* MW 3 */
	  5098      "00000111" // /* MW 2 */
	  5099      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  5100      "00011111" // 	NOP;                LDB r0, [p7], #-12; NOP;                          ADD r7, r0, r7;               MOV r0, ch3 /* MW 12 */
	  5101      "00111100" // /* MW 11 */
	  5102      "11000100" // /* MW 10 */
	  5103      "11000001" // /* MW 9 */
	  5104      "11000001" // /* MW 8 */
	  5105      "00000000" // /* MW 7 */
	  5106      "00000000" // /* MW 6 */
	  5107      "11100000" // /* MW 5 */
	  5108      "11011101" // /* MW 4 */
	  5109      "00110000" // /* MW 3 */
	  5110      "00000000" // /* MW 2 */
	  5111      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 101 31 first
.nohwbrkpt
.noswbrkpt
	  5112      "01110111" // 	NOP;                                                                  AND r0, r0, r7;               MOV.s8 r7, #-1 /* MW 8 */
	  5113      "00000000" // /* MW 7 */
	  5114      "10001110" // /* MW 6 */
	  5115      "11000110" // /* MW 5 */
	  5116      "11111101" // /* MW 4 */
	  5117      "00111111" // /* MW 3 */
	  5118      "00000000" // /* MW 2 */
	  5119      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
.src_ref 6 "mask.hpp" 101 57
.nohwbrkpt
.noswbrkpt
	  5120      "01110111" // 	NOP;                                                                  MUL r6, r0, r6;               MOV.s8 r0, #-24 /* MW 8 */
	  5121      "00001100" // /* MW 7 */
	  5122      "11101100" // /* MW 6 */
	  5123      "00000110" // /* MW 5 */
	  5124      "10001100" // /* MW 4 */
	  5125      "00111110" // /* MW 3 */
	  5126      "00000000" // /* MW 2 */
	  5127      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30 first
.nohwbrkpt
.noswbrkpt
	  5128      "00000011" // 	NOP;                                                                  AND r15, r11, r15 /* MW 4 */
	  5129      "11110000" // /* MW 3 */
	  5130      "11111011" // /* MW 2 */
	  5131      "00110100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5132      "00000001" // 	NOP /* MW 2 */
	  5133      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 81 40
.src_ref 6 "mask.hpp" 101 57 first
.nohwbrkpt
.noswbrkpt
	  5134      "01110111" // 	NOP;                                                                  LSHL r6, r6, r0;              MOV r0, cl6 /* MW 8 */
	  5135      "11001100" // /* MW 7 */
	  5136      "11000000" // /* MW 6 */
	  5137      "00000111" // /* MW 5 */
	  5138      "11101100" // /* MW 4 */
	  5139      "00000100" // /* MW 3 */
	  5140      "00000000" // /* MW 2 */
	  5141      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
.nohwbrkpt
.noswbrkpt
	  5142      "00000011" // 	NOP;                                                                  ADD r1, r6, r1 /* MW 4 */
	  5143      "00010000" // /* MW 3 */
	  5144      "00010110" // /* MW 2 */
	  5145      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 81 40 first
.nohwbrkpt
.noswbrkpt
	  5146      "00000011" // 	NOP;                                                                  ADD r1, r0, r1 /* MW 4 */
	  5147      "00010000" // /* MW 3 */
	  5148      "00010000" // /* MW 2 */
	  5149      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  5150      "00000011" // 	NOP;                                                                  LSHL r6, r5, r4 /* MW 4 */
	  5151      "01100000" // /* MW 3 */
	  5152      "01000101" // /* MW 2 */
	  5153      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  5154      "00000011" // 	NOP;                                                                  LSHL r7, r0, r7 /* MW 4 */
	  5155      "01110000" // /* MW 3 */
	  5156      "01110000" // /* MW 2 */
	  5157      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  5158      "00000011" // 	NOP;                                                                  AND r7, r11, r7 /* MW 4 */
	  5159      "01110000" // /* MW 3 */
	  5160      "01111011" // /* MW 2 */
	  5161      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  5162      "00000011" // 	NOP;                                                                  SUB r7, r0, r7 /* MW 4 */
	  5163      "01110000" // /* MW 3 */
	  5164      "01110000" // /* MW 2 */
	  5165      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  5166      "00000011" // 	NOP;                                                                  LSHL r0, r3, r4 /* MW 4 */
	  5167      "00000000" // /* MW 3 */
	  5168      "01000011" // /* MW 2 */
	  5169      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
	  5170      "00000011" // 	NOP;                                                                  SUB r14, r14, r15 /* MW 4 */
	  5171      "11100000" // /* MW 3 */
	  5172      "11111110" // /* MW 2 */
	  5173      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  5174      "00000011" // 	NOP;                                                                  LSHL r15, r14, r4 /* MW 4 */
	  5175      "11110000" // /* MW 3 */
	  5176      "01001110" // /* MW 2 */
	  5177      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  5178      "00000011" // 	NOP;                                                                  LSHL r4, r7, r4 /* MW 4 */
	  5179      "01000000" // /* MW 3 */
	  5180      "01000111" // /* MW 2 */
	  5181      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  5182      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  5183      "00000000" // /* MW 3 */
	  5184      "10010000" // /* MW 2 */
	  5185      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  5186      "00000011" // 	NOP;                                                                  AND r3, r9, r3 /* MW 4 */
	  5187      "00110000" // /* MW 3 */
	  5188      "00111001" // /* MW 2 */
	  5189      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  5190      "00000011" // 	NOP;                                                                  AND r4, r4, r9 /* MW 4 */
	  5191      "01000000" // /* MW 3 */
	  5192      "10010100" // /* MW 2 */
	  5193      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 25
	  5194      "01110111" // 	NOP;                                                                  ADD r0, r0, r3;               MOV.s8 r3, #-4 /* MW 8 */
	  5195      "00000000" // /* MW 7 */
	  5196      "00000110" // /* MW 6 */
	  5197      "11000110" // /* MW 5 */
	  5198      "11001100" // /* MW 4 */
	  5199      "00111111" // /* MW 3 */
	  5200      "00000000" // /* MW 2 */
	  5201      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  5202      "00000011" // 	NOP;                                                                  AND r7, r9, r7 /* MW 4 */
	  5203      "01110000" // /* MW 3 */
	  5204      "01111001" // /* MW 2 */
	  5205      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  5206      "00000011" // 	NOP;                                                                  ADD r7, r4, r7 /* MW 4 */
	  5207      "01110000" // /* MW 3 */
	  5208      "01110100" // /* MW 2 */
	  5209      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  5210      "00000011" // 	NOP;                                                                  LSHL r4, r7, r3 /* MW 4 */
	  5211      "01000000" // /* MW 3 */
	  5212      "00110111" // /* MW 2 */
	  5213      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  5214      "00000011" // 	NOP;                                                                  ADD r7, r4, r7 /* MW 4 */
	  5215      "01110000" // /* MW 3 */
	  5216      "01110100" // /* MW 2 */
	  5217      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  5218      "00000011" // 	NOP;                                                                  AND r6, r6, r9 /* MW 4 */
	  5219      "01100000" // /* MW 3 */
	  5220      "10010110" // /* MW 2 */
	  5221      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  5222      "00000011" // 	NOP;                                                                  AND r5, r9, r5 /* MW 4 */
	  5223      "01010000" // /* MW 3 */
	  5224      "01011001" // /* MW 2 */
	  5225      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 44
	  5226      "01110111" // 	NOP;                                                                  ADD r5, r6, r5;               MOV r6, cl3 /* MW 8 */
	  5227      "11001010" // /* MW 7 */
	  5228      "00001010" // /* MW 6 */
	  5229      "10000110" // /* MW 5 */
	  5230      "10111101" // /* MW 4 */
	  5231      "00000100" // /* MW 3 */
	  5232      "00000000" // /* MW 2 */
	  5233      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  5234      "00000011" // 	NOP;                                                                  LSHL r4, r0, r3 /* MW 4 */
	  5235      "01000000" // /* MW 3 */
	  5236      "00110000" // /* MW 2 */
	  5237      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  5238      "00000011" // 	NOP;                                                                  ADD r4, r0, r4 /* MW 4 */
	  5239      "01000000" // /* MW 3 */
	  5240      "01000000" // /* MW 2 */
	  5241      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  5242      "00000011" // 	NOP;                                                                  LSHL r0, r5, r3 /* MW 4 */
	  5243      "00000000" // /* MW 3 */
	  5244      "00110101" // /* MW 2 */
	  5245      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 57
	  5246      "01110111" // 	NOP;                                                                  ADD r0, r0, r5;               MOV.s8 r5, #-24 /* MW 8 */
	  5247      "00000000" // /* MW 7 */
	  5248      "00001010" // /* MW 6 */
	  5249      "01000110" // /* MW 5 */
	  5250      "10001101" // /* MW 4 */
	  5251      "00111110" // /* MW 3 */
	  5252      "00000000" // /* MW 2 */
	  5253      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  5254      "00000011" // 	NOP;                                                                  AND r15, r9, r15 /* MW 4 */
	  5255      "11110000" // /* MW 3 */
	  5256      "11111001" // /* MW 2 */
	  5257      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  5258      "00000011" // 	NOP;                                                                  AND r14, r14, r9 /* MW 4 */
	  5259      "11100000" // /* MW 3 */
	  5260      "10011110" // /* MW 2 */
	  5261      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 31
	  5262      "01110111" // 	NOP;                                                                  ADD r15, r14, r15;            MOV r14, ch3 /* MW 8 */
	  5263      "11011110" // /* MW 7 */
	  5264      "00011111" // /* MW 6 */
	  5265      "10000110" // /* MW 5 */
	  5266      "00111111" // /* MW 4 */
	  5267      "00000100" // /* MW 3 */
	  5268      "00000000" // /* MW 2 */
	  5269      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31 first
	  5270      "00000011" // 	NOP;                                                                  AND r7, r14, r7 /* MW 4 */
	  5271      "01110000" // /* MW 3 */
	  5272      "01111110" // /* MW 2 */
	  5273      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  5274      "00000011" // 	NOP;                                                                  AND r4, r4, r14 /* MW 4 */
	  5275      "01000000" // /* MW 3 */
	  5276      "11100100" // /* MW 2 */
	  5277      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  5278      "00000011" // 	NOP;                                                                  MUL r7, r6, r7 /* MW 4 */
	  5279      "01110000" // /* MW 3 */
	  5280      "01110110" // /* MW 2 */
	  5281      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  5282      "00000011" // 	NOP;                                                                  LSHL r3, r15, r3 /* MW 4 */
	  5283      "00110000" // /* MW 3 */
	  5284      "00111111" // /* MW 2 */
	  5285      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  5286      "00000011" // 	NOP;                                                                  MUL r4, r4, r6 /* MW 4 */
	  5287      "01000000" // /* MW 3 */
	  5288      "01100100" // /* MW 2 */
	  5289      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  5290      "00000011" // 	NOP;                                                                  ADD r15, r3, r15 /* MW 4 */
	  5291      "11110000" // /* MW 3 */
	  5292      "11110011" // /* MW 2 */
	  5293      "00110000" // /* MW 1 */
	  5294      "00000001" // 	NOP /* MW 2 */
	  5295      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  5296      "00000011" // 	NOP;                                                                  AND r15, r14, r15 /* MW 4 */
	  5297      "11110000" // /* MW 3 */
	  5298      "11111110" // /* MW 2 */
	  5299      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  5300      "00000011" // 	NOP;                                                                  MUL r3, r6, r15 /* MW 4 */
	  5301      "00110000" // /* MW 3 */
	  5302      "11110110" // /* MW 2 */
	  5303      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  5304      "00000011" // 	NOP;                                                                  AND r14, r0, r14 /* MW 4 */
	  5305      "11100000" // /* MW 3 */
	  5306      "11100000" // /* MW 2 */
	  5307      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  5308      "00000011" // 	NOP;                                                                  MUL r14, r6, r14 /* MW 4 */
	  5309      "11100000" // /* MW 3 */
	  5310      "11100110" // /* MW 2 */
	  5311      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  5312      "00000011" // 	NOP;                                                                  LSHL r6, r4, r5 /* MW 4 */
	  5313      "01100000" // /* MW 3 */
	  5314      "01010100" // /* MW 2 */
	  5315      "00111110" // /* MW 1 */
	  5316      "00000001" // 	NOP /* MW 2 */
	  5317      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  5318      "00000011" // 	NOP;                                                                  LSHL r3, r3, r5 /* MW 4 */
	  5319      "00110000" // /* MW 3 */
	  5320      "01010011" // /* MW 2 */
	  5321      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  5322      "00000011" // 	NOP;                                                                  ADD r6, r6, r3 /* MW 4 */
	  5323      "01100000" // /* MW 3 */
	  5324      "00110110" // /* MW 2 */
	  5325      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
	  5326      "00000011" // 	NOP;                                                                  LSHL r14, r14, r5 /* MW 4 */
	  5327      "11100000" // /* MW 3 */
	  5328      "01011110" // /* MW 2 */
	  5329      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  5330      "00000011" // 	NOP;                                                                  ADD r14, r6, r14 /* MW 4 */
	  5331      "11100000" // /* MW 3 */
	  5332      "11100110" // /* MW 2 */
	  5333      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
	  5334      "00000011" // 	NOP;                                                                  LSHL r7, r7, r5 /* MW 4 */
	  5335      "01110000" // /* MW 3 */
	  5336      "01010111" // /* MW 2 */
	  5337      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  5338      "00000011" // 	NOP;                                                                  ADD r14, r14, r7 /* MW 4 */
	  5339      "11100000" // /* MW 3 */
	  5340      "01111110" // /* MW 2 */
	  5341      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 85 39 first
	  5342      "00000011" // 	NOP;                                                                  ADD r6, r2, r14 /* MW 4 */
	  5343      "01100000" // /* MW 3 */
	  5344      "11100010" // /* MW 2 */
	  5345      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 92 20 first
	  5346      "00000011" // 	NOP;                                                                  OR r14, r6, r1 /* MW 4 */
	  5347      "11100000" // /* MW 3 */
	  5348      "00010110" // /* MW 2 */
	  5349      "00110101" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 92 20
	  5350      "11110111" // 	                                        NOP;                                                        BEQZ r14,#5424;               NOP /* MW 8 */
	  5351      "00000111" // /* MW 7 */
	  5352      "01010011" // /* MW 6 */
	  5353      "11000001" // /* MW 5 */
	  5354      "10000001" // /* MW 4 */
	  5355      "00000000" // /* MW 3 */
	  5356      "00000000" // /* MW 2 */
	  5357      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 89 16
.delay_slot
	  5358      "11110101" // 	MOV r15, ch4 /* MW 2 */
	  5359      "00010011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 89 16 first
.delay_slot
	  5360      "00000011" // 	NOP;                                                                  ADD r15, r6, r15 /* MW 4 */
	  5361      "11110000" // /* MW 3 */
	  5362      "11110110" // /* MW 2 */
	  5363      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 89 16
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  5364      "01110111" // 	VLDA vrh2, [sp, #-544];                                               NOP;                          MOV ch4, r15 /* MW 8 */
	  5365      "00000000" // /* MW 7 */
	  5366      "00000000" // /* MW 6 */
	  5367      "00000000" // /* MW 5 */
	  5368      "11110001" // /* MW 4 */
	  5369      "10000111" // /* MW 3 */
	  5370      "11110111" // /* MW 2 */
	  5371      "10101010" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  5372      "00000001" // 	NOP /* MW 2 */
	  5373      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  5374      "00000001" // 	NOP /* MW 2 */
	  5375      "00000000" // /* MW 1 */
	  5376      "00000001" // 	NOP /* MW 2 */
	  5377      "00000000" // /* MW 1 */
	  5378      "00000001" // 	NOP /* MW 2 */
	  5379      "00000000" // /* MW 1 */
	  5380      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  5381      "00000000" // /* MW 3 */
	  5382      "00000000" // /* MW 2 */
	  5383      "00000000" // /* MW 1 */
	  5384      "11110111" // 	                                        NOP;                                                        J #5440;                      NOP /* MW 8 */
	  5385      "00000111" // /* MW 7 */
	  5386      "01010100" // /* MW 6 */
	  5387      "00000001" // /* MW 5 */
	  5388      "10100000" // /* MW 4 */
	  5389      "00000000" // /* MW 3 */
	  5390      "00000000" // /* MW 2 */
	  5391      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23 first
.delay_slot
	  5392      "00000011" // 	NOP;                                                                                                VUPD.32 vrh2[0], r10 /* MW 4 */
	  5393      "10011000" // /* MW 3 */
	  5394      "01011010" // /* MW 2 */
	  5395      "00100011" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  5396      "00000011" // 	NOP;                                                                                                VUPD.32 vrh2[1], r13 /* MW 4 */
	  5397      "10011000" // /* MW 3 */
	  5398      "10111010" // /* MW 2 */
	  5399      "00101011" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  5400      "00000011" // 	NOP;                                                                                                VUPD.32 vrh2[2], r6 /* MW 4 */
	  5401      "10011000" // /* MW 3 */
	  5402      "11011010" // /* MW 2 */
	  5403      "00110010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 77 30
.src_ref 3 "my_kernel_1.cpp" 106 16
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  5404      "01110111" // 	NOP;                                                                  MOV.s12 r4, #1001;            VUPD.32 vrh2[3], r1 /* MW 8 */
	  5405      "11101000" // /* MW 7 */
	  5406      "11110100" // /* MW 6 */
	  5407      "01001001" // /* MW 5 */
	  5408      "00011101" // /* MW 4 */
	  5409      "00011101" // /* MW 3 */
	  5410      "00000000" // /* MW 2 */
	  5411      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 106 16
.src_ref 4 "stream_utils.h" 213 8 first
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "vector.hpp" 691 23
.src_ref 6 "mask.hpp" 130 25
.delay_slot
	  5412      "10011111" // 	NOP;                MOV.s9 r7, #32;     VMOVS WMS.md0[10], vrh2, #0;  MOV.s12 r14, #1000;           MOV.s8 r2, #0 /* MW 12 */
	  5413      "00001100" // /* MW 11 */
	  5414      "10110000" // /* MW 10 */
	  5415      "10001111" // /* MW 9 */
	  5416      "00111110" // /* MW 8 */
	  5417      "00000001" // /* MW 7 */
	  5418      "00101100" // /* MW 6 */
	  5419      "00000110" // /* MW 5 */
	  5420      "11000100" // /* MW 4 */
	  5421      "00010111" // /* MW 3 */
	  5422      "00000000" // /* MW 2 */
	  5423      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_4832
.src_ref 3 "my_kernel_1.cpp" 106 16
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "vector.hpp" 691 23
.src_ref 6 "mask.hpp" 130 25
	  5424      "10011111" // 	NOP;                MOV.s9 r7, #32;     NOP;                          MOV.s12 r14, #1000;           MOV.s8 r2, #0 /* MW 12 */
	  5425      "00001100" // /* MW 11 */
	  5426      "10110000" // /* MW 10 */
	  5427      "10001111" // /* MW 9 */
	  5428      "00111110" // /* MW 8 */
	  5429      "00000001" // /* MW 7 */
	  5430      "00000000" // /* MW 6 */
	  5431      "00000000" // /* MW 5 */
	  5432      "11000100" // /* MW 4 */
	  5433      "00010111" // /* MW 3 */
	  5434      "00000000" // /* MW 2 */
	  5435      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 77 30
.src_ref 3 "my_kernel_1.cpp" 106 16
	  5436      "00000011" // 	NOP;                                                                  MOV.s12 r4, #1001 /* MW 4 */
	  5437      "01000000" // /* MW 3 */
	  5438      "10100111" // /* MW 2 */
	  5439      "01001111" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_4848
.src_ref 3 "my_kernel_1.cpp" 77 22
.src_ref 3 "my_kernel_1.cpp" 77 30 first
.src_ref 3 "my_kernel_1.cpp" 106 20
	  5440      "00111111" // 	VLDA wr0, [sp, #-1664];NOP;                                           ADD r13, r13, #1;             MOV.s20 r6, #256;             NOP /* MW 12 */
	  5441      "00000000" // /* MW 11 */
	  5442      "10000001" // /* MW 10 */
	  5443      "00001101" // /* MW 9 */
	  5444      "00000000" // /* MW 8 */
	  5445      "10111010" // /* MW 7 */
	  5446      "00000011" // /* MW 6 */
	  5447      "00000100" // /* MW 5 */
	  5448      "00000000" // /* MW 4 */
	  5449      "00000000" // /* MW 3 */
	  5450      "11110011" // /* MW 2 */
	  5451      "00000010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 106 20 first
	  5452      "00110111" // 	VLDA wr1, [sp, #-1792];                 NOP;                          EQ r0, r6, r15 /* MW 8 */
	  5453      "00000000" // /* MW 7 */
	  5454      "00000000" // /* MW 6 */
	  5455      "00000000" // /* MW 5 */
	  5456      "01111011" // /* MW 4 */
	  5457      "00011100" // /* MW 3 */
	  5458      "11110010" // /* MW 2 */
	  5459      "00000110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 106 16
.noswbrkpt
	  5460      "00110111" // 	VLDA wr2, [sp, #-320];                  NOP;                          ITE_EQZ r10, r10, r14, r0 /* MW 8 */
	  5461      "00000000" // /* MW 7 */
	  5462      "00000000" // /* MW 6 */
	  5463      "01010000" // /* MW 5 */
	  5464      "01110101" // /* MW 4 */
	  5465      "10001111" // /* MW 3 */
	  5466      "11111101" // /* MW 2 */
	  5467      "00001010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 77 30 first
.src_ref 3 "my_kernel_1.cpp" 106 16
.nohwbrkpt
.noswbrkpt
	  5468      "00110111" // 	VLDA wr3, [sp, #-96];                   NOP;                          ITE_NEZ r13, r4, r13, r0 /* MW 8 */
	  5469      "00000000" // /* MW 7 */
	  5470      "00000000" // /* MW 6 */
	  5471      "01101000" // /* MW 5 */
	  5472      "11101010" // /* MW 4 */
	  5473      "01001111" // /* MW 3 */
	  5474      "11111111" // /* MW 2 */
	  5475      "00001110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 77 22
.nohwbrkpt
.noswbrkpt
	  5476      "00110111" // 	VLDA wr0, [sp, #-1728];                 NOP;                          LT r14, r13, r6 /* MW 8 */
	  5477      "00000000" // /* MW 7 */
	  5478      "00000000" // /* MW 6 */
	  5479      "11110000" // /* MW 5 */
	  5480      "10110110" // /* MW 4 */
	  5481      "10011101" // /* MW 3 */
	  5482      "11110010" // /* MW 2 */
	  5483      "00000010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5484      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1760];  NOP /* MW 8 */
	  5485      "00100111" // /* MW 7 */
	  5486      "00100100" // /* MW 6 */
	  5487      "10001011" // /* MW 5 */
	  5488      "11000111" // /* MW 4 */
	  5489      "00000000" // /* MW 3 */
	  5490      "00000000" // /* MW 2 */
	  5491      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5492      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr2, [sp, #-288];   NOP /* MW 8 */
	  5493      "00100111" // /* MW 7 */
	  5494      "11011100" // /* MW 6 */
	  5495      "10010011" // /* MW 5 */
	  5496      "11000111" // /* MW 4 */
	  5497      "00000000" // /* MW 3 */
	  5498      "00000000" // /* MW 2 */
	  5499      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5500      "11110111" // 	                                        NOP;                                                        VST.SPIL vrh2, [sp, #-544];   NOP /* MW 8 */
	  5501      "10000111" // /* MW 7 */
	  5502      "11100000" // /* MW 6 */
	  5503      "11111101" // /* MW 5 */
	  5504      "11000101" // /* MW 4 */
	  5505      "00000000" // /* MW 3 */
	  5506      "00000000" // /* MW 2 */
	  5507      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5508      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-192];   NOP /* MW 8 */
	  5509      "00100111" // /* MW 7 */
	  5510      "11101000" // /* MW 6 */
	  5511      "10011011" // /* MW 5 */
	  5512      "11000111" // /* MW 4 */
	  5513      "00000000" // /* MW 3 */
	  5514      "00000000" // /* MW 2 */
	  5515      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5516      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1696];  NOP /* MW 8 */
	  5517      "00100111" // /* MW 7 */
	  5518      "00101100" // /* MW 6 */
	  5519      "10000011" // /* MW 5 */
	  5520      "11000111" // /* MW 4 */
	  5521      "00000000" // /* MW 3 */
	  5522      "00000000" // /* MW 2 */
	  5523      "10000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.nohwbrkpt
.noswbrkpt
	  5524      "01001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr1, [sp, #-1824];  NOP;                                    VCMP xc, r6, ya.s16, r2, c0, r7, c0, c1 /* MW 16 */
	  5525      "10000000" // /* MW 15 */
	  5526      "00001011" // /* MW 14 */
	  5527      "00000011" // /* MW 13 */
	  5528      "10000000" // /* MW 12 */
	  5529      "11000010" // /* MW 11 */
	  5530      "10110001" // /* MW 10 */
	  5531      "01111000" // /* MW 9 */
	  5532      "00001100" // /* MW 8 */
	  5533      "00000000" // /* MW 7 */
	  5534      "00000000" // /* MW 6 */
	  5535      "00010000" // /* MW 5 */
	  5536      "00000000" // /* MW 4 */
	  5537      "00000000" // /* MW 3 */
	  5538      "00000000" // /* MW 2 */
	  5539      "00000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.nohwbrkpt
.noswbrkpt
	  5540      "00010011" // 	NOP;                                                                                                                                                                      VCMP xc, r6, yd.s16, r2, c0, r7, c0, c1 /* MW 4 */
	  5541      "00001011" // /* MW 3 */
	  5542      "01110000" // /* MW 2 */
	  5543      "01100001" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.nohwbrkpt
.noswbrkpt
	  5544      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1632] /* MW 4 */
	  5545      "01101000" // /* MW 3 */
	  5546      "00011110" // /* MW 2 */
	  5547      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27
.nohwbrkpt
.noswbrkpt
	  5548      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1664] /* MW 4 */
	  5549      "01100000" // /* MW 3 */
	  5550      "00011110" // /* MW 2 */
	  5551      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.nohwbrkpt
.noswbrkpt
	  5552      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1664];  NOP /* MW 8 */
	  5553      "00100111" // /* MW 7 */
	  5554      "00110000" // /* MW 6 */
	  5555      "10111011" // /* MW 5 */
	  5556      "11000111" // /* MW 4 */
	  5557      "00000000" // /* MW 3 */
	  5558      "00000000" // /* MW 2 */
	  5559      "10000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.nohwbrkpt
.noswbrkpt
	  5560      "00010011" // 	NOP;                                                                                                                                                                      VCMP xc, r6, ya.s16, r2, c0, r7, c0, c1 /* MW 4 */
	  5561      "00001001" // /* MW 3 */
	  5562      "01110000" // /* MW 2 */
	  5563      "01100001" // /* MW 1 */
	  5564      "00000001" // 	NOP /* MW 2 */
	  5565      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
	  5566      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1664] /* MW 4 */
	  5567      "01100000" // /* MW 3 */
	  5568      "00011110" // /* MW 2 */
	  5569      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.noswbrkpt
	  5570      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1664];  NOP /* MW 8 */
	  5571      "00100111" // /* MW 7 */
	  5572      "00110000" // /* MW 6 */
	  5573      "10000011" // /* MW 5 */
	  5574      "11000111" // /* MW 4 */
	  5575      "00000000" // /* MW 3 */
	  5576      "00000000" // /* MW 2 */
	  5577      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 77 8 first
.nohwbrkpt
.noswbrkpt
	  5578      "11110111" // 	                                        NOP;                                                        BNEZ r14,#3456;               NOP /* MW 8 */
	  5579      "00000111" // /* MW 7 */
	  5580      "11011000" // /* MW 6 */
	  5581      "11000000" // /* MW 5 */
	  5582      "10010001" // /* MW 4 */
	  5583      "00000000" // /* MW 3 */
	  5584      "00000000" // /* MW 2 */
	  5585      "10000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.delay_slot
.nohwbrkpt
.noswbrkpt
	  5586      "00010011" // 	NOP;                                                                                                                                                                      VCMP xc, r6, ya.s16, r2, c0, r7, c0, c1 /* MW 4 */
	  5587      "00001001" // /* MW 3 */
	  5588      "01110000" // /* MW 2 */
	  5589      "01100001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19 first
.delay_slot
	  5590      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1632];  NOP /* MW 8 */
	  5591      "00100111" // /* MW 7 */
	  5592      "00110100" // /* MW 6 */
	  5593      "10001011" // /* MW 5 */
	  5594      "11000111" // /* MW 4 */
	  5595      "00000000" // /* MW 3 */
	  5596      "00000000" // /* MW 2 */
	  5597      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.delay_slot
	  5598      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1632] /* MW 4 */
	  5599      "01101000" // /* MW 3 */
	  5600      "00011110" // /* MW 2 */
	  5601      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19 first
.delay_slot
	  5602      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-1632];  NOP /* MW 8 */
	  5603      "00100111" // /* MW 7 */
	  5604      "00110100" // /* MW 6 */
	  5605      "10110011" // /* MW 5 */
	  5606      "11000111" // /* MW 4 */
	  5607      "00000000" // /* MW 3 */
	  5608      "00000000" // /* MW 2 */
	  5609      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  5610      "00000001" // 	NOP /* MW 2 */
	  5611      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 118 17
.src_ref 5 "vector.hpp" 691 23
.loop_nesting 1
	  5612      "00110111" // 	VLDA vrh2, [sp, #-544];                 NOP;                          MOV.s12 r8, #254 /* MW 8 */
	  5613      "00000000" // /* MW 7 */
	  5614      "00000000" // /* MW 6 */
	  5615      "11000000" // /* MW 5 */
	  5616      "11111101" // /* MW 4 */
	  5617      "10100001" // /* MW 3 */
	  5618      "11110111" // /* MW 2 */
	  5619      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 118 17 first
	  5620      "00110111" // 	VLDA wr0, [sp, #-512];                  NOP;                          LT r15, r8, r10 /* MW 8 */
	  5621      "00000000" // /* MW 7 */
	  5622      "00000000" // /* MW 6 */
	  5623      "01111000" // /* MW 5 */
	  5624      "11010100" // /* MW 4 */
	  5625      "00011101" // /* MW 3 */
	  5626      "11111100" // /* MW 2 */
	  5627      "00000010" // /* MW 1 */
	  5628      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-480];   NOP /* MW 8 */
	  5629      "00100111" // /* MW 7 */
	  5630      "11000100" // /* MW 6 */
	  5631      "10001011" // /* MW 5 */
	  5632      "11000111" // /* MW 4 */
	  5633      "00000000" // /* MW 3 */
	  5634      "00000000" // /* MW 2 */
	  5635      "10000000" // /* MW 1 */
	  5636      "11110111" // 	                                        NOP;                                                        ST.SPIL p7, [sp, #-520];      NOP /* MW 8 */
	  5637      "01000111" // /* MW 7 */
	  5638      "11111000" // /* MW 6 */
	  5639      "11111101" // /* MW 5 */
	  5640      "11101111" // /* MW 4 */
	  5641      "00000000" // /* MW 3 */
	  5642      "00000000" // /* MW 2 */
	  5643      "10000000" // /* MW 1 */
	  5644      "11110111" // 	                                        NOP;                                                        LDA.SPIL r13, [sp, #-136];    NOP /* MW 8 */
	  5645      "01100111" // /* MW 7 */
	  5646      "11101111" // /* MW 6 */
	  5647      "11110111" // /* MW 5 */
	  5648      "11000111" // /* MW 4 */
	  5649      "00000000" // /* MW 3 */
	  5650      "00000000" // /* MW 2 */
	  5651      "10000000" // /* MW 1 */
	  5652      "00000011" // 	NOP;                LDB r6, [sp, #-160] /* MW 4 */
	  5653      "00111000" // /* MW 3 */
	  5654      "11110110" // /* MW 2 */
	  5655      "01101101" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  5656      "11110111" // 	                                        NOP;                                                        LDA.SPIL p0, [sp, #-140];     NOP /* MW 8 */
	  5657      "11100111" // /* MW 7 */
	  5658      "11101110" // /* MW 6 */
	  5659      "10100011" // /* MW 5 */
	  5660      "11000111" // /* MW 4 */
	  5661      "00000000" // /* MW 3 */
	  5662      "00000000" // /* MW 2 */
	  5663      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 118 8
.src_ref 7 "aie.hpp" 1614 12
	  5664      "00111111" // 	LDA p1, [sp, #-104];NOP;                NOP;                                                        BNEZ r15,#9360;               NOP /* MW 12 */
	  5665      "10010000" // /* MW 11 */
	  5666      "00100100" // /* MW 10 */
	  5667      "00011110" // /* MW 9 */
	  5668      "00001001" // /* MW 8 */
	  5669      "00000000" // /* MW 7 */
	  5670      "00000000" // /* MW 6 */
	  5671      "00010000" // /* MW 5 */
	  5672      "00000000" // /* MW 4 */
	  5673      "10000000" // /* MW 3 */
	  5674      "11111001" // /* MW 2 */
	  5675      "01101001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
.delay_slot
	  5676      "01110111" // 	LDA r12, [sp, #-108];                                                 NOP;                          MOV cl4, r11 /* MW 8 */
	  5677      "00000000" // /* MW 7 */
	  5678      "00000000" // /* MW 6 */
	  5679      "00000000" // /* MW 5 */
	  5680      "10110011" // /* MW 4 */
	  5681      "01000111" // /* MW 3 */
	  5682      "11111001" // /* MW 2 */
	  5683      "01111100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.delay_slot
	  5684      "01110111" // 	LDA r14, [sp, #-112];                                                 NOP;                          MOV ch5, r9 /* MW 8 */
	  5685      "00000000" // /* MW 7 */
	  5686      "00000000" // /* MW 6 */
	  5687      "01000000" // /* MW 5 */
	  5688      "10010001" // /* MW 4 */
	  5689      "00000111" // /* MW 3 */
	  5690      "11111001" // /* MW 2 */
	  5691      "01111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.delay_slot
	  5692      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-516];     NOP /* MW 8 */
	  5693      "11100111" // /* MW 7 */
	  5694      "10111111" // /* MW 6 */
	  5695      "10111111" // /* MW 5 */
	  5696      "11000111" // /* MW 4 */
	  5697      "00000000" // /* MW 3 */
	  5698      "00000000" // /* MW 2 */
	  5699      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23 first
.delay_slot
	  5700      "00000010" // 	LDA r11, [sp, #-32];NOP;                NOP;                          NOP;                          VUPD.32 vrh2[3], r2;          NOP;                                    NOP /* MW 16 */
	  5701      "00000000" // /* MW 15 */
	  5702      "00000000" // /* MW 14 */
	  5703      "00000000" // /* MW 13 */
	  5704      "00000000" // /* MW 12 */
	  5705      "00000000" // /* MW 11 */
	  5706      "01000000" // /* MW 10 */
	  5707      "00101101" // /* MW 9 */
	  5708      "00011101" // /* MW 8 */
	  5709      "00000000" // /* MW 7 */
	  5710      "00000000" // /* MW 6 */
	  5711      "00000000" // /* MW 5 */
	  5712      "00000000" // /* MW 4 */
	  5713      "00000000" // /* MW 3 */
	  5714      "11111110" // /* MW 2 */
	  5715      "01111011" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35
.src_ref 5 "vector.hpp" 1041 35
.delay_slot
	  5716      "00000010" // 	LDA r8, [sp, #-40]; NOP;                NOP;                          MOV.s12 r9, #0;               VMOV xc, xa;                  NOP;                                    NOP /* MW 16 */
	  5717      "00000000" // /* MW 15 */
	  5718      "00000000" // /* MW 14 */
	  5719      "11001000" // /* MW 13 */
	  5720      "00000001" // /* MW 12 */
	  5721      "00100000" // /* MW 11 */
	  5722      "00000000" // /* MW 10 */
	  5723      "00010110" // /* MW 9 */
	  5724      "00100100" // /* MW 8 */
	  5725      "00000000" // /* MW 7 */
	  5726      "00000000" // /* MW 6 */
	  5727      "00000000" // /* MW 5 */
	  5728      "00000000" // /* MW 4 */
	  5729      "10000000" // /* MW 3 */
	  5730      "11111101" // /* MW 2 */
	  5731      "01111000" // /* MW 1 */
	  5732      "11110111" // 	                                        NOP;                                                        ST.SPIL r6, [sp, #-524];      NOP /* MW 8 */
	  5733      "01000111" // /* MW 7 */
	  5734      "11110100" // /* MW 6 */
	  5735      "11111101" // /* MW 5 */
	  5736      "11110110" // /* MW 4 */
	  5737      "00000000" // /* MW 3 */
	  5738      "00000000" // /* MW 2 */
	  5739      "10000000" // /* MW 1 */
	  5740      "11110111" // 	                                        NOP;                                                        VST.SPIL vrh2, [sp, #-544];   NOP /* MW 8 */
	  5741      "10000111" // /* MW 7 */
	  5742      "11100000" // /* MW 6 */
	  5743      "11111101" // /* MW 5 */
	  5744      "11000101" // /* MW 4 */
	  5745      "00000000" // /* MW 3 */
	  5746      "00000000" // /* MW 2 */
	  5747      "10000000" // /* MW 1 */
	  5748      "11110111" // 	                                        NOP;                                                        ST.SPIL r13, [sp, #-1252];    NOP /* MW 8 */
	  5749      "01000111" // /* MW 7 */
	  5750      "00011100" // /* MW 6 */
	  5751      "11111011" // /* MW 5 */
	  5752      "11111101" // /* MW 4 */
	  5753      "00000000" // /* MW 3 */
	  5754      "00000000" // /* MW 2 */
	  5755      "10000000" // /* MW 1 */
	  5756      "11110111" // 	                                        NOP;                                                        ST.SPIL r12, [sp, #-1256];    NOP /* MW 8 */
	  5757      "01000111" // /* MW 7 */
	  5758      "00011000" // /* MW 6 */
	  5759      "11111011" // /* MW 5 */
	  5760      "11111100" // /* MW 4 */
	  5761      "00000000" // /* MW 3 */
	  5762      "00000000" // /* MW 2 */
	  5763      "10000000" // /* MW 1 */
	  5764      "11110111" // 	                                        NOP;                                                        ST.SPIL r14, [sp, #-528];     NOP /* MW 8 */
	  5765      "01000111" // /* MW 7 */
	  5766      "11110000" // /* MW 6 */
	  5767      "11111101" // /* MW 5 */
	  5768      "11111110" // /* MW 4 */
	  5769      "00000000" // /* MW 3 */
	  5770      "00000000" // /* MW 2 */
	  5771      "10000000" // /* MW 1 */
	  5772      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  5773      "00000000" // /* MW 3 */
	  5774      "00000000" // /* MW 2 */
	  5775      "00000000" // /* MW 1 */
	  5776      "11110111" // 	                                        NOP;                                                        ST.SPIL r11, [sp, #-1264];    NOP /* MW 8 */
	  5777      "01000111" // /* MW 7 */
	  5778      "00010000" // /* MW 6 */
	  5779      "11111011" // /* MW 5 */
	  5780      "11111011" // /* MW 4 */
	  5781      "00000000" // /* MW 3 */
	  5782      "00000000" // /* MW 2 */
	  5783      "10000000" // /* MW 1 */
	  5784      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-1260];     NOP /* MW 8 */
	  5785      "01000111" // /* MW 7 */
	  5786      "00010100" // /* MW 6 */
	  5787      "11111011" // /* MW 5 */
	  5788      "11111000" // /* MW 4 */
	  5789      "00000000" // /* MW 3 */
	  5790      "00000000" // /* MW 2 */
	  5791      "10000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_5200
.src_ref 3 "my_kernel_1.cpp" 142 38
.src_ref 5 "vector.hpp" 1041 35 first
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 262 36
.src_ref 6 "mask.hpp" 262 36
.loop_nesting 2
	  5792      "11110111" // 	                                        VST wr0, [sp, #-1632];        MOV.s12 r13, #-1;             MOV ch6, r10 /* MW 8 */
	  5793      "00001100" // /* MW 7 */
	  5794      "00111101" // /* MW 6 */
	  5795      "11111010" // /* MW 5 */
	  5796      "11111111" // /* MW 4 */
	  5797      "11011111" // /* MW 3 */
	  5798      "00111100" // /* MW 2 */
	  5799      "01110100" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 99 30
	  5800      "01110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1632];                                      NOP;                          MOV r12, cl4 /* MW 8 */
	  5801      "00000000" // /* MW 7 */
	  5802      "00000000" // /* MW 6 */
	  5803      "00000000" // /* MW 5 */
	  5804      "11001111" // /* MW 4 */
	  5805      "01000100" // /* MW 3 */
	  5806      "11110011" // /* MW 2 */
	  5807      "00001100" // /* MW 1 */
	  5808      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-800];   NOP /* MW 8 */
	  5809      "00100111" // /* MW 7 */
	  5810      "10011100" // /* MW 6 */
	  5811      "10110011" // /* MW 5 */
	  5812      "11000111" // /* MW 4 */
	  5813      "00000000" // /* MW 3 */
	  5814      "00000000" // /* MW 2 */
	  5815      "10000000" // /* MW 1 */
	  5816      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-832];   NOP /* MW 8 */
	  5817      "00100111" // /* MW 7 */
	  5818      "10011000" // /* MW 6 */
	  5819      "10111011" // /* MW 5 */
	  5820      "11000111" // /* MW 4 */
	  5821      "00000000" // /* MW 3 */
	  5822      "00000000" // /* MW 2 */
	  5823      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
	  5824      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-1664];   NOP /* MW 8 */
	  5825      "00000111" // /* MW 7 */
	  5826      "10000000" // /* MW 6 */
	  5827      "11111001" // /* MW 5 */
	  5828      "11101000" // /* MW 4 */
	  5829      "00000000" // /* MW 3 */
	  5830      "00000000" // /* MW 2 */
	  5831      "10000000" // /* MW 1 */
.noswbrkpt
	  5832      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-576];   NOP /* MW 8 */
	  5833      "00100111" // /* MW 7 */
	  5834      "10111000" // /* MW 6 */
	  5835      "10110011" // /* MW 5 */
	  5836      "11000111" // /* MW 4 */
	  5837      "00000000" // /* MW 3 */
	  5838      "00000000" // /* MW 2 */
	  5839      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5840      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-704];   NOP /* MW 8 */
	  5841      "00100111" // /* MW 7 */
	  5842      "10101000" // /* MW 6 */
	  5843      "10111011" // /* MW 5 */
	  5844      "11000111" // /* MW 4 */
	  5845      "00000000" // /* MW 3 */
	  5846      "00000000" // /* MW 2 */
	  5847      "10000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.nohwbrkpt
.noswbrkpt
	  5848      "11110111" // 	                                        NOP;                                                        LDA.SPIL p3, [sp, #-528];     NOP /* MW 8 */
	  5849      "01100111" // /* MW 7 */
	  5850      "10111110" // /* MW 6 */
	  5851      "10101111" // /* MW 5 */
	  5852      "11000111" // /* MW 4 */
	  5853      "00000000" // /* MW 3 */
	  5854      "00000000" // /* MW 2 */
	  5855      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  5856      "00110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1664];        NOP;                          NOP /* MW 8 */
	  5857      "00000000" // /* MW 7 */
	  5858      "00000000" // /* MW 6 */
	  5859      "00000000" // /* MW 5 */
	  5860      "00000000" // /* MW 4 */
	  5861      "00000000" // /* MW 3 */
	  5862      "11110011" // /* MW 2 */
	  5863      "00001100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5864      "11110111" // 	                                        NOP;                                                        VST.SPIL wr2, [sp, #-1728];   NOP /* MW 8 */
	  5865      "00000111" // /* MW 7 */
	  5866      "01000000" // /* MW 6 */
	  5867      "11111001" // /* MW 5 */
	  5868      "11100100" // /* MW 4 */
	  5869      "00000000" // /* MW 3 */
	  5870      "00000000" // /* MW 2 */
	  5871      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.nohwbrkpt
.noswbrkpt
	  5872      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr3, [sp, #-1760];   NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  5873      "10000000" // /* MW 15 */
	  5874      "00001011" // /* MW 14 */
	  5875      "00000011" // /* MW 13 */
	  5876      "10000000" // /* MW 12 */
	  5877      "00000000" // /* MW 11 */
	  5878      "10010010" // /* MW 10 */
	  5879      "01101111" // /* MW 9 */
	  5880      "00001110" // /* MW 8 */
	  5881      "00000000" // /* MW 7 */
	  5882      "00000000" // /* MW 6 */
	  5883      "00010000" // /* MW 5 */
	  5884      "00000000" // /* MW 4 */
	  5885      "00000000" // /* MW 3 */
	  5886      "00000000" // /* MW 2 */
	  5887      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  5888      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wc1, [sp, #-1632];   NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  5889      "00000000" // /* MW 15 */
	  5890      "00011101" // /* MW 14 */
	  5891      "00000011" // /* MW 13 */
	  5892      "10000000" // /* MW 12 */
	  5893      "00000000" // /* MW 11 */
	  5894      "10011010" // /* MW 10 */
	  5895      "10101111" // /* MW 9 */
	  5896      "00001110" // /* MW 8 */
	  5897      "00000000" // /* MW 7 */
	  5898      "00000000" // /* MW 6 */
	  5899      "00010000" // /* MW 5 */
	  5900      "00000000" // /* MW 4 */
	  5901      "00000000" // /* MW 3 */
	  5902      "00000000" // /* MW 2 */
	  5903      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5904      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-864];   NOP /* MW 8 */
	  5905      "00100111" // /* MW 7 */
	  5906      "10010100" // /* MW 6 */
	  5907      "10110011" // /* MW 5 */
	  5908      "11000111" // /* MW 4 */
	  5909      "00000000" // /* MW 3 */
	  5910      "00000000" // /* MW 2 */
	  5911      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 122 first
.nohwbrkpt
.noswbrkpt
	  5912      "10001111" // 	VLDA wd1, [sp, #-960];NOP;                                            OR r10, r4, r6;               NOP;                                                                  VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 12 */
	  5913      "00000100" // /* MW 11 */
	  5914      "01011100" // /* MW 10 */
	  5915      "00011000" // /* MW 9 */
	  5916      "00000000" // /* MW 8 */
	  5917      "00000000" // /* MW 7 */
	  5918      "00000000" // /* MW 6 */
	  5919      "01010000" // /* MW 5 */
	  5920      "10110010" // /* MW 4 */
	  5921      "10011010" // /* MW 3 */
	  5922      "11111000" // /* MW 2 */
	  5923      "00011110" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  5924      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr1, [sp, #-1696];   NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  5925      "00000000" // /* MW 15 */
	  5926      "00011101" // /* MW 14 */
	  5927      "00000011" // /* MW 13 */
	  5928      "10000000" // /* MW 12 */
	  5929      "00000000" // /* MW 11 */
	  5930      "10010110" // /* MW 10 */
	  5931      "00101111" // /* MW 9 */
	  5932      "00001110" // /* MW 8 */
	  5933      "00000000" // /* MW 7 */
	  5934      "00000000" // /* MW 6 */
	  5935      "00010000" // /* MW 5 */
	  5936      "00000000" // /* MW 4 */
	  5937      "00000000" // /* MW 3 */
	  5938      "00000000" // /* MW 2 */
	  5939      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  5940      "10110111" // 	VLDA.UNPACK.u8 xb, [sp, #-1696];        ST r10, [p3], #4;             NOP /* MW 8 */
	  5941      "01000101" // /* MW 7 */
	  5942      "11110101" // /* MW 6 */
	  5943      "00000010" // /* MW 5 */
	  5944      "00000000" // /* MW 4 */
	  5945      "11000000" // /* MW 3 */
	  5946      "11110010" // /* MW 2 */
	  5947      "00001100" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122 first
.nohwbrkpt
.noswbrkpt
	  5948      "00110111" // 	NOP;                                    VST wr2, [sp, #-1664];        OR r10, r4, r6 /* MW 8 */
	  5949      "11100110" // /* MW 7 */
	  5950      "10101001" // /* MW 6 */
	  5951      "01010011" // /* MW 5 */
	  5952      "10110010" // /* MW 4 */
	  5953      "00011010" // /* MW 3 */
	  5954      "00000000" // /* MW 2 */
	  5955      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5956      "11110111" // 	                                        NOP;                                                        VST.SPIL wr3, [sp, #-1792];   NOP /* MW 8 */
	  5957      "00000111" // /* MW 7 */
	  5958      "00000000" // /* MW 6 */
	  5959      "11111001" // /* MW 5 */
	  5960      "11100110" // /* MW 4 */
	  5961      "00000000" // /* MW 3 */
	  5962      "00000000" // /* MW 2 */
	  5963      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5964      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-1088];  NOP /* MW 8 */
	  5965      "00100111" // /* MW 7 */
	  5966      "01111000" // /* MW 6 */
	  5967      "10110011" // /* MW 5 */
	  5968      "11000111" // /* MW 4 */
	  5969      "00000000" // /* MW 3 */
	  5970      "00000000" // /* MW 2 */
	  5971      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  5972      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1120];  NOP /* MW 8 */
	  5973      "00100111" // /* MW 7 */
	  5974      "01110100" // /* MW 6 */
	  5975      "10111011" // /* MW 5 */
	  5976      "11000111" // /* MW 4 */
	  5977      "00000000" // /* MW 3 */
	  5978      "00000000" // /* MW 2 */
	  5979      "10000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.nohwbrkpt
.noswbrkpt
	  5980      "10110000" // 	NOP;                NOP;                NOP;                          NOP;                          LDA.SPIL p4, [sp, #-1256];    NOP;                                    VCMP xd, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  5981      "10000000" // /* MW 15 */
	  5982      "00001011" // /* MW 14 */
	  5983      "00000011" // /* MW 13 */
	  5984      "10000000" // /* MW 12 */
	  5985      "00110110" // /* MW 11 */
	  5986      "00110110" // /* MW 10 */
	  5987      "01111011" // /* MW 9 */
	  5988      "00001100" // /* MW 8 */
	  5989      "00000000" // /* MW 7 */
	  5990      "00000000" // /* MW 6 */
	  5991      "00010000" // /* MW 5 */
	  5992      "00000000" // /* MW 4 */
	  5993      "00000000" // /* MW 3 */
	  5994      "00000000" // /* MW 2 */
	  5995      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  5996      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          LDA.SPIL p2, [sp, #-1252];    NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  5997      "00000000" // /* MW 15 */
	  5998      "00011101" // /* MW 14 */
	  5999      "00000011" // /* MW 13 */
	  6000      "10000000" // /* MW 12 */
	  6001      "00111110" // /* MW 11 */
	  6002      "10110110" // /* MW 10 */
	  6003      "01111010" // /* MW 9 */
	  6004      "00001100" // /* MW 8 */
	  6005      "00000000" // /* MW 7 */
	  6006      "00000000" // /* MW 6 */
	  6007      "00010000" // /* MW 5 */
	  6008      "00000000" // /* MW 4 */
	  6009      "00000000" // /* MW 3 */
	  6010      "00000000" // /* MW 2 */
	  6011      "00000000" // /* MW 1 */
.noswbrkpt
	  6012      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-736];   NOP /* MW 8 */
	  6013      "00100111" // /* MW 7 */
	  6014      "10100100" // /* MW 6 */
	  6015      "10110011" // /* MW 5 */
	  6016      "11000111" // /* MW 4 */
	  6017      "00000000" // /* MW 3 */
	  6018      "00000000" // /* MW 2 */
	  6019      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6020      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-768];   NOP /* MW 8 */
	  6021      "00100111" // /* MW 7 */
	  6022      "10100000" // /* MW 6 */
	  6023      "10111011" // /* MW 5 */
	  6024      "11000111" // /* MW 4 */
	  6025      "00000000" // /* MW 3 */
	  6026      "00000000" // /* MW 2 */
	  6027      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6028      "11110111" // 	                                        NOP;                                                        VST.SPIL wr3, [sp, #-1824];   NOP /* MW 8 */
	  6029      "00000111" // /* MW 7 */
	  6030      "11100000" // /* MW 6 */
	  6031      "11111000" // /* MW 5 */
	  6032      "11100110" // /* MW 4 */
	  6033      "00000000" // /* MW 3 */
	  6034      "00000000" // /* MW 2 */
	  6035      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6036      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-672];   NOP /* MW 8 */
	  6037      "00100111" // /* MW 7 */
	  6038      "10101100" // /* MW 6 */
	  6039      "10110011" // /* MW 5 */
	  6040      "11000111" // /* MW 4 */
	  6041      "00000000" // /* MW 3 */
	  6042      "00000000" // /* MW 2 */
	  6043      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6044      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-928];   NOP /* MW 8 */
	  6045      "00100111" // /* MW 7 */
	  6046      "10001100" // /* MW 6 */
	  6047      "10111011" // /* MW 5 */
	  6048      "11000111" // /* MW 4 */
	  6049      "00000000" // /* MW 3 */
	  6050      "00000000" // /* MW 2 */
	  6051      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.nohwbrkpt
.noswbrkpt
	  6052      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr2, [sp, #-1664];  NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  6053      "10000000" // /* MW 15 */
	  6054      "00001011" // /* MW 14 */
	  6055      "00000011" // /* MW 13 */
	  6056      "10000000" // /* MW 12 */
	  6057      "00000010" // /* MW 11 */
	  6058      "00110011" // /* MW 10 */
	  6059      "01111001" // /* MW 9 */
	  6060      "00001100" // /* MW 8 */
	  6061      "00000000" // /* MW 7 */
	  6062      "00000000" // /* MW 6 */
	  6063      "00010000" // /* MW 5 */
	  6064      "00000000" // /* MW 4 */
	  6065      "00000000" // /* MW 3 */
	  6066      "00000000" // /* MW 2 */
	  6067      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 537 122
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  6068      "10011010" // 	VLDA wr3, [sp, #-1792];NOP;             ST r10, [p4], #4;             OR r10, r4, r6;               NOP;                          NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  6069      "00000000" // /* MW 15 */
	  6070      "00011101" // /* MW 14 */
	  6071      "01010011" // /* MW 13 */
	  6072      "10110010" // /* MW 12 */
	  6073      "00011010" // /* MW 11 */
	  6074      "00000000" // /* MW 10 */
	  6075      "00000000" // /* MW 9 */
	  6076      "00000000" // /* MW 8 */
	  6077      "10001100" // /* MW 7 */
	  6078      "11101010" // /* MW 6 */
	  6079      "00000101" // /* MW 5 */
	  6080      "00000000" // /* MW 4 */
	  6081      "00000000" // /* MW 3 */
	  6082      "11110010" // /* MW 2 */
	  6083      "00001110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6084      "11110111" // 	                                        NOP;                                                        VST.SPIL wr2, [sp, #-1696];   NOP /* MW 8 */
	  6085      "00000111" // /* MW 7 */
	  6086      "01100000" // /* MW 6 */
	  6087      "11111001" // /* MW 5 */
	  6088      "11100100" // /* MW 4 */
	  6089      "00000000" // /* MW 3 */
	  6090      "00000000" // /* MW 2 */
	  6091      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.src_ref 6 "mask.hpp" 130 25 first
.nohwbrkpt
.noswbrkpt
	  6092      "10010010" // 	VLDA.UNPACK.u8 xb, [sp, #-1632];NOP;    ST m0, [p2], #-8;             OR r11, r4, r6;               NOP;                          NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  6093      "10000000" // /* MW 15 */
	  6094      "00001011" // /* MW 14 */
	  6095      "01011011" // /* MW 13 */
	  6096      "10110010" // /* MW 12 */
	  6097      "00011010" // /* MW 11 */
	  6098      "00000000" // /* MW 10 */
	  6099      "00000000" // /* MW 9 */
	  6100      "00000000" // /* MW 8 */
	  6101      "11110010" // /* MW 7 */
	  6102      "10000010" // /* MW 6 */
	  6103      "00000101" // /* MW 5 */
	  6104      "00000000" // /* MW 4 */
	  6105      "01000000" // /* MW 3 */
	  6106      "11110011" // /* MW 2 */
	  6107      "00001100" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  6108      "10011000" // 	NOP;                NOP;                ST r11, [p4], #4;             NOP;                          VLDA.SPIL wd0, [sp, #-640];   NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  6109      "00000000" // /* MW 15 */
	  6110      "00011101" // /* MW 14 */
	  6111      "00000011" // /* MW 13 */
	  6112      "10000000" // /* MW 12 */
	  6113      "00000010" // /* MW 11 */
	  6114      "00111011" // /* MW 10 */
	  6115      "01111011" // /* MW 9 */
	  6116      "00001100" // /* MW 8 */
	  6117      "10001100" // /* MW 7 */
	  6118      "11101110" // /* MW 6 */
	  6119      "00010101" // /* MW 5 */
	  6120      "00000000" // /* MW 4 */
	  6121      "00000000" // /* MW 3 */
	  6122      "00000000" // /* MW 2 */
	  6123      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  6124      "01110111" // 	VLDA wd1, [sp, #-1024];                 ST m0, [p2], #4;                                            MOV p5, p2 /* MW 8 */
	  6125      "10001010" // /* MW 7 */
	  6126      "10000010" // /* MW 6 */
	  6127      "01010101" // /* MW 5 */
	  6128      "10101011" // /* MW 4 */
	  6129      "00000110" // /* MW 3 */
	  6130      "11111000" // /* MW 2 */
	  6131      "00011110" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  6132      "00110111" // 	NOP;                                    ST m0, [p2];                  OR r11, r4, r6 /* MW 8 */
	  6133      "10100001" // /* MW 7 */
	  6134      "11000001" // /* MW 6 */
	  6135      "01011010" // /* MW 5 */
	  6136      "10110010" // /* MW 4 */
	  6137      "00011010" // /* MW 3 */
	  6138      "00000000" // /* MW 2 */
	  6139      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.nohwbrkpt
.noswbrkpt
	  6140      "11110111" // 	                                        ST r11, [p3], #4;                                           VLDA.SPIL wd0, [sp, #-896];   NOP /* MW 8 */
	  6141      "00100111" // /* MW 7 */
	  6142      "10010000" // /* MW 6 */
	  6143      "10110011" // /* MW 5 */
	  6144      "11000111" // /* MW 4 */
	  6145      "01011000" // /* MW 3 */
	  6146      "01110100" // /* MW 2 */
	  6147      "10101111" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.nohwbrkpt
.noswbrkpt
	  6148      "10010000" // 	NOP;                NOP;                ST r10, [p3], #4;             NOP;                          VLDA.SPIL wd1, [sp, #-992];   NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  6149      "10000000" // /* MW 15 */
	  6150      "00001011" // /* MW 14 */
	  6151      "00000011" // /* MW 13 */
	  6152      "10000000" // /* MW 12 */
	  6153      "01000010" // /* MW 11 */
	  6154      "10111000" // /* MW 10 */
	  6155      "01111011" // /* MW 9 */
	  6156      "00001100" // /* MW 8 */
	  6157      "10001011" // /* MW 7 */
	  6158      "11101010" // /* MW 6 */
	  6159      "00010101" // /* MW 5 */
	  6160      "00000000" // /* MW 4 */
	  6161      "00000000" // /* MW 3 */
	  6162      "00000000" // /* MW 2 */
	  6163      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 100 39
.nohwbrkpt
.noswbrkpt
	  6164      "10011000" // 	NOP;                NOP;                NOP;                          MOV.s12 r9, #-2;              ST.SPIL r9, [sp, #-1268];     NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  6165      "00000000" // /* MW 15 */
	  6166      "00011101" // /* MW 14 */
	  6167      "00000011" // /* MW 13 */
	  6168      "10000000" // /* MW 12 */
	  6169      "11000100" // /* MW 11 */
	  6170      "10110000" // /* MW 10 */
	  6171      "10011111" // /* MW 9 */
	  6172      "00001111" // /* MW 8 */
	  6173      "01110010" // /* MW 7 */
	  6174      "11111111" // /* MW 6 */
	  6175      "00001111" // /* MW 5 */
	  6176      "00000000" // /* MW 4 */
	  6177      "00000000" // /* MW 3 */
	  6178      "00000000" // /* MW 2 */
	  6179      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.nohwbrkpt
.noswbrkpt
	  6180      "11110111" // 	                                        NOP;                                                        VLDA.SPIL vrl2, [sp, #-128];  NOP /* MW 8 */
	  6181      "00100111" // /* MW 7 */
	  6182      "11110000" // /* MW 6 */
	  6183      "00010011" // /* MW 5 */
	  6184      "11001111" // /* MW 4 */
	  6185      "00000000" // /* MW 3 */
	  6186      "00000000" // /* MW 2 */
	  6187      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122 first
.nohwbrkpt
.noswbrkpt
	  6188      "10110111" // 	NOP;                                    VST wr2, [sp, #-1632];        OR r10, r4, r6 /* MW 8 */
	  6189      "11100110" // /* MW 7 */
	  6190      "10101001" // /* MW 6 */
	  6191      "01010011" // /* MW 5 */
	  6192      "10110010" // /* MW 4 */
	  6193      "00011010" // /* MW 3 */
	  6194      "00000000" // /* MW 2 */
	  6195      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.nohwbrkpt
.noswbrkpt
	  6196      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr3, [sp, #-1856];   NOP;                                    VCMP xc, r4, yd.s16, r2, c0, r7, c0, c2 /* MW 16 */
	  6197      "10000000" // /* MW 15 */
	  6198      "00001011" // /* MW 14 */
	  6199      "00000011" // /* MW 13 */
	  6200      "10000000" // /* MW 12 */
	  6201      "00000000" // /* MW 11 */
	  6202      "10001100" // /* MW 10 */
	  6203      "01101111" // /* MW 9 */
	  6204      "00001110" // /* MW 8 */
	  6205      "00000000" // /* MW 7 */
	  6206      "00000000" // /* MW 6 */
	  6207      "00010000" // /* MW 5 */
	  6208      "00000000" // /* MW 4 */
	  6209      "00000000" // /* MW 3 */
	  6210      "00000000" // /* MW 2 */
	  6211      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  6212      "10000111" // 	NOP;                                    ST r10, [p4], #4;                                                                                                                 VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 8 */
	  6213      "00001001" // /* MW 7 */
	  6214      "11010000" // /* MW 6 */
	  6215      "00110001" // /* MW 5 */
	  6216      "00000000" // /* MW 4 */
	  6217      "01100000" // /* MW 3 */
	  6218      "01010100" // /* MW 2 */
	  6219      "10101111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6220      "00000001" // 	NOP /* MW 2 */
	  6221      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 119 18
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 5 "compare.hpp" 542 37
.nohwbrkpt
.noswbrkpt
	  6222      "10011000" // 	NOP;                NOP;                NOP;                          OR r10, r4, r6;               LDA.SPIL p4, [sp, #-1264];    NOP;                                    VCMP xc, r6, yd.s16, r7, c0, r2, c0, c2 /* MW 16 */
	  6223      "00000000" // /* MW 15 */
	  6224      "00011101" // /* MW 14 */
	  6225      "00000011" // /* MW 13 */
	  6226      "10000000" // /* MW 12 */
	  6227      "00100110" // /* MW 11 */
	  6228      "00110110" // /* MW 10 */
	  6229      "01111011" // /* MW 9 */
	  6230      "00001100" // /* MW 8 */
	  6231      "10010100" // /* MW 7 */
	  6232      "10101100" // /* MW 6 */
	  6233      "00000110" // /* MW 5 */
	  6234      "00000000" // /* MW 4 */
	  6235      "00000000" // /* MW 3 */
	  6236      "00000000" // /* MW 2 */
	  6237      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 6 "mask.hpp" 262 36 first
.nohwbrkpt
.noswbrkpt
	  6238      "11101111" // 	NOP;                                    ST r10, [p4], #-12;           XOR r11, r10, r13;                                          NOP;                                    VCMP xc, r7, yd.s16, r2, c0, r7, c0, c2 /* MW 12 */
	  6239      "00000100" // /* MW 11 */
	  6240      "01011100" // /* MW 10 */
	  6241      "00011000" // /* MW 9 */
	  6242      "00000000" // /* MW 8 */
	  6243      "00111100" // /* MW 7 */
	  6244      "00000000" // /* MW 6 */
	  6245      "01010110" // /* MW 5 */
	  6246      "11011011" // /* MW 4 */
	  6247      "11000110" // /* MW 3 */
	  6248      "10101110" // /* MW 2 */
	  6249      "01011110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6250      "00000001" // 	NOP /* MW 2 */
	  6251      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
.src_ref 6 "mask.hpp" 260 28 first
.nohwbrkpt
.noswbrkpt
	  6252      "00110111" // 	LDA r8, [p4], #4;                       NOP;                          OR r15, r6, r7 /* MW 8 */
	  6253      "00000000" // /* MW 7 */
	  6254      "00000000" // /* MW 6 */
	  6255      "01111000" // /* MW 5 */
	  6256      "10111011" // /* MW 4 */
	  6257      "00011010" // /* MW 3 */
	  6258      "10100011" // /* MW 2 */
	  6259      "01111000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 260 28
.src_ref 6 "mask.hpp" 262 36 first
.nohwbrkpt
.noswbrkpt
	  6260      "00011111" // 	NOP;                LDB r10, [p4], #4;  ST r15, [p3], #-12;           XOR r7, r13, r15;             NOP /* MW 12 */
	  6261      "00000000" // /* MW 11 */
	  6262      "11000000" // /* MW 10 */
	  6263      "11110101" // /* MW 9 */
	  6264      "11011011" // /* MW 8 */
	  6265      "11010110" // /* MW 7 */
	  6266      "11111101" // /* MW 6 */
	  6267      "10001011" // /* MW 5 */
	  6268      "11010001" // /* MW 4 */
	  6269      "00111010" // /* MW 3 */
	  6270      "00000000" // /* MW 2 */
	  6271      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 260 28 first
.nohwbrkpt
.noswbrkpt
	  6272      "00111111" // 	NOP;                LDB r14, [p4], #-8; NOP;                                                        LDA.SPIL p5, [sp, #-524];     NOP /* MW 12 */
	  6273      "11101110" // /* MW 11 */
	  6274      "01111011" // /* MW 10 */
	  6275      "01111011" // /* MW 9 */
	  6276      "00001100" // /* MW 8 */
	  6277      "00000000" // /* MW 7 */
	  6278      "00000000" // /* MW 6 */
	  6279      "10010000" // /* MW 5 */
	  6280      "11011110" // /* MW 4 */
	  6281      "00111110" // /* MW 3 */
	  6282      "00000000" // /* MW 2 */
	  6283      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28
.nohwbrkpt
.noswbrkpt
	  6284      "00110111" // 	LDA r10, [p3], #4;                      NOP;                          NOP /* MW 8 */
	  6285      "00000000" // /* MW 7 */
	  6286      "00000000" // /* MW 6 */
	  6287      "00000000" // /* MW 5 */
	  6288      "00000000" // /* MW 4 */
	  6289      "11000000" // /* MW 3 */
	  6290      "10100010" // /* MW 2 */
	  6291      "01111010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6292      "11110111" // 	                                        NOP;                                                        ST.SPIL p4, [sp, #-1256];     NOP /* MW 8 */
	  6293      "01000111" // /* MW 7 */
	  6294      "00011000" // /* MW 6 */
	  6295      "11111011" // /* MW 5 */
	  6296      "11101100" // /* MW 4 */
	  6297      "00000000" // /* MW 3 */
	  6298      "00000000" // /* MW 2 */
	  6299      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28
.nohwbrkpt
.noswbrkpt
	  6300      "00000011" // 	NOP;                LDB r14, [p3], #4 /* MW 4 */
	  6301      "11111000" // /* MW 3 */
	  6302      "10100010" // /* MW 2 */
	  6303      "01111101" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28
.nohwbrkpt
.noswbrkpt
	  6304      "00000011" // 	NOP;                LDB r8, [p3], #-8 /* MW 4 */
	  6305      "11111000" // /* MW 3 */
	  6306      "10111100" // /* MW 2 */
	  6307      "01110001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6308      "00000001" // 	NOP /* MW 2 */
	  6309      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27
.nohwbrkpt
.noswbrkpt
	  6310      "00000011" // 	NOP;                                                                  XOR r8, r8, r13 /* MW 4 */
	  6311      "10000000" // /* MW 3 */
	  6312      "11011000" // /* MW 2 */
	  6313      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
.nohwbrkpt
.noswbrkpt
	  6314      "10110111" // 	NOP;                                    ST r8, [p5];                  XOR r8, r10, r13 /* MW 8 */
	  6315      "10100010" // /* MW 7 */
	  6316      "11110001" // /* MW 6 */
	  6317      "01000010" // /* MW 5 */
	  6318      "01101101" // /* MW 4 */
	  6319      "00011011" // /* MW 3 */
	  6320      "00000000" // /* MW 2 */
	  6321      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  6322      "00000011" // 	NOP;                                    ST r8, [p2], #4 /* MW 4 */
	  6323      "01010000" // /* MW 3 */
	  6324      "00010100" // /* MW 2 */
	  6325      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 27
.nohwbrkpt
.noswbrkpt
	  6326      "10110111" // 	NOP;                                    ST m0, [p5], #-8;             XOR r8, r14, r13 /* MW 8 */
	  6327      "01111010" // /* MW 7 */
	  6328      "11000001" // /* MW 6 */
	  6329      "01000010" // /* MW 5 */
	  6330      "01101111" // /* MW 4 */
	  6331      "00011011" // /* MW 3 */
	  6332      "00000000" // /* MW 2 */
	  6333      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25 first
.src_ref 6 "mask.hpp" 260 27 first
.nohwbrkpt
.noswbrkpt
	  6334      "00110111" // 	NOP;                                    ST r8, [p2], #-8;             XOR r10, r10, r13 /* MW 8 */
	  6335      "01111001" // /* MW 7 */
	  6336      "11110001" // /* MW 6 */
	  6337      "01010010" // /* MW 5 */
	  6338      "01101101" // /* MW 4 */
	  6339      "00011011" // /* MW 3 */
	  6340      "00000000" // /* MW 2 */
	  6341      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 120 18
.src_ref 6 "mask.hpp" 260 27
.noswbrkpt
	  6342      "11110111" // 	                                                                      XOR r14, r14, r13;            LDA.SPIL p2, [sp, #-1260];    NOP /* MW 8 */
	  6343      "11100111" // /* MW 7 */
	  6344      "01100010" // /* MW 6 */
	  6345      "10101011" // /* MW 5 */
	  6346      "11000111" // /* MW 4 */
	  6347      "11100000" // /* MW 3 */
	  6348      "11011110" // /* MW 2 */
	  6349      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 264 8 first
.nohwbrkpt
.noswbrkpt
	  6350      "00110111" // 	LDA cl5, [p2], #4;                      NOP;                          XOR r8, r8, r13 /* MW 8 */
	  6351      "00000000" // /* MW 7 */
	  6352      "00000000" // /* MW 6 */
	  6353      "01000000" // /* MW 5 */
	  6354      "01101100" // /* MW 4 */
	  6355      "10011011" // /* MW 3 */
	  6356      "10100010" // /* MW 2 */
	  6357      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
.nohwbrkpt
.noswbrkpt
	  6358      "00110111" // 	LDA ch4, [p2], #4;                      NOP;                          NOP /* MW 8 */
	  6359      "00000000" // /* MW 7 */
	  6360      "00000000" // /* MW 6 */
	  6361      "00000000" // /* MW 5 */
	  6362      "00000000" // /* MW 4 */
	  6363      "10000000" // /* MW 3 */
	  6364      "10100010" // /* MW 2 */
	  6365      "01010100" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
.nohwbrkpt
.noswbrkpt
	  6366      "00110111" // 	LDA cl6, [p2];                          NOP;                          NOP /* MW 8 */
	  6367      "00000000" // /* MW 7 */
	  6368      "00000000" // /* MW 6 */
	  6369      "00000000" // /* MW 5 */
	  6370      "00000000" // /* MW 4 */
	  6371      "10000000" // /* MW 3 */
	  6372      "11010000" // /* MW 2 */
	  6373      "01011110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6374      "11110111" // 	                                        NOP;                                                        ST.SPIL p2, [sp, #-1252];     NOP /* MW 8 */
	  6375      "01000111" // /* MW 7 */
	  6376      "00011100" // /* MW 6 */
	  6377      "11111011" // /* MW 5 */
	  6378      "11101010" // /* MW 4 */
	  6379      "00000000" // /* MW 3 */
	  6380      "00000000" // /* MW 2 */
	  6381      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  6382      "11110111" // 	                                        ST m0, [p5], #4;              NOP;                          MOV p2, p5 /* MW 8 */
	  6383      "11010100" // /* MW 7 */
	  6384      "00110110" // /* MW 6 */
	  6385      "00000000" // /* MW 5 */
	  6386      "00000000" // /* MW 4 */
	  6387      "11010000" // /* MW 3 */
	  6388      "00101000" // /* MW 2 */
	  6389      "01011000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  6390      "00000011" // 	NOP;                                    ST m0, [p5] /* MW 4 */
	  6391      "00101000" // /* MW 3 */
	  6392      "00011010" // /* MW 2 */
	  6393      "10101100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 260 25 first
.nohwbrkpt
.noswbrkpt
	  6394      "11110111" // 	                                        ST r10, [p2];                 NOP;                          MOV r10, ch5 /* MW 8 */
	  6395      "11110100" // /* MW 7 */
	  6396      "00100010" // /* MW 6 */
	  6397      "00000000" // /* MW 5 */
	  6398      "00000000" // /* MW 4 */
	  6399      "00100000" // /* MW 3 */
	  6400      "10110100" // /* MW 2 */
	  6401      "01011110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 260 25
	  6402      "10110111" // 	NOP;                                    ST r14, [p5], #4;             MOV.s12 r14, #-4 /* MW 8 */
	  6403      "01000110" // /* MW 7 */
	  6404      "11111101" // /* MW 6 */
	  6405      "11110010" // /* MW 5 */
	  6406      "11111001" // /* MW 4 */
	  6407      "00111111" // /* MW 3 */
	  6408      "00000000" // /* MW 2 */
	  6409      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 119 18 first
	  6410      "00000011" // 	NOP;                                    ST cl5, [p4], #4 /* MW 4 */
	  6411      "01100000" // /* MW 3 */
	  6412      "10110100" // /* MW 2 */
	  6413      "10101011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 119 18
	  6414      "00000011" // 	NOP;                                    ST ch4, [p4], #4 /* MW 4 */
	  6415      "01100000" // /* MW 3 */
	  6416      "10010100" // /* MW 2 */
	  6417      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 119 18
	  6418      "00000011" // 	NOP;                                    ST cl6, [p4], #4 /* MW 4 */
	  6419      "01100000" // /* MW 3 */
	  6420      "11010100" // /* MW 2 */
	  6421      "10101011" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25 first
	  6422      "00000011" // 	NOP;                                    ST r8, [p5], #-8 /* MW 4 */
	  6423      "10101000" // /* MW 3 */
	  6424      "00010111" // /* MW 2 */
	  6425      "10101111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 119 18 first
	  6426      "00000011" // 	NOP;                                    ST r11, [p4], #-12 /* MW 4 */
	  6427      "01100000" // /* MW 3 */
	  6428      "01110111" // /* MW 2 */
	  6429      "10101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8 first
	  6430      "00110111" // 	LDA cl5, [p5], #4;                      NOP;                          NOP /* MW 8 */
	  6431      "00000000" // /* MW 7 */
	  6432      "00000000" // /* MW 6 */
	  6433      "00000000" // /* MW 5 */
	  6434      "00000000" // /* MW 4 */
	  6435      "01000000" // /* MW 3 */
	  6436      "10100011" // /* MW 2 */
	  6437      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
.src_ref 6 "mask.hpp" 371 32 first
	  6438      "00010111" // 	LDA r11, [p4], #4;  LDB ch4, [p5], #4;                                NOP /* MW 8 */
	  6439      "00000000" // /* MW 7 */
	  6440      "00000000" // /* MW 6 */
	  6441      "10100000" // /* MW 5 */
	  6442      "01010001" // /* MW 4 */
	  6443      "00111000" // /* MW 3 */
	  6444      "10100011" // /* MW 2 */
	  6445      "01111011" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8 first
.src_ref 6 "mask.hpp" 371 32
	  6446      "00010111" // 	LDA cl6, [p5];      LDB r1, [p4], #4;                                 NOP /* MW 8 */
	  6447      "00000000" // /* MW 7 */
	  6448      "00000000" // /* MW 6 */
	  6449      "10000000" // /* MW 5 */
	  6450      "11010001" // /* MW 4 */
	  6451      "01110001" // /* MW 3 */
	  6452      "11010001" // /* MW 2 */
	  6453      "01011110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
	  6454      "00000011" // 	NOP;                LDB r8, [p4], #4 /* MW 4 */
	  6455      "00111000" // /* MW 3 */
	  6456      "10100011" // /* MW 2 */
	  6457      "01110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
.noswbrkpt
	  6458      "00000011" // 	NOP;                LDB r15, [p4], #-12 /* MW 4 */
	  6459      "00111000" // /* MW 3 */
	  6460      "10111011" // /* MW 2 */
	  6461      "01111111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6462      "00000001" // 	NOP /* MW 2 */
	  6463      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6464      "00000001" // 	NOP /* MW 2 */
	  6465      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  6466      "00000001" // 	NOP /* MW 2 */
	  6467      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 120 18 first
.nohwbrkpt
.noswbrkpt
	  6468      "00000011" // 	NOP;                                    ST cl5, [p2], #4 /* MW 4 */
	  6469      "01010000" // /* MW 3 */
	  6470      "10110100" // /* MW 2 */
	  6471      "10101011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 120 18
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  6472      "00110111" // 	NOP;                                    ST ch4, [p2], #4;             LSHL r15, r11, r13 /* MW 8 */
	  6473      "01000101" // /* MW 7 */
	  6474      "10101001" // /* MW 6 */
	  6475      "11111010" // /* MW 5 */
	  6476      "01101101" // /* MW 4 */
	  6477      "00011111" // /* MW 3 */
	  6478      "00000000" // /* MW 2 */
	  6479      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 120 18 first
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  6480      "11110111" // 	                                        ST cl6, [p2], #4;             AND r15, r12, r15;            MOV ch4, r1 /* MW 8 */
	  6481      "10001000" // /* MW 7 */
	  6482      "00111000" // /* MW 6 */
	  6483      "10011110" // /* MW 5 */
	  6484      "10011111" // /* MW 4 */
	  6485      "10100110" // /* MW 3 */
	  6486      "10101000" // /* MW 2 */
	  6487      "01010111" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 120 18
.src_ref 6 "mask.hpp" 99 18 first
.nohwbrkpt
.noswbrkpt
	  6488      "00110111" // 	NOP;                                    ST r7, [p2], #-12;            SUB r5, r11, r15 /* MW 8 */
	  6489      "01110101" // /* MW 7 */
	  6490      "11101111" // /* MW 6 */
	  6491      "10101010" // /* MW 5 */
	  6492      "11111101" // /* MW 4 */
	  6493      "00011000" // /* MW 3 */
	  6494      "00000000" // /* MW 2 */
	  6495      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
.src_ref 6 "mask.hpp" 204 36
	  6496      "01110111" // 	NOP;                                                                  LSHL r6, r5, r9;              MOV cl6, r15 /* MW 8 */
	  6497      "10101100" // /* MW 7 */
	  6498      "11010010" // /* MW 6 */
	  6499      "10000111" // /* MW 5 */
	  6500      "11110011" // /* MW 4 */
	  6501      "00000111" // /* MW 3 */
	  6502      "00000000" // /* MW 2 */
	  6503      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 371 32 first
	  6504      "00010111" // 	NOP;                LDB r4, [p2], #4;                                 AND r3, r10, r6 /* MW 8 */
	  6505      "01000110" // /* MW 7 */
	  6506      "10001101" // /* MW 6 */
	  6507      "01000110" // /* MW 5 */
	  6508      "11010001" // /* MW 4 */
	  6509      "00110100" // /* MW 3 */
	  6510      "00000000" // /* MW 2 */
	  6511      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.src_ref 6 "mask.hpp" 371 32
.noswbrkpt
	  6512      "00010111" // 	NOP;                LDB r7, [p2], #4;                                 LSHL r6, r1, r13 /* MW 8 */
	  6513      "00101100" // /* MW 7 */
	  6514      "11011010" // /* MW 6 */
	  6515      "01000111" // /* MW 5 */
	  6516      "11010001" // /* MW 4 */
	  6517      "00110111" // /* MW 3 */
	  6518      "00000000" // /* MW 2 */
	  6519      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 371 32 first
.nohwbrkpt
.noswbrkpt
	  6520      "00110111" // 	LDA cl5, [p2], #4;                      NOP;                          AND r2, r12, r6 /* MW 8 */
	  6521      "00000000" // /* MW 7 */
	  6522      "00000000" // /* MW 6 */
	  6523      "00010000" // /* MW 5 */
	  6524      "00110110" // /* MW 4 */
	  6525      "10011010" // /* MW 3 */
	  6526      "10100010" // /* MW 2 */
	  6527      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  6528      "00000011" // 	NOP;                                                                  LSHL r7, r8, r13 /* MW 4 */
	  6529      "01110000" // /* MW 3 */
	  6530      "11011000" // /* MW 2 */
	  6531      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  6532      "00000011" // 	NOP;                                                                  AND r6, r12, r7 /* MW 4 */
	  6533      "01100000" // /* MW 3 */
	  6534      "01111100" // /* MW 2 */
	  6535      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
	  6536      "00000011" // 	NOP;                                                                  AND r5, r10, r5 /* MW 4 */
	  6537      "01010000" // /* MW 3 */
	  6538      "01011010" // /* MW 2 */
	  6539      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
	  6540      "00000011" // 	NOP;                                                                  SUB r6, r8, r6 /* MW 4 */
	  6541      "01100000" // /* MW 3 */
	  6542      "01101000" // /* MW 2 */
	  6543      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
	  6544      "00000011" // 	NOP;                                                                  ADD r3, r5, r3 /* MW 4 */
	  6545      "00110000" // /* MW 3 */
	  6546      "00110101" // /* MW 2 */
	  6547      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  6548      "11110111" // 	                                                                      LSHL r0, r6, r9;              ST.SPIL r4, [sp, #-1272];     NOP /* MW 8 */
	  6549      "01000111" // /* MW 7 */
	  6550      "00001000" // /* MW 6 */
	  6551      "11111011" // /* MW 5 */
	  6552      "11110100" // /* MW 4 */
	  6553      "00000000" // /* MW 3 */
	  6554      "10010110" // /* MW 2 */
	  6555      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  6556      "11110111" // 	                                                                      AND r5, r0, r10;              ST.SPIL r7, [sp, #-1276];     NOP /* MW 8 */
	  6557      "01000111" // /* MW 7 */
	  6558      "00000100" // /* MW 6 */
	  6559      "11111011" // /* MW 5 */
	  6560      "11110111" // /* MW 4 */
	  6561      "01010000" // /* MW 3 */
	  6562      "10100000" // /* MW 2 */
	  6563      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  6564      "00000011" // 	NOP;                                                                  AND r6, r10, r6 /* MW 4 */
	  6565      "01100000" // /* MW 3 */
	  6566      "01101010" // /* MW 2 */
	  6567      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  6568      "00000011" // 	NOP;                                                                  ADD r6, r6, r5 /* MW 4 */
	  6569      "01100000" // /* MW 3 */
	  6570      "01010110" // /* MW 2 */
	  6571      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
	  6572      "10110111" // 	NOP;                                    ST r6, [sp, #-116];           SUB r1, r1, r2 /* MW 8 */
	  6573      "11110001" // /* MW 7 */
	  6574      "11101101" // /* MW 6 */
	  6575      "10001010" // /* MW 5 */
	  6576      "10010000" // /* MW 4 */
	  6577      "00011000" // /* MW 3 */
	  6578      "00000000" // /* MW 2 */
	  6579      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  6580      "00000011" // 	NOP;                                                                  LSHL r0, r4, r13 /* MW 4 */
	  6581      "00000000" // /* MW 3 */
	  6582      "11010100" // /* MW 2 */
	  6583      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
	  6584      "00000011" // 	NOP;                                                                  AND r6, r10, r1 /* MW 4 */
	  6585      "01100000" // /* MW 3 */
	  6586      "00011010" // /* MW 2 */
	  6587      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  6588      "00000011" // 	NOP;                                                                  LSHL r2, r1, r9 /* MW 4 */
	  6589      "00100000" // /* MW 3 */
	  6590      "10010001" // /* MW 2 */
	  6591      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30 first
	  6592      "00000011" // 	NOP;                                                                  AND r0, r0, r12 /* MW 4 */
	  6593      "00000000" // /* MW 3 */
	  6594      "11000000" // /* MW 2 */
	  6595      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  6596      "00000011" // 	NOP;                                                                  AND r1, r2, r10 /* MW 4 */
	  6597      "00010000" // /* MW 3 */
	  6598      "10100010" // /* MW 2 */
	  6599      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
	  6600      "00000011" // 	NOP;                                                                  SUB r4, r4, r0 /* MW 4 */
	  6601      "01000000" // /* MW 3 */
	  6602      "00000100" // /* MW 2 */
	  6603      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
	  6604      "00000011" // 	NOP;                                                                  ADD r6, r6, r1 /* MW 4 */
	  6605      "01100000" // /* MW 3 */
	  6606      "00010110" // /* MW 2 */
	  6607      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.src_ref 6 "mask.hpp" 371 32 first
.noswbrkpt
	  6608      "00010111" // 	NOP;                LDB r13, [p2], #-12;                              LSHL r14, r3, r14 /* MW 8 */
	  6609      "01111100" // /* MW 7 */
	  6610      "11011100" // /* MW 6 */
	  6611      "01000111" // /* MW 5 */
	  6612      "11011101" // /* MW 4 */
	  6613      "00111101" // /* MW 3 */
	  6614      "00000000" // /* MW 2 */
	  6615      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  6616      "00000011" // 	NOP;                                                                  LSHL r1, r15, r13 /* MW 4 */
	  6617      "00010000" // /* MW 3 */
	  6618      "11011111" // /* MW 2 */
	  6619      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.nohwbrkpt
.noswbrkpt
	  6620      "00000011" // 	NOP;                                                                  LSHL r0, r7, r13 /* MW 4 */
	  6621      "00000000" // /* MW 3 */
	  6622      "11010111" // /* MW 2 */
	  6623      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 101 20 first
.nohwbrkpt
.noswbrkpt
	  6624      "01110111" // 	NOP;                                                                  ADD r14, r14, r3;             MOV r3, cl5 /* MW 8 */
	  6625      "11011100" // /* MW 7 */
	  6626      "00000111" // /* MW 6 */
	  6627      "11000110" // /* MW 5 */
	  6628      "11011100" // /* MW 4 */
	  6629      "00000100" // /* MW 3 */
	  6630      "00000000" // /* MW 2 */
	  6631      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30 first
.nohwbrkpt
.noswbrkpt
	  6632      "00000011" // 	NOP;                                                                  AND r1, r12, r1 /* MW 4 */
	  6633      "00010000" // /* MW 3 */
	  6634      "00011100" // /* MW 2 */
	  6635      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  6636      "00000011" // 	NOP;                                                                  AND r0, r0, r12 /* MW 4 */
	  6637      "00000000" // /* MW 3 */
	  6638      "11000000" // /* MW 2 */
	  6639      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.nohwbrkpt
.noswbrkpt
	  6640      "00000011" // 	NOP;                                                                  LSHL r13, r3, r13 /* MW 4 */
	  6641      "11010000" // /* MW 3 */
	  6642      "11010011" // /* MW 2 */
	  6643      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  6644      "00000011" // 	NOP;                                                                  AND r12, r12, r13 /* MW 4 */
	  6645      "11000000" // /* MW 3 */
	  6646      "11011100" // /* MW 2 */
	  6647      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  6648      "11110111" // 	                                                                      SUB r7, r7, r0;               ST.SPIL r13, [sp, #-1280];    NOP /* MW 8 */
	  6649      "01000111" // /* MW 7 */
	  6650      "00000000" // /* MW 6 */
	  6651      "11111011" // /* MW 5 */
	  6652      "11111101" // /* MW 4 */
	  6653      "01110000" // /* MW 3 */
	  6654      "00000111" // /* MW 2 */
	  6655      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 99 24
	  6656      "01110111" // 	NOP;                                                                  SUB r15, r15, r1;             MOV.s8 r1, #-1 /* MW 8 */
	  6657      "11111110" // /* MW 7 */
	  6658      "00100011" // /* MW 6 */
	  6659      "01000110" // /* MW 5 */
	  6660      "11111100" // /* MW 4 */
	  6661      "00111111" // /* MW 3 */
	  6662      "00000000" // /* MW 2 */
	  6663      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  6664      "00000011" // 	NOP;                                                                  SUB r12, r3, r12 /* MW 4 */
	  6665      "11000000" // /* MW 3 */
	  6666      "11000011" // /* MW 2 */
	  6667      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  6668      "00000011" // 	NOP;                                                                  LSHL r2, r15, r9 /* MW 4 */
	  6669      "00100000" // /* MW 3 */
	  6670      "10011111" // /* MW 2 */
	  6671      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  6672      "00000011" // 	NOP;                                                                  LSHL r3, r12, r9 /* MW 4 */
	  6673      "00110000" // /* MW 3 */
	  6674      "10011100" // /* MW 2 */
	  6675      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  6676      "00000011" // 	NOP;                                                                  LSHL r0, r4, r9 /* MW 4 */
	  6677      "00000000" // /* MW 3 */
	  6678      "10010100" // /* MW 2 */
	  6679      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 100 39
	  6680      "01110111" // 	NOP;                                                                  LSHL r5, r7, r9;              MOV r9, cl4 /* MW 8 */
	  6681      "11101010" // /* MW 7 */
	  6682      "11010010" // /* MW 6 */
	  6683      "01000111" // /* MW 5 */
	  6684      "11001110" // /* MW 4 */
	  6685      "00000100" // /* MW 3 */
	  6686      "00000000" // /* MW 2 */
	  6687      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  6688      "00000011" // 	NOP;                                                                  LSHL r1, r13, r1 /* MW 4 */
	  6689      "00010000" // /* MW 3 */
	  6690      "00011101" // /* MW 2 */
	  6691      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  6692      "00000011" // 	NOP;                                                                  AND r9, r1, r9 /* MW 4 */
	  6693      "10010000" // /* MW 3 */
	  6694      "10010001" // /* MW 2 */
	  6695      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 101 25
.src_ref 6 "mask.hpp" 101 25
	  6696      "01110111" // 	NOP;                                                                  SUB r1, r13, r9;              MOV.s8 r13, #-4 /* MW 8 */
	  6697      "10100010" // /* MW 7 */
	  6698      "00110011" // /* MW 6 */
	  6699      "01000110" // /* MW 5 */
	  6700      "11001111" // /* MW 4 */
	  6701      "00111111" // /* MW 3 */
	  6702      "00000000" // /* MW 2 */
	  6703      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
	  6704      "00000011" // 	NOP;                                                                  AND r9, r4, r10 /* MW 4 */
	  6705      "10010000" // /* MW 3 */
	  6706      "10100100" // /* MW 2 */
	  6707      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  6708      "00000011" // 	NOP;                                                                  AND r0, r0, r10 /* MW 4 */
	  6709      "00000000" // /* MW 3 */
	  6710      "10100000" // /* MW 2 */
	  6711      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  6712      "00000011" // 	NOP;                                                                  ADD r4, r0, r9 /* MW 4 */
	  6713      "01000000" // /* MW 3 */
	  6714      "10010000" // /* MW 2 */
	  6715      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  6716      "00000011" // 	NOP;                                                                  AND r9, r10, r7 /* MW 4 */
	  6717      "10010000" // /* MW 3 */
	  6718      "01111010" // /* MW 2 */
	  6719      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  6720      "00000011" // 	NOP;                                                                  AND r15, r10, r15 /* MW 4 */
	  6721      "11110000" // /* MW 3 */
	  6722      "11111010" // /* MW 2 */
	  6723      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  6724      "00000011" // 	NOP;                                                                  AND r2, r2, r10 /* MW 4 */
	  6725      "00100000" // /* MW 3 */
	  6726      "10100010" // /* MW 2 */
	  6727      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  6728      "00000011" // 	NOP;                                                                  ADD r7, r2, r15 /* MW 4 */
	  6729      "01110000" // /* MW 3 */
	  6730      "11110010" // /* MW 2 */
	  6731      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  6732      "00000011" // 	NOP;                                                                  LSHL r15, r6, r13 /* MW 4 */
	  6733      "11110000" // /* MW 3 */
	  6734      "11010110" // /* MW 2 */
	  6735      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  6736      "00000011" // 	NOP;                                                                  ADD r15, r6, r15 /* MW 4 */
	  6737      "11110000" // /* MW 3 */
	  6738      "11110110" // /* MW 2 */
	  6739      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  6740      "00000011" // 	NOP;                                                                  LSHL r6, r4, r13 /* MW 4 */
	  6741      "01100000" // /* MW 3 */
	  6742      "11010100" // /* MW 2 */
	  6743      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  6744      "00000011" // 	NOP;                                                                  ADD r2, r4, r6 /* MW 4 */
	  6745      "00100000" // /* MW 3 */
	  6746      "01100100" // /* MW 2 */
	  6747      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  6748      "00000011" // 	NOP;                                                                  AND r5, r10, r5 /* MW 4 */
	  6749      "01010000" // /* MW 3 */
	  6750      "01011010" // /* MW 2 */
	  6751      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  6752      "00000011" // 	NOP;                                                                  AND r12, r12, r10 /* MW 4 */
	  6753      "11000000" // /* MW 3 */
	  6754      "10101100" // /* MW 2 */
	  6755      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 25
.noswbrkpt
	  6756      "00010111" // 	NOP;                LDB r1, [sp, #-116];                              AND r3, r10, r3 /* MW 8 */
	  6757      "01000110" // /* MW 7 */
	  6758      "10000111" // /* MW 6 */
	  6759      "01100110" // /* MW 5 */
	  6760      "11111100" // /* MW 4 */
	  6761      "00110001" // /* MW 3 */
	  6762      "00000000" // /* MW 2 */
	  6763      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 101 31
.nohwbrkpt
.noswbrkpt
	  6764      "01110111" // 	NOP;                                                                  ADD r5, r9, r5;               MOV r9, ch3 /* MW 8 */
	  6765      "00101010" // /* MW 7 */
	  6766      "00001011" // /* MW 6 */
	  6767      "01000110" // /* MW 5 */
	  6768      "00111110" // /* MW 4 */
	  6769      "00000100" // /* MW 3 */
	  6770      "00000000" // /* MW 2 */
	  6771      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.nohwbrkpt
.noswbrkpt
	  6772      "00000011" // 	NOP;                                                                  ADD r4, r12, r3 /* MW 4 */
	  6773      "01000000" // /* MW 3 */
	  6774      "00111100" // /* MW 2 */
	  6775      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
.nohwbrkpt
.noswbrkpt
	  6776      "00000011" // 	NOP;                                                                  LSHL r12, r5, r13 /* MW 4 */
	  6777      "11000000" // /* MW 3 */
	  6778      "11010101" // /* MW 2 */
	  6779      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 44
.src_ref 6 "mask.hpp" 101 44
.nohwbrkpt
.noswbrkpt
	  6780      "01110111" // 	NOP;                                                                  ADD r0, r12, r5;              MOV r12, cl3 /* MW 8 */
	  6781      "10000000" // /* MW 7 */
	  6782      "00001011" // /* MW 6 */
	  6783      "00000110" // /* MW 5 */
	  6784      "10111111" // /* MW 4 */
	  6785      "00000100" // /* MW 3 */
	  6786      "00000000" // /* MW 2 */
	  6787      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 142 38
.src_ref 6 "mask.hpp" 100 39
.src_ref 6 "mask.hpp" 101 31
.nohwbrkpt
.noswbrkpt
	  6788      "01110111" // 	NOP;                                                                  AND r3, r9, r15;              MOV.s8 r15, #-2 /* MW 8 */
	  6789      "00100110" // /* MW 7 */
	  6790      "10011111" // /* MW 6 */
	  6791      "11000110" // /* MW 5 */
	  6792      "11101111" // /* MW 4 */
	  6793      "00111111" // /* MW 3 */
	  6794      "00000000" // /* MW 2 */
	  6795      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
.nohwbrkpt
.noswbrkpt
	  6796      "00000011" // 	NOP;                                                                  AND r5, r10, r1 /* MW 4 */
	  6797      "01010000" // /* MW 3 */
	  6798      "00011010" // /* MW 2 */
	  6799      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
.nohwbrkpt
.noswbrkpt
	  6800      "00000011" // 	NOP;                                                                  LSHL r6, r1, r15 /* MW 4 */
	  6801      "01100000" // /* MW 3 */
	  6802      "11110001" // /* MW 2 */
	  6803      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  6804      "00000011" // 	NOP;                                                                  AND r10, r10, r6 /* MW 4 */
	  6805      "10100000" // /* MW 3 */
	  6806      "01101010" // /* MW 2 */
	  6807      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31 first
	  6808      "00000011" // 	NOP;                                                                  AND r14, r14, r9 /* MW 4 */
	  6809      "11100000" // /* MW 3 */
	  6810      "10011110" // /* MW 2 */
	  6811      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6812      "00000011" // 	NOP;                                                                  MUL r6, r12, r14 /* MW 4 */
	  6813      "01100000" // /* MW 3 */
	  6814      "11101100" // /* MW 2 */
	  6815      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33 first
	  6816      "00000011" // 	NOP;                                                                  ADD r5, r10, r5 /* MW 4 */
	  6817      "01010000" // /* MW 3 */
	  6818      "01011010" // /* MW 2 */
	  6819      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44 first
	  6820      "00000011" // 	NOP;                                                                  MUL r3, r12, r3 /* MW 4 */
	  6821      "00110000" // /* MW 3 */
	  6822      "00111100" // /* MW 2 */
	  6823      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  6824      "00000011" // 	NOP;                                                                  AND r14, r0, r9 /* MW 4 */
	  6825      "11100000" // /* MW 3 */
	  6826      "10010000" // /* MW 2 */
	  6827      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6828      "00000011" // 	NOP;                                                                  MUL r14, r12, r14 /* MW 4 */
	  6829      "11100000" // /* MW 3 */
	  6830      "11101100" // /* MW 2 */
	  6831      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  6832      "00000011" // 	NOP;                                                                  LSHL r10, r4, r13 /* MW 4 */
	  6833      "10100000" // /* MW 3 */
	  6834      "11010100" // /* MW 2 */
	  6835      "00111110" // /* MW 1 */
	  6836      "00000001" // 	NOP /* MW 2 */
	  6837      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 101 57
	  6838      "01110111" // 	NOP;                                                                  ADD r0, r4, r10;              MOV.s8 r10, #-24 /* MW 8 */
	  6839      "10000000" // /* MW 7 */
	  6840      "00010100" // /* MW 6 */
	  6841      "10000110" // /* MW 5 */
	  6842      "10001110" // /* MW 4 */
	  6843      "00111110" // /* MW 3 */
	  6844      "00000000" // /* MW 2 */
	  6845      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  6846      "00000011" // 	NOP;                                                                  LSHL r4, r1, r13 /* MW 4 */
	  6847      "01000000" // /* MW 3 */
	  6848      "11010001" // /* MW 2 */
	  6849      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  6850      "00000011" // 	NOP;                                                                  ADD r1, r4, r1 /* MW 4 */
	  6851      "00010000" // /* MW 3 */
	  6852      "00010100" // /* MW 2 */
	  6853      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  6854      "00000011" // 	NOP;                                                                  LSHL r4, r7, r13 /* MW 4 */
	  6855      "01000000" // /* MW 3 */
	  6856      "11010111" // /* MW 2 */
	  6857      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  6858      "00000011" // 	NOP;                                                                  ADD r7, r4, r7 /* MW 4 */
	  6859      "01110000" // /* MW 3 */
	  6860      "01110100" // /* MW 2 */
	  6861      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  6862      "00000011" // 	NOP;                                                                  LSHL r13, r5, r13 /* MW 4 */
	  6863      "11010000" // /* MW 3 */
	  6864      "11010101" // /* MW 2 */
	  6865      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  6866      "00000011" // 	NOP;                                                                  AND r2, r2, r9 /* MW 4 */
	  6867      "00100000" // /* MW 3 */
	  6868      "10010010" // /* MW 2 */
	  6869      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  6870      "00000011" // 	NOP;                                                                  AND r1, r1, r9 /* MW 4 */
	  6871      "00010000" // /* MW 3 */
	  6872      "10010001" // /* MW 2 */
	  6873      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  6874      "00000011" // 	NOP;                                                                  AND r7, r9, r7 /* MW 4 */
	  6875      "01110000" // /* MW 3 */
	  6876      "01111001" // /* MW 2 */
	  6877      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  6878      "00000011" // 	NOP;                                                                  AND r0, r0, r9 /* MW 4 */
	  6879      "00000000" // /* MW 3 */
	  6880      "10010000" // /* MW 2 */
	  6881      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  6882      "00000011" // 	NOP;                                                                  ADD r13, r5, r13 /* MW 4 */
	  6883      "11010000" // /* MW 3 */
	  6884      "11010101" // /* MW 2 */
	  6885      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6886      "00000011" // 	NOP;                                                                  MUL r1, r12, r1 /* MW 4 */
	  6887      "00010000" // /* MW 3 */
	  6888      "00011100" // /* MW 2 */
	  6889      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6890      "00000011" // 	NOP;                                                                  MUL r7, r12, r7 /* MW 4 */
	  6891      "01110000" // /* MW 3 */
	  6892      "01111100" // /* MW 2 */
	  6893      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6894      "00000011" // 	NOP;                                                                  MUL r0, r0, r12 /* MW 4 */
	  6895      "00000000" // /* MW 3 */
	  6896      "11000000" // /* MW 2 */
	  6897      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6898      "00000011" // 	NOP;                                                                  MUL r2, r12, r2 /* MW 4 */
	  6899      "00100000" // /* MW 3 */
	  6900      "00101100" // /* MW 2 */
	  6901      "00110111" // /* MW 1 */
	  6902      "00000001" // 	NOP /* MW 2 */
	  6903      "00000000" // /* MW 1 */
	  6904      "00000001" // 	NOP /* MW 2 */
	  6905      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  6906      "00000011" // 	NOP;                                                                  AND r9, r9, r13 /* MW 4 */
	  6907      "10010000" // /* MW 3 */
	  6908      "11011001" // /* MW 2 */
	  6909      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  6910      "00000011" // 	NOP;                                                                  MUL r9, r12, r9 /* MW 4 */
	  6911      "10010000" // /* MW 3 */
	  6912      "10011100" // /* MW 2 */
	  6913      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6914      "00000011" // 	NOP;                                                                  LSHL r2, r2, r10 /* MW 4 */
	  6915      "00100000" // /* MW 3 */
	  6916      "10100010" // /* MW 2 */
	  6917      "00111110" // /* MW 1 */
	  6918      "00000001" // 	NOP /* MW 2 */
	  6919      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6920      "00000011" // 	NOP;                                                                  LSHL r14, r14, r10 /* MW 4 */
	  6921      "11100000" // /* MW 3 */
	  6922      "10101110" // /* MW 2 */
	  6923      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6924      "00000011" // 	NOP;                                                                  LSHL r6, r6, r10 /* MW 4 */
	  6925      "01100000" // /* MW 3 */
	  6926      "10100110" // /* MW 2 */
	  6927      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6928      "00000011" // 	NOP;                                                                  LSHL r3, r3, r10 /* MW 4 */
	  6929      "00110000" // /* MW 3 */
	  6930      "10100011" // /* MW 2 */
	  6931      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6932      "00000011" // 	NOP;                                                                  LSHL r0, r0, r10 /* MW 4 */
	  6933      "00000000" // /* MW 3 */
	  6934      "10100000" // /* MW 2 */
	  6935      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6936      "00000011" // 	NOP;                                                                  LSHL r1, r1, r10 /* MW 4 */
	  6937      "00010000" // /* MW 3 */
	  6938      "10100001" // /* MW 2 */
	  6939      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6940      "00000011" // 	NOP;                                                                  LSHL r7, r7, r10 /* MW 4 */
	  6941      "01110000" // /* MW 3 */
	  6942      "10100111" // /* MW 2 */
	  6943      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  6944      "00000011" // 	NOP;                                                                  LSHL r10, r9, r10 /* MW 4 */
	  6945      "10100000" // /* MW 3 */
	  6946      "10101001" // /* MW 2 */
	  6947      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  6948      "00000011" // 	NOP;                                                                  ADD r12, r2, r14 /* MW 4 */
	  6949      "11000000" // /* MW 3 */
	  6950      "11100010" // /* MW 2 */
	  6951      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  6952      "00000011" // 	NOP;                                                                  ADD r6, r6, r3 /* MW 4 */
	  6953      "01100000" // /* MW 3 */
	  6954      "00110110" // /* MW 2 */
	  6955      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  6956      "00000011" // 	NOP;                                                                  ADD r13, r0, r12 /* MW 4 */
	  6957      "11010000" // /* MW 3 */
	  6958      "11000000" // /* MW 2 */
	  6959      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  6960      "00000011" // 	NOP;                                                                  ADD r9, r6, r1 /* MW 4 */
	  6961      "10010000" // /* MW 3 */
	  6962      "00010110" // /* MW 2 */
	  6963      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  6964      "00000011" // 	NOP;                                                                  ADD r12, r9, r7 /* MW 4 */
	  6965      "11000000" // /* MW 3 */
	  6966      "01111001" // /* MW 2 */
	  6967      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  6968      "00000011" // 	NOP;                                                                  ADD r13, r10, r13 /* MW 4 */
	  6969      "11010000" // /* MW 3 */
	  6970      "11011010" // /* MW 2 */
	  6971      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 138 28 first
	  6972      "00000011" // 	NOP;                                                                  ADD r14, r12, r13 /* MW 4 */
	  6973      "11100000" // /* MW 3 */
	  6974      "11011100" // /* MW 2 */
	  6975      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 140 16 first
	  6976      "11110111" // 	                                        NOP;                                                        BEQZ r14,#9040;               NOP /* MW 8 */
	  6977      "00000111" // /* MW 7 */
	  6978      "00110101" // /* MW 6 */
	  6979      "11000010" // /* MW 5 */
	  6980      "10000001" // /* MW 4 */
	  6981      "00000000" // /* MW 3 */
	  6982      "00000000" // /* MW 2 */
	  6983      "10000000" // /* MW 1 */
.delay_slot
	  6984      "11110111" // 	                                        NOP;                                                        ST.SPIL p3, [sp, #-528];      NOP /* MW 8 */
	  6985      "01000111" // /* MW 7 */
	  6986      "11110000" // /* MW 6 */
	  6987      "11111101" // /* MW 5 */
	  6988      "11101011" // /* MW 4 */
	  6989      "00000000" // /* MW 3 */
	  6990      "00000000" // /* MW 2 */
	  6991      "10000000" // /* MW 1 */
.delay_slot
	  6992      "11110111" // 	                                        NOP;                                                        ST.SPIL p5, [sp, #-524];      NOP /* MW 8 */
	  6993      "01000111" // /* MW 7 */
	  6994      "11110100" // /* MW 6 */
	  6995      "11111101" // /* MW 5 */
	  6996      "11101101" // /* MW 4 */
	  6997      "00000000" // /* MW 3 */
	  6998      "00000000" // /* MW 2 */
	  6999      "10000000" // /* MW 1 */
.delay_slot
	  7000      "11110111" // 	                                        NOP;                                                        ST.SPIL p4, [sp, #-1264];     NOP /* MW 8 */
	  7001      "01000111" // /* MW 7 */
	  7002      "00010000" // /* MW 6 */
	  7003      "11111011" // /* MW 5 */
	  7004      "11101100" // /* MW 4 */
	  7005      "00000000" // /* MW 3 */
	  7006      "00000000" // /* MW 2 */
	  7007      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 142 38
.delay_slot
	  7008      "01010101" // 	MOV r5, ch6 /* MW 2 */
	  7009      "00011011" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 6 "mask.hpp" 130 25
.delay_slot
	  7010      "00111111" // 	NOP;                MOV.s9 r4, #0;                                    ADD r10, r5, #1;              ST.SPIL p2, [sp, #-1260];     NOP /* MW 12 */
	  7011      "01000100" // /* MW 11 */
	  7012      "10110001" // /* MW 10 */
	  7013      "10101111" // /* MW 9 */
	  7014      "00001110" // /* MW 8 */
	  7015      "10110100" // /* MW 7 */
	  7016      "00000010" // /* MW 6 */
	  7017      "00000100" // /* MW 5 */
	  7018      "11000000" // /* MW 4 */
	  7019      "00010100" // /* MW 3 */
	  7020      "00000000" // /* MW 2 */
	  7021      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 142 38 first
.src_ref 3 "my_kernel_1.cpp" 178 24
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
	  7022      "00111111" // 	VLDA wr0, [sp, #-448];MOV.s9 r7, #32;                                 SUB r9, r15, r5;              MOV.u20 r3, #1000;            NOP /* MW 12 */
	  7023      "11101000" // /* MW 11 */
	  7024      "11000011" // /* MW 10 */
	  7025      "00001100" // /* MW 9 */
	  7026      "00000100" // /* MW 8 */
	  7027      "11110010" // /* MW 7 */
	  7028      "00101011" // /* MW 6 */
	  7029      "00000110" // /* MW 5 */
	  7030      "11000100" // /* MW 4 */
	  7031      "10010111" // /* MW 3 */
	  7032      "11111100" // /* MW 2 */
	  7033      "00000010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 38
.src_ref 3 "my_kernel_1.cpp" 147 38
.src_ref 3 "my_kernel_1.cpp" 178 24
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23 first
	  7034      "00011111" // 	VLDA wr1, [sp, #-416];MOV.s9 r15, #0;   NOP;                          MOV.s12 r6, #1001;            VUPD.32 vrl2[0], r9 /* MW 12 */
	  7035      "10011101" // /* MW 11 */
	  7036      "10010001" // /* MW 10 */
	  7037      "10011101" // /* MW 9 */
	  7038      "00111110" // /* MW 8 */
	  7039      "00000001" // /* MW 7 */
	  7040      "00000000" // /* MW 6 */
	  7041      "00000000" // /* MW 5 */
	  7042      "11000000" // /* MW 4 */
	  7043      "11011111" // /* MW 3 */
	  7044      "11111100" // /* MW 2 */
	  7045      "00000110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 30
.src_ref 5 "vector.hpp" 691 23
	  7046      "01110111" // 	NOP;                                                                  MOV.s12 r1, #256;             VUPD.32 vrl2[1], r14 /* MW 8 */
	  7047      "01100010" // /* MW 7 */
	  7048      "10000000" // /* MW 6 */
	  7049      "00001000" // /* MW 5 */
	  7050      "11101101" // /* MW 4 */
	  7051      "00010101" // /* MW 3 */
	  7052      "00000000" // /* MW 2 */
	  7053      "00000000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8 first
	  7054      "01110111" // 	NOP;                                    VST vrl2, [sp, #-128];                                                                    VMOV1 WMS.md0[10], vrl2, #0 /* MW 8 */
	  7055      "11111000" // /* MW 7 */
	  7056      "10010011" // /* MW 6 */
	  7057      "00110110" // /* MW 5 */
	  7058      "00100000" // /* MW 4 */
	  7059      "00000001" // /* MW 3 */
	  7060      "00000000" // /* MW 2 */
	  7061      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 165 24
	  7062      "11110111" // 	                                        NOP;                                                        LDA.SPIL r9, [sp, #-1268];    NOP /* MW 8 */
	  7063      "11100111" // /* MW 7 */
	  7064      "01100001" // /* MW 6 */
	  7065      "11100111" // /* MW 5 */
	  7066      "11000111" // /* MW 4 */
	  7067      "00000000" // /* MW 3 */
	  7068      "00000000" // /* MW 2 */
	  7069      "10000000" // /* MW 1 */
	  7070      "00000001" // 	NOP /* MW 2 */
	  7071      "00000000" // /* MW 1 */
	  7072      "00000001" // 	NOP /* MW 2 */
	  7073      "00000000" // /* MW 1 */
	  7074      "00000001" // 	NOP /* MW 2 */
	  7075      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35
.src_ref 5 "vector.hpp" 1041 35
	  7076      "00011111" // 	NOP;                NOP;                NOP;                          NOP;                          VMOV xc, xa /* MW 12 */
	  7077      "00010110" // /* MW 11 */
	  7078      "00100100" // /* MW 10 */
	  7079      "00000000" // /* MW 9 */
	  7080      "00000000" // /* MW 8 */
	  7081      "00000000" // /* MW 7 */
	  7082      "00000000" // /* MW 6 */
	  7083      "00000000" // /* MW 5 */
	  7084      "00000000" // /* MW 4 */
	  7085      "00000000" // /* MW 3 */
	  7086      "00000000" // /* MW 2 */
	  7087      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_6496
.src_ref 5 "vector.hpp" 1041 35 first
.loop_nesting 3
	  7088      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1888];   NOP /* MW 8 */
	  7089      "00000111" // /* MW 7 */
	  7090      "10100000" // /* MW 6 */
	  7091      "11111000" // /* MW 5 */
	  7092      "11100010" // /* MW 4 */
	  7093      "00000000" // /* MW 3 */
	  7094      "00000000" // /* MW 2 */
	  7095      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  7096      "00110111" // 	VLDA.UNPACK.u8 xa, [sp, #-1888];        NOP;                          NOP /* MW 8 */
	  7097      "00000000" // /* MW 7 */
	  7098      "00000000" // /* MW 6 */
	  7099      "00000000" // /* MW 5 */
	  7100      "00000000" // /* MW 4 */
	  7101      "01000000" // /* MW 3 */
	  7102      "11110001" // /* MW 2 */
	  7103      "00000100" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  7104      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-1888];   NOP /* MW 8 */
	  7105      "00000111" // /* MW 7 */
	  7106      "10100000" // /* MW 6 */
	  7107      "11111000" // /* MW 5 */
	  7108      "11101000" // /* MW 4 */
	  7109      "00000000" // /* MW 3 */
	  7110      "00000000" // /* MW 2 */
	  7111      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  7112      "00000011" // 	NOP;                VLDB.UNPACK.u8 xc, [sp, #-1888] /* MW 4 */
	  7113      "01111000" // /* MW 3 */
	  7114      "11110001" // /* MW 2 */
	  7115      "00010100" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35 first
.nohwbrkpt
.noswbrkpt
	  7116      "11110111" // 	                                        NOP;                                                        VST.SPIL wc1, [sp, #-1952];   NOP /* MW 8 */
	  7117      "00000111" // /* MW 7 */
	  7118      "01100000" // /* MW 6 */
	  7119      "11111000" // /* MW 5 */
	  7120      "11101010" // /* MW 4 */
	  7121      "00000000" // /* MW 3 */
	  7122      "00000000" // /* MW 2 */
	  7123      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1041 35
.nohwbrkpt
.noswbrkpt
	  7124      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-1920];   NOP /* MW 8 */
	  7125      "00000111" // /* MW 7 */
	  7126      "10000000" // /* MW 6 */
	  7127      "11111000" // /* MW 5 */
	  7128      "11100000" // /* MW 4 */
	  7129      "00000000" // /* MW 3 */
	  7130      "00000000" // /* MW 2 */
	  7131      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
	  7132      "00000011" // 	NOP;                VLDB.UNPACK.u8 xd, [sp, #-1952] /* MW 4 */
	  7133      "11111000" // /* MW 3 */
	  7134      "11110000" // /* MW 2 */
	  7135      "00011100" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 148 24 first
	  7136      "11110111" // 	                                        NOP;                                                        BEQZ r12,#7952;               NOP /* MW 8 */
	  7137      "00000111" // /* MW 7 */
	  7138      "11110001" // /* MW 6 */
	  7139      "10000001" // /* MW 5 */
	  7140      "10000001" // /* MW 4 */
	  7141      "00000000" // /* MW 3 */
	  7142      "00000000" // /* MW 2 */
	  7143      "10000000" // /* MW 1 */
.delay_slot
	  7144      "11110111" // 	                                        NOP;                                                        VST.SPIL wr1, [sp, #-1952];   NOP /* MW 8 */
	  7145      "00000111" // /* MW 7 */
	  7146      "01100000" // /* MW 6 */
	  7147      "11111000" // /* MW 5 */
	  7148      "11100010" // /* MW 4 */
	  7149      "00000000" // /* MW 3 */
	  7150      "00000000" // /* MW 2 */
	  7151      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23 first
.delay_slot
.noswbrkpt
	  7152      "00110111" // 	VLDA.UNPACK.u8 xa, [sp, #-1920];        NOP;                          NOP /* MW 8 */
	  7153      "00000000" // /* MW 7 */
	  7154      "00000000" // /* MW 6 */
	  7155      "00000000" // /* MW 5 */
	  7156      "00000000" // /* MW 4 */
	  7157      "00000000" // /* MW 3 */
	  7158      "11110001" // /* MW 2 */
	  7159      "00000100" // /* MW 1 */
.delay_slot
.nohwbrkpt
.noswbrkpt
	  7160      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-1888];   NOP /* MW 8 */
	  7161      "00000111" // /* MW 7 */
	  7162      "10100000" // /* MW 6 */
	  7163      "11111000" // /* MW 5 */
	  7164      "11100000" // /* MW 4 */
	  7165      "00000000" // /* MW 3 */
	  7166      "00000000" // /* MW 2 */
	  7167      "10000000" // /* MW 1 */
.delay_slot
	  7168      "11110111" // 	                                        NOP;                                                        VST.SPIL wc1, [sp, #-1984];   NOP /* MW 8 */
	  7169      "00000111" // /* MW 7 */
	  7170      "01000000" // /* MW 6 */
	  7171      "11111000" // /* MW 5 */
	  7172      "11101010" // /* MW 4 */
	  7173      "00000000" // /* MW 3 */
	  7174      "00000000" // /* MW 2 */
	  7175      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 158 28
.src_ref 3 "my_kernel_1.cpp" 165 24
.src_ref 3 "my_kernel_1.cpp" 167 24
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  7176      "00111111" // 	MOV.s10 r2, #0;     NOP;                NOP;                                                        VST.SPIL wc0, [sp, #-1920];   NOP /* MW 12 */
	  7177      "00000000" // /* MW 11 */
	  7178      "10001000" // /* MW 10 */
	  7179      "10001111" // /* MW 9 */
	  7180      "00001110" // /* MW 8 */
	  7181      "00000000" // /* MW 7 */
	  7182      "00000000" // /* MW 6 */
	  7183      "00010000" // /* MW 5 */
	  7184      "00000000" // /* MW 4 */
	  7185      "00000000" // /* MW 3 */
	  7186      "00000000" // /* MW 2 */
	  7187      "00111010" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 262 36
	  7188      "11011111" // 	VLDA wr2, [sp, #-1920];MOV.s9 r5, #-1;  NOP;                          MOV.s12 r4, #0;               MOV p3, p7 /* MW 12 */
	  7189      "11111010" // /* MW 11 */
	  7190      "00000110" // /* MW 10 */
	  7191      "00001101" // /* MW 9 */
	  7192      "00000000" // /* MW 8 */
	  7193      "00000001" // /* MW 7 */
	  7194      "00000000" // /* MW 6 */
	  7195      "11100000" // /* MW 5 */
	  7196      "11111111" // /* MW 4 */
	  7197      "00010101" // /* MW 3 */
	  7198      "11110001" // /* MW 2 */
	  7199      "00001010" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25 first
	  7200      "01110111" // 	VLDA wr3, [sp, #-1984];                 ST r4, [p3], #-8;                                           MOV p2, p0 /* MW 8 */
	  7201      "11110011" // /* MW 7 */
	  7202      "11010010" // /* MW 6 */
	  7203      "10010101" // /* MW 5 */
	  7204      "10001010" // /* MW 4 */
	  7205      "10000110" // /* MW 3 */
	  7206      "11110000" // /* MW 2 */
	  7207      "00001110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	  7208      "01110111" // 	VLDA wr0, [sp, #-1440];                 ST r4, [p3], #4;                                            MOV r3, cl4 /* MW 8 */
	  7209      "10001011" // /* MW 7 */
	  7210      "11010010" // /* MW 6 */
	  7211      "11010101" // /* MW 5 */
	  7212      "11001100" // /* MW 4 */
	  7213      "11000100" // /* MW 3 */
	  7214      "11110100" // /* MW 2 */
	  7215      "00000010" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  7216      "11110111" // 	                                        VST wr0, [sp, #-2016];        NOP;                          MOV p5, p3 /* MW 8 */
	  7217      "11011010" // /* MW 7 */
	  7218      "00110101" // /* MW 6 */
	  7219      "00000000" // /* MW 5 */
	  7220      "00000000" // /* MW 4 */
	  7221      "00010000" // /* MW 3 */
	  7222      "00111100" // /* MW 2 */
	  7223      "01110100" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.nohwbrkpt
.noswbrkpt
	  7224      "11110111" // 	                                        VST wr1, [sp, #-2048];        NOP;                          MOV p4, p1 /* MW 8 */
	  7225      "11011000" // /* MW 7 */
	  7226      "00110100" // /* MW 6 */
	  7227      "00000000" // /* MW 5 */
	  7228      "00000000" // /* MW 4 */
	  7229      "00000000" // /* MW 3 */
	  7230      "10111100" // /* MW 2 */
	  7231      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  7232      "11110111" // 	                                        ST r4, [p2], #4;                                            VLDA.SPIL wr1, [sp, #-1472];  NOP /* MW 8 */
	  7233      "00100111" // /* MW 7 */
	  7234      "01001000" // /* MW 6 */
	  7235      "10001011" // /* MW 5 */
	  7236      "11000111" // /* MW 4 */
	  7237      "01010000" // /* MW 3 */
	  7238      "10010100" // /* MW 2 */
	  7239      "10101110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  7240      "00000011" // 	NOP;                                    ST r4, [p2], #-12 /* MW 4 */
	  7241      "01010000" // /* MW 3 */
	  7242      "10010111" // /* MW 2 */
	  7243      "10101110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	  7244      "11110111" // 	                                        ST r4, [p3];                                                VLDA.SPIL wr0, [sp, #-1184];  NOP /* MW 8 */
	  7245      "00100111" // /* MW 7 */
	  7246      "01101100" // /* MW 6 */
	  7247      "10000011" // /* MW 5 */
	  7248      "11000111" // /* MW 4 */
	  7249      "00011000" // /* MW 3 */
	  7250      "10011010" // /* MW 2 */
	  7251      "10101110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7252      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1216];  NOP /* MW 8 */
	  7253      "00100111" // /* MW 7 */
	  7254      "01101000" // /* MW 6 */
	  7255      "10001011" // /* MW 5 */
	  7256      "11000111" // /* MW 4 */
	  7257      "00000000" // /* MW 3 */
	  7258      "00000000" // /* MW 2 */
	  7259      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7260      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr2, [sp, #-2016];  NOP /* MW 8 */
	  7261      "00100111" // /* MW 7 */
	  7262      "00000100" // /* MW 6 */
	  7263      "10010011" // /* MW 5 */
	  7264      "11000111" // /* MW 4 */
	  7265      "00000000" // /* MW 3 */
	  7266      "00000000" // /* MW 2 */
	  7267      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7268      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-2048];  NOP /* MW 8 */
	  7269      "00100111" // /* MW 7 */
	  7270      "00000000" // /* MW 6 */
	  7271      "10011011" // /* MW 5 */
	  7272      "11000111" // /* MW 4 */
	  7273      "00000000" // /* MW 3 */
	  7274      "00000000" // /* MW 2 */
	  7275      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7276      "00000001" // 	NOP /* MW 2 */
	  7277      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  7278      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr2, [sp, #-1888];  NOP;                                    VCMP xc, r6, ya.s16, r7, c0, r4, c0, c2 /* MW 16 */
	  7279      "00000000" // /* MW 15 */
	  7280      "00011110" // /* MW 14 */
	  7281      "00000011" // /* MW 13 */
	  7282      "10000000" // /* MW 12 */
	  7283      "01000010" // /* MW 11 */
	  7284      "00110001" // /* MW 10 */
	  7285      "01111001" // /* MW 9 */
	  7286      "00001100" // /* MW 8 */
	  7287      "00000000" // /* MW 7 */
	  7288      "00000000" // /* MW 6 */
	  7289      "00010000" // /* MW 5 */
	  7290      "00000000" // /* MW 4 */
	  7291      "00000000" // /* MW 3 */
	  7292      "00000000" // /* MW 2 */
	  7293      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.nohwbrkpt
.noswbrkpt
	  7294      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr3, [sp, #-1952];  NOP;                                    VCMP xc, r1, ya.s16, r4, c0, r7, c0, c2 /* MW 16 */
	  7295      "10000000" // /* MW 15 */
	  7296      "00010011" // /* MW 14 */
	  7297      "00000010" // /* MW 13 */
	  7298      "10000000" // /* MW 12 */
	  7299      "11000010" // /* MW 11 */
	  7300      "10110000" // /* MW 10 */
	  7301      "01111001" // /* MW 9 */
	  7302      "00001100" // /* MW 8 */
	  7303      "00000000" // /* MW 7 */
	  7304      "00000000" // /* MW 6 */
	  7305      "00010000" // /* MW 5 */
	  7306      "00000000" // /* MW 4 */
	  7307      "00000000" // /* MW 3 */
	  7308      "00000000" // /* MW 2 */
	  7309      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7310      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1568];  NOP /* MW 8 */
	  7311      "00100111" // /* MW 7 */
	  7312      "00111100" // /* MW 6 */
	  7313      "10000011" // /* MW 5 */
	  7314      "11000111" // /* MW 4 */
	  7315      "00000000" // /* MW 3 */
	  7316      "00000000" // /* MW 2 */
	  7317      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122
.nohwbrkpt
.noswbrkpt
	  7318      "00110111" // 	VLDA wr1, [sp, #-1600];                 NOP;                          OR r6, r6, r1 /* MW 8 */
	  7319      "00000000" // /* MW 7 */
	  7320      "00000000" // /* MW 6 */
	  7321      "00110000" // /* MW 5 */
	  7322      "10001011" // /* MW 4 */
	  7323      "10011010" // /* MW 3 */
	  7324      "11110011" // /* MW 2 */
	  7325      "00000110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7326      "00000001" // 	NOP /* MW 2 */
	  7327      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.nohwbrkpt
.noswbrkpt
	  7328      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr0, [sp, #-608];   NOP;                                    VCMP xc, r2, ya.s16, r4, c0, r7, c0, c2 /* MW 16 */
	  7329      "10000000" // /* MW 15 */
	  7330      "00010011" // /* MW 14 */
	  7331      "00000010" // /* MW 13 */
	  7332      "10000000" // /* MW 12 */
	  7333      "01000010" // /* MW 11 */
	  7334      "00111011" // /* MW 10 */
	  7335      "01111000" // /* MW 9 */
	  7336      "00001100" // /* MW 8 */
	  7337      "00000000" // /* MW 7 */
	  7338      "00000000" // /* MW 6 */
	  7339      "00010000" // /* MW 5 */
	  7340      "00000000" // /* MW 4 */
	  7341      "00000000" // /* MW 3 */
	  7342      "00000000" // /* MW 2 */
	  7343      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  7344      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr1, [sp, #-1344];  NOP;                                    VCMP xc, r1, ya.s16, r7, c0, r4, c0, c2 /* MW 16 */
	  7345      "00000000" // /* MW 15 */
	  7346      "00011110" // /* MW 14 */
	  7347      "00000010" // /* MW 13 */
	  7348      "10000000" // /* MW 12 */
	  7349      "10000010" // /* MW 11 */
	  7350      "10110101" // /* MW 10 */
	  7351      "01111000" // /* MW 9 */
	  7352      "00001100" // /* MW 8 */
	  7353      "00000000" // /* MW 7 */
	  7354      "00000000" // /* MW 6 */
	  7355      "00010000" // /* MW 5 */
	  7356      "00000000" // /* MW 4 */
	  7357      "00000000" // /* MW 3 */
	  7358      "00000000" // /* MW 2 */
	  7359      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7360      "00000001" // 	NOP /* MW 2 */
	  7361      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122 first
.nohwbrkpt
.noswbrkpt
	  7362      "00110111" // 	VLDA wr0, [sp, #-2016];                 NOP;                          OR r1, r2, r1 /* MW 8 */
	  7363      "00000000" // /* MW 7 */
	  7364      "00000000" // /* MW 6 */
	  7365      "00001000" // /* MW 5 */
	  7366      "10001001" // /* MW 4 */
	  7367      "01011010" // /* MW 3 */
	  7368      "11110000" // /* MW 2 */
	  7369      "00000010" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.nohwbrkpt
.noswbrkpt
	  7370      "11110111" // 	                                        ST r1, [p4], #4;                                            VLDA.SPIL wr1, [sp, #-2048];  NOP /* MW 8 */
	  7371      "00100111" // /* MW 7 */
	  7372      "00000000" // /* MW 6 */
	  7373      "10001011" // /* MW 5 */
	  7374      "11000111" // /* MW 4 */
	  7375      "01100000" // /* MW 3 */
	  7376      "00110100" // /* MW 2 */
	  7377      "10101110" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.nohwbrkpt
.noswbrkpt
	  7378      "00010011" // 	NOP;                                                                                                                                                                      VCMP xc, r2, ya.s16, r4, c0, r7, c0, c2 /* MW 4 */
	  7379      "00010001" // /* MW 3 */
	  7380      "01110000" // /* MW 2 */
	  7381      "01000010" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  7382      "01000111" // 	NOP;                                                                                                VMOV xb, xd;                                                          VCMP xc, r1, ya.s16, r7, c0, r4, c0, c2 /* MW 8 */
	  7383      "00001000" // /* MW 7 */
	  7384      "11100000" // /* MW 6 */
	  7385      "00100001" // /* MW 5 */
	  7386      "00000000" // /* MW 4 */
	  7387      "00011000" // /* MW 3 */
	  7388      "10101010" // /* MW 2 */
	  7389      "01001001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7390      "00000001" // 	NOP /* MW 2 */
	  7391      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37 first
.src_ref 5 "compare.hpp" 541 122 first
.nohwbrkpt
.noswbrkpt
	  7392      "11000111" // 	NOP;                                                                  OR r1, r2, r1;                                                                                      VCMP xc, r7, ya.s16, r4, c0, r7, c0, c2 /* MW 8 */
	  7393      "00001000" // /* MW 7 */
	  7394      "00111000" // /* MW 6 */
	  7395      "00110001" // /* MW 5 */
	  7396      "00000000" // /* MW 4 */
	  7397      "00010000" // /* MW 3 */
	  7398      "00010010" // /* MW 2 */
	  7399      "00110101" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  7400      "10000111" // 	NOP;                                    ST r1, [p4], #4;                                                                                                                  VCMP xc, r6, ya.s16, r7, c0, r4, c0, c2 /* MW 8 */
	  7401      "00001000" // /* MW 7 */
	  7402      "11100000" // /* MW 6 */
	  7403      "00110001" // /* MW 5 */
	  7404      "00000000" // /* MW 4 */
	  7405      "01100000" // /* MW 3 */
	  7406      "00110100" // /* MW 2 */
	  7407      "10101110" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.nohwbrkpt
.noswbrkpt
	  7408      "00000011" // 	NOP;                                    ST r6, [p4], #4 /* MW 4 */
	  7409      "01100000" // /* MW 3 */
	  7410      "11010100" // /* MW 2 */
	  7411      "10101110" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
	  7412      "00000011" // 	NOP;                                                                  OR r6, r6, r7 /* MW 4 */
	  7413      "01100000" // /* MW 3 */
	  7414      "01110110" // /* MW 2 */
	  7415      "00110101" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 262 36 first
	  7416      "00110111" // 	NOP;                                    ST r6, [p4], #-12;            XOR r6, r6, r5 /* MW 8 */
	  7417      "01110110" // /* MW 7 */
	  7418      "11101101" // /* MW 6 */
	  7419      "00110010" // /* MW 5 */
	  7420      "00101011" // /* MW 4 */
	  7421      "00011011" // /* MW 3 */
	  7422      "00000000" // /* MW 2 */
	  7423      "00000000" // /* MW 1 */
	  7424      "00000001" // 	NOP /* MW 2 */
	  7425      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28 first
	  7426      "00110111" // 	LDA r7, [p4], #4;                       NOP;                          NOP /* MW 8 */
	  7427      "00000000" // /* MW 7 */
	  7428      "00000000" // /* MW 6 */
	  7429      "00000000" // /* MW 5 */
	  7430      "00000000" // /* MW 4 */
	  7431      "00000000" // /* MW 3 */
	  7432      "10100011" // /* MW 2 */
	  7433      "01110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 260 28
.noswbrkpt
	  7434      "00110111" // 	LDA r1, [p4], #4;                       ST r4, [p2], #4;              NOP /* MW 8 */
	  7435      "01000101" // /* MW 7 */
	  7436      "11101001" // /* MW 6 */
	  7437      "00000010" // /* MW 5 */
	  7438      "00000000" // /* MW 4 */
	  7439      "00000000" // /* MW 3 */
	  7440      "10100011" // /* MW 2 */
	  7441      "01110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 260 28 first
.nohwbrkpt
.noswbrkpt
	  7442      "01110111" // 	LDA r2, [p4];                           ST r4, [p2];                                                MOV p4, p2 /* MW 8 */
	  7443      "01000010" // /* MW 7 */
	  7444      "11010011" // /* MW 6 */
	  7445      "00010101" // /* MW 5 */
	  7446      "10101011" // /* MW 4 */
	  7447      "00000110" // /* MW 3 */
	  7448      "11010001" // /* MW 2 */
	  7449      "01110010" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
	  7450      "01000101" // 	MOV r4, ch4 /* MW 2 */
	  7451      "00010011" // /* MW 1 */
	  7452      "00000001" // 	NOP /* MW 2 */
	  7453      "00000000" // /* MW 1 */
	  7454      "00000001" // 	NOP /* MW 2 */
	  7455      "00000000" // /* MW 1 */
	  7456      "00000001" // 	NOP /* MW 2 */
	  7457      "00000000" // /* MW 1 */
	  7458      "00000001" // 	NOP /* MW 2 */
	  7459      "00000000" // /* MW 1 */
	  7460      "00000001" // 	NOP /* MW 2 */
	  7461      "00000000" // /* MW 1 */
	  7462      "00000001" // 	NOP /* MW 2 */
	  7463      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27
	  7464      "00000011" // 	NOP;                                                                  XOR r7, r5, r7 /* MW 4 */
	  7465      "01110000" // /* MW 3 */
	  7466      "01110101" // /* MW 2 */
	  7467      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  7468      "10110111" // 	NOP;                                    ST r7, [p5];                  XOR r7, r1, r5 /* MW 8 */
	  7469      "10100010" // /* MW 7 */
	  7470      "11101111" // /* MW 6 */
	  7471      "10111010" // /* MW 5 */
	  7472      "00101000" // /* MW 4 */
	  7473      "00011011" // /* MW 3 */
	  7474      "00000000" // /* MW 2 */
	  7475      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  7476      "11110111" // 	                                        ST r7, [p3], #4;              XOR r1, r2, r5;               MOV r7, cl6 /* MW 8 */
	  7477      "01101110" // /* MW 7 */
	  7478      "00100111" // /* MW 6 */
	  7479      "01000010" // /* MW 5 */
	  7480      "11001010" // /* MW 4 */
	  7481      "10110110" // /* MW 3 */
	  7482      "11101000" // /* MW 2 */
	  7483      "01011101" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
	  7484      "00000011" // 	NOP;                                    ST r1, [p3], #-8 /* MW 4 */
	  7485      "10011000" // /* MW 3 */
	  7486      "00110111" // /* MW 2 */
	  7487      "10101110" // /* MW 1 */
	  7488      "00000001" // 	NOP /* MW 2 */
	  7489      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8 first
	  7490      "00110111" // 	LDA ch6, [p3], #4;                      NOP;                          NOP /* MW 8 */
	  7491      "00000000" // /* MW 7 */
	  7492      "00000000" // /* MW 6 */
	  7493      "00000000" // /* MW 5 */
	  7494      "00000000" // /* MW 4 */
	  7495      "11000000" // /* MW 3 */
	  7496      "10100010" // /* MW 2 */
	  7497      "01010110" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  7498      "00110111" // 	LDA r1, [p3], #4;                       NOP;                          NOP /* MW 8 */
	  7499      "00000000" // /* MW 7 */
	  7500      "00000000" // /* MW 6 */
	  7501      "00000000" // /* MW 5 */
	  7502      "00000000" // /* MW 4 */
	  7503      "11000000" // /* MW 3 */
	  7504      "10100010" // /* MW 2 */
	  7505      "01110001" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 149 32
.src_ref 6 "mask.hpp" 264 8
	  7506      "01110111" // 	LDA cl7, [p3];                                                        NOP;                          MOV p3, p6 /* MW 8 */
	  7507      "00000000" // /* MW 7 */
	  7508      "00000000" // /* MW 6 */
	  7509      "11000000" // /* MW 5 */
	  7510      "11101010" // /* MW 4 */
	  7511      "11000110" // /* MW 3 */
	  7512      "11010000" // /* MW 2 */
	  7513      "01011111" // /* MW 1 */
	  7514      "00000001" // 	NOP /* MW 2 */
	  7515      "00000000" // /* MW 1 */
	  7516      "00000001" // 	NOP /* MW 2 */
	  7517      "00000000" // /* MW 1 */
	  7518      "00000001" // 	NOP /* MW 2 */
	  7519      "00000000" // /* MW 1 */
	  7520      "00000001" // 	NOP /* MW 2 */
	  7521      "00000000" // /* MW 1 */
	  7522      "00000001" // 	NOP /* MW 2 */
	  7523      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 149 32 first
	  7524      "00000011" // 	NOP;                                    ST ch6, [p3], #4 /* MW 4 */
	  7525      "01011000" // /* MW 3 */
	  7526      "11010100" // /* MW 2 */
	  7527      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 149 32
	  7528      "00000011" // 	NOP;                                    ST r1, [p3], #4 /* MW 4 */
	  7529      "01011000" // /* MW 3 */
	  7530      "00110100" // /* MW 2 */
	  7531      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 149 32
	  7532      "00000011" // 	NOP;                                    ST cl7, [p3], #4 /* MW 4 */
	  7533      "01011000" // /* MW 3 */
	  7534      "11110100" // /* MW 2 */
	  7535      "10101011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 149 32
	  7536      "00000011" // 	NOP;                                    ST r6, [p3], #-12 /* MW 4 */
	  7537      "01011000" // /* MW 3 */
	  7538      "11010111" // /* MW 2 */
	  7539      "10101110" // /* MW 1 */
	  7540      "00000001" // 	NOP /* MW 2 */
	  7541      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38 first
	  7542      "00110111" // 	LDA r2, [p3], #4;                       NOP;                          NOP /* MW 8 */
	  7543      "00000000" // /* MW 7 */
	  7544      "00000000" // /* MW 6 */
	  7545      "00000000" // /* MW 5 */
	  7546      "00000000" // /* MW 4 */
	  7547      "11000000" // /* MW 3 */
	  7548      "10100010" // /* MW 2 */
	  7549      "01110010" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38
	  7550      "00000011" // 	NOP;                LDB r6, [p3], #4 /* MW 4 */
	  7551      "11111000" // /* MW 3 */
	  7552      "10100010" // /* MW 2 */
	  7553      "01101101" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38
	  7554      "00000011" // 	NOP;                LDB r1, [p3], #4 /* MW 4 */
	  7555      "11111000" // /* MW 3 */
	  7556      "10100010" // /* MW 2 */
	  7557      "01100011" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38
.noswbrkpt
	  7558      "00000011" // 	NOP;                LDB r6, [p3], #-12 /* MW 4 */
	  7559      "11111000" // /* MW 3 */
	  7560      "10111010" // /* MW 2 */
	  7561      "01101101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7562      "00000001" // 	NOP /* MW 2 */
	  7563      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7564      "00000001" // 	NOP /* MW 2 */
	  7565      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7566      "00000001" // 	NOP /* MW 2 */
	  7567      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7568      "00000001" // 	NOP /* MW 2 */
	  7569      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  7570      "00000011" // 	NOP;                                                                  AND r2, r2, r11 /* MW 4 */
	  7571      "00100000" // /* MW 3 */
	  7572      "10110010" // /* MW 2 */
	  7573      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  7574      "00110111" // 	NOP;                                    ST r2, [p4];                  AND r4, r4, r6 /* MW 8 */
	  7575      "10100010" // /* MW 7 */
	  7576      "11100101" // /* MW 6 */
	  7577      "00100010" // /* MW 5 */
	  7578      "00110010" // /* MW 4 */
	  7579      "00011010" // /* MW 3 */
	  7580      "00000000" // /* MW 2 */
	  7581      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36
	  7582      "00110111" // 	NOP;                                    ST r4, [p2], #4;              AND r4, r8, r1 /* MW 8 */
	  7583      "01000101" // /* MW 7 */
	  7584      "11101001" // /* MW 6 */
	  7585      "00100010" // /* MW 5 */
	  7586      "00001100" // /* MW 4 */
	  7587      "00011010" // /* MW 3 */
	  7588      "00000000" // /* MW 2 */
	  7589      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36
	  7590      "00110111" // 	NOP;                                    ST r4, [p2], #4;              AND r6, r6, r7 /* MW 8 */
	  7591      "01000101" // /* MW 7 */
	  7592      "11101001" // /* MW 6 */
	  7593      "00110010" // /* MW 5 */
	  7594      "00111011" // /* MW 4 */
	  7595      "00011010" // /* MW 3 */
	  7596      "00000000" // /* MW 2 */
	  7597      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
	  7598      "00000011" // 	NOP;                                    ST r6, [p2], #-12 /* MW 4 */
	  7599      "01010000" // /* MW 3 */
	  7600      "11010111" // /* MW 2 */
	  7601      "10101110" // /* MW 1 */
	  7602      "00000001" // 	NOP /* MW 2 */
	  7603      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8 first
	  7604      "00110111" // 	LDA ch6, [p2], #4;                      NOP;                          NOP /* MW 8 */
	  7605      "00000000" // /* MW 7 */
	  7606      "00000000" // /* MW 6 */
	  7607      "00000000" // /* MW 5 */
	  7608      "00000000" // /* MW 4 */
	  7609      "10000000" // /* MW 3 */
	  7610      "10100010" // /* MW 2 */
	  7611      "01010110" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  7612      "00110111" // 	LDA r6, [p2], #4;                       NOP;                          NOP /* MW 8 */
	  7613      "00000000" // /* MW 7 */
	  7614      "00000000" // /* MW 6 */
	  7615      "00000000" // /* MW 5 */
	  7616      "00000000" // /* MW 4 */
	  7617      "10000000" // /* MW 3 */
	  7618      "10100010" // /* MW 2 */
	  7619      "01110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  7620      "00110111" // 	LDA r7, [p2], #4;                       NOP;                          NOP /* MW 8 */
	  7621      "00000000" // /* MW 7 */
	  7622      "00000000" // /* MW 6 */
	  7623      "00000000" // /* MW 5 */
	  7624      "00000000" // /* MW 4 */
	  7625      "10000000" // /* MW 3 */
	  7626      "10100010" // /* MW 2 */
	  7627      "01110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  7628      "00110111" // 	LDA cl7, [p2];                          NOP;                          NOP /* MW 8 */
	  7629      "00000000" // /* MW 7 */
	  7630      "00000000" // /* MW 6 */
	  7631      "00000000" // /* MW 5 */
	  7632      "00000000" // /* MW 4 */
	  7633      "10000000" // /* MW 3 */
	  7634      "11010000" // /* MW 2 */
	  7635      "01011111" // /* MW 1 */
	  7636      "00000001" // 	NOP /* MW 2 */
	  7637      "00000000" // /* MW 1 */
	  7638      "00000001" // 	NOP /* MW 2 */
	  7639      "00000000" // /* MW 1 */
	  7640      "00000001" // 	NOP /* MW 2 */
	  7641      "00000000" // /* MW 1 */
	  7642      "00000001" // 	NOP /* MW 2 */
	  7643      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 150 32 first
	  7644      "00000011" // 	NOP;                                    ST ch6, [p3], #4 /* MW 4 */
	  7645      "01011000" // /* MW 3 */
	  7646      "11010100" // /* MW 2 */
	  7647      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 150 32
	  7648      "00000011" // 	NOP;                                    ST r6, [p3], #4 /* MW 4 */
	  7649      "01011000" // /* MW 3 */
	  7650      "11010100" // /* MW 2 */
	  7651      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 150 32
	  7652      "00000011" // 	NOP;                                    ST r7, [p3], #4 /* MW 4 */
	  7653      "01011000" // /* MW 3 */
	  7654      "11110100" // /* MW 2 */
	  7655      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 150 32
	  7656      "00000011" // 	NOP;                                    ST cl7, [p3], #-12 /* MW 4 */
	  7657      "01011000" // /* MW 3 */
	  7658      "11110111" // /* MW 2 */
	  7659      "10101011" // /* MW 1 */
	  7660      "00000001" // 	NOP /* MW 2 */
	  7661      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
	  7662      "00110111" // 	LDA r4, [p3], #4;                       NOP;                          NOP /* MW 8 */
	  7663      "00000000" // /* MW 7 */
	  7664      "00000000" // /* MW 6 */
	  7665      "00000000" // /* MW 5 */
	  7666      "00000000" // /* MW 4 */
	  7667      "11000000" // /* MW 3 */
	  7668      "10100010" // /* MW 2 */
	  7669      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  7670      "00000011" // 	NOP;                LDB r7, [p3], #4 /* MW 4 */
	  7671      "11111000" // /* MW 3 */
	  7672      "10100010" // /* MW 2 */
	  7673      "01101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  7674      "00000011" // 	NOP;                LDB r6, [p3], #4 /* MW 4 */
	  7675      "11111000" // /* MW 3 */
	  7676      "10100010" // /* MW 2 */
	  7677      "01101101" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  7678      "00000011" // 	NOP;                LDB r0, [p3] /* MW 4 */
	  7679      "11111000" // /* MW 3 */
	  7680      "11010000" // /* MW 2 */
	  7681      "01100001" // /* MW 1 */
	  7682      "00000001" // 	NOP /* MW 2 */
	  7683      "00000000" // /* MW 1 */
	  7684      "00000001" // 	NOP /* MW 2 */
	  7685      "00000000" // /* MW 1 */
	  7686      "00000001" // 	NOP /* MW 2 */
	  7687      "00000000" // /* MW 1 */
	  7688      "00000001" // 	NOP /* MW 2 */
	  7689      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
	  7690      "00000011" // 	NOP;                                                                  LSHL r1, r4, r5 /* MW 4 */
	  7691      "00010000" // /* MW 3 */
	  7692      "01010100" // /* MW 2 */
	  7693      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  7694      "00000011" // 	NOP;                                                                  AND r1, r1, r3 /* MW 4 */
	  7695      "00010000" // /* MW 3 */
	  7696      "00110001" // /* MW 2 */
	  7697      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  7698      "00000011" // 	NOP;                                                                  SUB r2, r4, r1 /* MW 4 */
	  7699      "00100000" // /* MW 3 */
	  7700      "00010100" // /* MW 2 */
	  7701      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  7702      "00000011" // 	NOP;                                                                  LSHL r4, r7, r5 /* MW 4 */
	  7703      "01000000" // /* MW 3 */
	  7704      "01010111" // /* MW 2 */
	  7705      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  7706      "00000011" // 	NOP;                                                                  AND r4, r4, r3 /* MW 4 */
	  7707      "01000000" // /* MW 3 */
	  7708      "00110100" // /* MW 2 */
	  7709      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
	  7710      "00000011" // 	NOP;                                                                  SUB r1, r7, r4 /* MW 4 */
	  7711      "00010000" // /* MW 3 */
	  7712      "01000111" // /* MW 2 */
	  7713      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  7714      "00000011" // 	NOP;                                                                  LSHL r7, r6, r5 /* MW 4 */
	  7715      "01110000" // /* MW 3 */
	  7716      "01010110" // /* MW 2 */
	  7717      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  7718      "00000011" // 	NOP;                                                                  LSHL r5, r0, r5 /* MW 4 */
	  7719      "01010000" // /* MW 3 */
	  7720      "01010000" // /* MW 2 */
	  7721      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  7722      "00000011" // 	NOP;                                                                  AND r7, r3, r7 /* MW 4 */
	  7723      "01110000" // /* MW 3 */
	  7724      "01110011" // /* MW 2 */
	  7725      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 100 39
	  7726      "01110111" // 	NOP;                                                                  SUB r7, r6, r7;               MOV.s8 r6, #-2 /* MW 8 */
	  7727      "11001110" // /* MW 7 */
	  7728      "00101110" // /* MW 6 */
	  7729      "10000110" // /* MW 5 */
	  7730      "11101101" // /* MW 4 */
	  7731      "00111111" // /* MW 3 */
	  7732      "00000000" // /* MW 2 */
	  7733      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  7734      "00000011" // 	NOP;                                                                  AND r5, r5, r3 /* MW 4 */
	  7735      "01010000" // /* MW 3 */
	  7736      "00110101" // /* MW 2 */
	  7737      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 45
	  7738      "01110111" // 	NOP;                                                                  SUB r5, r0, r5;               MOV r0, ch5 /* MW 8 */
	  7739      "00001010" // /* MW 7 */
	  7740      "00101010" // /* MW 6 */
	  7741      "00000110" // /* MW 5 */
	  7742      "01011100" // /* MW 4 */
	  7743      "00000100" // /* MW 3 */
	  7744      "00000000" // /* MW 2 */
	  7745      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  7746      "00000011" // 	NOP;                                                                  LSHL r3, r2, r6 /* MW 4 */
	  7747      "00110000" // /* MW 3 */
	  7748      "01100010" // /* MW 2 */
	  7749      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  7750      "00000011" // 	NOP;                                                                  AND r2, r0, r2 /* MW 4 */
	  7751      "00100000" // /* MW 3 */
	  7752      "00100000" // /* MW 2 */
	  7753      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  7754      "00000011" // 	NOP;                                                                  AND r3, r0, r3 /* MW 4 */
	  7755      "00110000" // /* MW 3 */
	  7756      "00110000" // /* MW 2 */
	  7757      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  7758      "00000011" // 	NOP;                                                                  ADD r2, r2, r3 /* MW 4 */
	  7759      "00100000" // /* MW 3 */
	  7760      "00110010" // /* MW 2 */
	  7761      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  7762      "00000011" // 	NOP;                                                                  LSHL r4, r1, r6 /* MW 4 */
	  7763      "01000000" // /* MW 3 */
	  7764      "01100001" // /* MW 2 */
	  7765      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  7766      "00000011" // 	NOP;                                                                  LSHL r3, r7, r6 /* MW 4 */
	  7767      "00110000" // /* MW 3 */
	  7768      "01100111" // /* MW 2 */
	  7769      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  7770      "00000011" // 	NOP;                                                                  AND r1, r0, r1 /* MW 4 */
	  7771      "00010000" // /* MW 3 */
	  7772      "00010000" // /* MW 2 */
	  7773      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  7774      "00000011" // 	NOP;                                                                  AND r4, r0, r4 /* MW 4 */
	  7775      "01000000" // /* MW 3 */
	  7776      "01000000" // /* MW 2 */
	  7777      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  7778      "00000011" // 	NOP;                                                                  AND r7, r0, r7 /* MW 4 */
	  7779      "01110000" // /* MW 3 */
	  7780      "01110000" // /* MW 2 */
	  7781      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  7782      "00000011" // 	NOP;                                                                  AND r3, r0, r3 /* MW 4 */
	  7783      "00110000" // /* MW 3 */
	  7784      "00110000" // /* MW 2 */
	  7785      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 25
	  7786      "01110111" // 	NOP;                                                                  ADD r1, r4, r1;               MOV.s8 r4, #-4 /* MW 8 */
	  7787      "10000010" // /* MW 7 */
	  7788      "00000010" // /* MW 6 */
	  7789      "00000110" // /* MW 5 */
	  7790      "11001101" // /* MW 4 */
	  7791      "00111111" // /* MW 3 */
	  7792      "00000000" // /* MW 2 */
	  7793      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  7794      "00000011" // 	NOP;                                                                  ADD r7, r3, r7 /* MW 4 */
	  7795      "01110000" // /* MW 3 */
	  7796      "01110011" // /* MW 2 */
	  7797      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  7798      "00000011" // 	NOP;                                                                  LSHL r3, r2, r4 /* MW 4 */
	  7799      "00110000" // /* MW 3 */
	  7800      "01000010" // /* MW 2 */
	  7801      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  7802      "00000011" // 	NOP;                                                                  ADD r2, r2, r3 /* MW 4 */
	  7803      "00100000" // /* MW 3 */
	  7804      "00110010" // /* MW 2 */
	  7805      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  7806      "00000011" // 	NOP;                                                                  LSHL r6, r5, r6 /* MW 4 */
	  7807      "01100000" // /* MW 3 */
	  7808      "01100101" // /* MW 2 */
	  7809      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  7810      "00000011" // 	NOP;                                                                  LSHL r3, r7, r4 /* MW 4 */
	  7811      "00110000" // /* MW 3 */
	  7812      "01000111" // /* MW 2 */
	  7813      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
	  7814      "00000011" // 	NOP;                                                                  AND r5, r0, r5 /* MW 4 */
	  7815      "01010000" // /* MW 3 */
	  7816      "01010000" // /* MW 2 */
	  7817      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  7818      "00000011" // 	NOP;                                                                  AND r6, r0, r6 /* MW 4 */
	  7819      "01100000" // /* MW 3 */
	  7820      "01100000" // /* MW 2 */
	  7821      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 31
	  7822      "01110111" // 	NOP;                                                                  ADD r5, r6, r5;               MOV r6, ch3 /* MW 8 */
	  7823      "11001010" // /* MW 7 */
	  7824      "00001010" // /* MW 6 */
	  7825      "10000110" // /* MW 5 */
	  7826      "00111101" // /* MW 4 */
	  7827      "00000100" // /* MW 3 */
	  7828      "00000000" // /* MW 2 */
	  7829      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20 first
	  7830      "00000011" // 	NOP;                                                                  ADD r7, r3, r7 /* MW 4 */
	  7831      "01110000" // /* MW 3 */
	  7832      "01110011" // /* MW 2 */
	  7833      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  7834      "00000011" // 	NOP;                                                                  LSHL r3, r1, r4 /* MW 4 */
	  7835      "00110000" // /* MW 3 */
	  7836      "01000001" // /* MW 2 */
	  7837      "00111110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 30
.src_ref 6 "mask.hpp" 101 20
	  7838      "11110111" // 	                                                                      ADD r3, r1, r3;               MOV.u20 r1, #256;             NOP /* MW 8 */
	  7839      "00000111" // /* MW 7 */
	  7840      "00010000" // /* MW 6 */
	  7841      "11000100" // /* MW 5 */
	  7842      "01000000" // /* MW 4 */
	  7843      "00110000" // /* MW 3 */
	  7844      "00110001" // /* MW 2 */
	  7845      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  7846      "00000011" // 	NOP;                                                                  LSHL r4, r5, r4 /* MW 4 */
	  7847      "01000000" // /* MW 3 */
	  7848      "01000101" // /* MW 2 */
	  7849      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  7850      "00000011" // 	NOP;                                                                  AND r0, r2, r6 /* MW 4 */
	  7851      "00000000" // /* MW 3 */
	  7852      "01100010" // /* MW 2 */
	  7853      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 101 44
	  7854      "01110111" // 	NOP;                                                                  AND r2, r6, r7;               MOV r7, cl3 /* MW 8 */
	  7855      "11000100" // /* MW 7 */
	  7856      "10001110" // /* MW 6 */
	  7857      "11000110" // /* MW 5 */
	  7858      "10111101" // /* MW 4 */
	  7859      "00000100" // /* MW 3 */
	  7860      "00000000" // /* MW 2 */
	  7861      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  7862      "00000011" // 	NOP;                                                                  MUL r0, r0, r7 /* MW 4 */
	  7863      "00000000" // /* MW 3 */
	  7864      "01110000" // /* MW 2 */
	  7865      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  7866      "00000011" // 	NOP;                                                                  AND r3, r6, r3 /* MW 4 */
	  7867      "00110000" // /* MW 3 */
	  7868      "00110110" // /* MW 2 */
	  7869      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  7870      "00000011" // 	NOP;                                                                  MUL r3, r3, r7 /* MW 4 */
	  7871      "00110000" // /* MW 3 */
	  7872      "01110011" // /* MW 2 */
	  7873      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 57
	  7874      "01110111" // 	NOP;                                                                  ADD r5, r4, r5;               MOV.s8 r4, #-24 /* MW 8 */
	  7875      "10001010" // /* MW 7 */
	  7876      "00001010" // /* MW 6 */
	  7877      "00000110" // /* MW 5 */
	  7878      "10001101" // /* MW 4 */
	  7879      "00111110" // /* MW 3 */
	  7880      "00000000" // /* MW 2 */
	  7881      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
.noswbrkpt
	  7882      "00000011" // 	NOP;                                                                  MUL r5, r2, r7 /* MW 4 */
	  7883      "01010000" // /* MW 3 */
	  7884      "01110010" // /* MW 2 */
	  7885      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
.nohwbrkpt
.noswbrkpt
	  7886      "00000011" // 	NOP;                                                                  AND r6, r6, r5 /* MW 4 */
	  7887      "01100000" // /* MW 3 */
	  7888      "01010110" // /* MW 2 */
	  7889      "00110100" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 38
.src_ref 3 "my_kernel_1.cpp" 178 24
.src_ref 6 "mask.hpp" 101 44
	  7890      "11110111" // 	                                                                      MUL r2, r6, r7;               MOV.u20 r6, #1001;            NOP /* MW 8 */
	  7891      "10010111" // /* MW 7 */
	  7892      "00111110" // /* MW 6 */
	  7893      "11011000" // /* MW 5 */
	  7894      "01000000" // /* MW 4 */
	  7895      "00100000" // /* MW 3 */
	  7896      "01110110" // /* MW 2 */
	  7897      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  7898      "00000011" // 	NOP;                                                                  LSHL r7, r0, r4 /* MW 4 */
	  7899      "01110000" // /* MW 3 */
	  7900      "01000000" // /* MW 2 */
	  7901      "00111110" // /* MW 1 */
	  7902      "00000001" // 	NOP /* MW 2 */
	  7903      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  7904      "00000011" // 	NOP;                                                                  LSHL r3, r3, r4 /* MW 4 */
	  7905      "00110000" // /* MW 3 */
	  7906      "01000011" // /* MW 2 */
	  7907      "00111110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 178 24
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 6 "mask.hpp" 371 18 first
	  7908      "00111111" // 	NOP;                MOV.s9 r7, #32;                                   ADD r0, r3, r7;               MOV.u20 r3, #1000;            NOP /* MW 12 */
	  7909      "11101000" // /* MW 11 */
	  7910      "11000011" // /* MW 10 */
	  7911      "00001100" // /* MW 9 */
	  7912      "00000100" // /* MW 8 */
	  7913      "01100000" // /* MW 7 */
	  7914      "00001110" // /* MW 6 */
	  7915      "00000110" // /* MW 5 */
	  7916      "11000100" // /* MW 4 */
	  7917      "00010111" // /* MW 3 */
	  7918      "00000000" // /* MW 2 */
	  7919      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57 first
	  7920      "00000011" // 	NOP;                                                                  LSHL r5, r5, r4 /* MW 4 */
	  7921      "01010000" // /* MW 3 */
	  7922      "01000101" // /* MW 2 */
	  7923      "00111110" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 6 "mask.hpp" 101 57
.src_ref 6 "mask.hpp" 130 25
	  7924      "01110111" // 	NOP;                                                                  LSHL r2, r2, r4;              MOV.s8 r4, #0 /* MW 8 */
	  7925      "01000100" // /* MW 7 */
	  7926      "11001000" // /* MW 6 */
	  7927      "00000111" // /* MW 5 */
	  7928      "00001101" // /* MW 4 */
	  7929      "00110000" // /* MW 3 */
	  7930      "00000000" // /* MW 2 */
	  7931      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  7932      "00000011" // 	NOP;                                                                  ADD r5, r0, r5 /* MW 4 */
	  7933      "01010000" // /* MW 3 */
	  7934      "01010000" // /* MW 2 */
	  7935      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18
	  7936      "00000010" // 	NOP;                NOP;                NOP;                          ADD r2, r2, r5;               NOP;                          NOP;                                    NOP /* MW 16 */
	  7937      "00000000" // /* MW 15 */
	  7938      "00000000" // /* MW 14 */
	  7939      "00010000" // /* MW 13 */
	  7940      "00101001" // /* MW 12 */
	  7941      "00011000" // /* MW 11 */
	  7942      "00000000" // /* MW 10 */
	  7943      "00000000" // /* MW 9 */
	  7944      "00000000" // /* MW 8 */
	  7945      "00000000" // /* MW 7 */
	  7946      "00000000" // /* MW 6 */
	  7947      "00000000" // /* MW 5 */
	  7948      "00000000" // /* MW 4 */
	  7949      "00000000" // /* MW 3 */
	  7950      "00000000" // /* MW 2 */
	  7951      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_7360
.src_ref 3 "my_kernel_1.cpp" 155 24 first
	  7952      "11110111" // 	                                        NOP;                                                        BEQZ r13,#8768;               NOP /* MW 8 */
	  7953      "00000111" // /* MW 7 */
	  7954      "00100100" // /* MW 6 */
	  7955      "10100010" // /* MW 5 */
	  7956      "10000001" // /* MW 4 */
	  7957      "00000000" // /* MW 3 */
	  7958      "00000000" // /* MW 2 */
	  7959      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  7960      "00000001" // 	NOP /* MW 2 */
	  7961      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  7962      "00000001" // 	NOP /* MW 2 */
	  7963      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  7964      "00000001" // 	NOP /* MW 2 */
	  7965      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  7966      "00000001" // 	NOP /* MW 2 */
	  7967      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  7968      "00000001" // 	NOP /* MW 2 */
	  7969      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	  7970      "01110111" // 	VLDA wr1, [sp, #-1152];                                               MOV.s12 r5, #0;               MOV p3, cb1 /* MW 8 */
	  7971      "01101010" // /* MW 7 */
	  7972      "00000000" // /* MW 6 */
	  7973      "11001000" // /* MW 5 */
	  7974      "00011010" // /* MW 4 */
	  7975      "00000101" // /* MW 3 */
	  7976      "11110111" // /* MW 2 */
	  7977      "00000110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  7978      "11110111" // 	                                        VST wr1, [sp, #-2048];        NOP;                          MOV p2, cb0 /* MW 8 */
	  7979      "01010100" // /* MW 7 */
	  7980      "00101000" // /* MW 6 */
	  7981      "00000000" // /* MW 5 */
	  7982      "00000000" // /* MW 4 */
	  7983      "00000000" // /* MW 3 */
	  7984      "10111100" // /* MW 2 */
	  7985      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.noswbrkpt
	  7986      "11110111" // 	                                        ST r5, [p3], #-8;                                           VLDA.SPIL wr0, [sp, #-1056];  NOP /* MW 8 */
	  7987      "00100111" // /* MW 7 */
	  7988      "01111100" // /* MW 6 */
	  7989      "10000011" // /* MW 5 */
	  7990      "11000111" // /* MW 4 */
	  7991      "10011000" // /* MW 3 */
	  7992      "10110111" // /* MW 2 */
	  7993      "10101110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  7994      "11110111" // 	                                        NOP;                                                        VST.SPIL wr0, [sp, #-2016];   NOP /* MW 8 */
	  7995      "00000111" // /* MW 7 */
	  7996      "00100000" // /* MW 6 */
	  7997      "11111000" // /* MW 5 */
	  7998      "11100000" // /* MW 4 */
	  7999      "00000000" // /* MW 3 */
	  8000      "00000000" // /* MW 2 */
	  8001      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.src_ref 6 "mask.hpp" 260 25
	  8002      "01110111" // 	VLDA wr3, [sp, #-1984];                 ST r5, [p2], #4;                                            MOV p4, p3 /* MW 8 */
	  8003      "10001010" // /* MW 7 */
	  8004      "11010110" // /* MW 6 */
	  8005      "00010101" // /* MW 5 */
	  8006      "10111011" // /* MW 4 */
	  8007      "10000110" // /* MW 3 */
	  8008      "11110000" // /* MW 2 */
	  8009      "00001110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
	  8010      "11110111" // 	                                        ST r5, [p3], #4;                                            VLDA.SPIL wr2, [sp, #-1920];  NOP /* MW 8 */
	  8011      "00100111" // /* MW 7 */
	  8012      "00010000" // /* MW 6 */
	  8013      "10010011" // /* MW 5 */
	  8014      "11000111" // /* MW 4 */
	  8015      "01011000" // /* MW 3 */
	  8016      "10110100" // /* MW 2 */
	  8017      "10101110" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.src_ref 6 "mask.hpp" 130 25
	  8018      "11110111" // 	                                        ST r5, [p3];                                                LDA.SPIL p5, [sp, #-48];      NOP /* MW 8 */
	  8019      "01100111" // /* MW 7 */
	  8020      "11111010" // /* MW 6 */
	  8021      "10110111" // /* MW 5 */
	  8022      "11000111" // /* MW 4 */
	  8023      "00011000" // /* MW 3 */
	  8024      "10111010" // /* MW 2 */
	  8025      "10101110" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25
.noswbrkpt
	  8026      "11110111" // 	                                        ST r5, [p2], #-12;                                          VLDA.SPIL wr3, [sp, #-2048];  NOP /* MW 8 */
	  8027      "00100111" // /* MW 7 */
	  8028      "00000000" // /* MW 6 */
	  8029      "10011011" // /* MW 5 */
	  8030      "11000111" // /* MW 4 */
	  8031      "01010000" // /* MW 3 */
	  8032      "10110111" // /* MW 2 */
	  8033      "10101110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8034      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr2, [sp, #-2016];  NOP /* MW 8 */
	  8035      "00100111" // /* MW 7 */
	  8036      "00000100" // /* MW 6 */
	  8037      "10010011" // /* MW 5 */
	  8038      "11000111" // /* MW 4 */
	  8039      "00000000" // /* MW 3 */
	  8040      "00000000" // /* MW 2 */
	  8041      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8042      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1312];  NOP /* MW 8 */
	  8043      "00100111" // /* MW 7 */
	  8044      "01011100" // /* MW 6 */
	  8045      "10001011" // /* MW 5 */
	  8046      "11000111" // /* MW 4 */
	  8047      "00000000" // /* MW 3 */
	  8048      "00000000" // /* MW 2 */
	  8049      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8050      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1248];  NOP /* MW 8 */
	  8051      "00100111" // /* MW 7 */
	  8052      "01100100" // /* MW 6 */
	  8053      "10000011" // /* MW 5 */
	  8054      "11000111" // /* MW 4 */
	  8055      "00000000" // /* MW 3 */
	  8056      "00000000" // /* MW 2 */
	  8057      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8058      "00000001" // 	NOP /* MW 2 */
	  8059      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  8060      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr1, [sp, #-1536];  NOP;                                    VCMP xc, r6, ya.s16, r7, c0, r5, c0, c2 /* MW 16 */
	  8061      "10000000" // /* MW 15 */
	  8062      "00011110" // /* MW 14 */
	  8063      "00000011" // /* MW 13 */
	  8064      "10000000" // /* MW 12 */
	  8065      "00000010" // /* MW 11 */
	  8066      "10110100" // /* MW 10 */
	  8067      "01111000" // /* MW 9 */
	  8068      "00001100" // /* MW 8 */
	  8069      "00000000" // /* MW 7 */
	  8070      "00000000" // /* MW 6 */
	  8071      "00010000" // /* MW 5 */
	  8072      "00000000" // /* MW 4 */
	  8073      "00000000" // /* MW 3 */
	  8074      "00000000" // /* MW 2 */
	  8075      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.nohwbrkpt
.noswbrkpt
	  8076      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr0, [sp, #-1504];  NOP;                                    VCMP xc, r1, ya.s16, r4, c0, r7, c0, c2 /* MW 16 */
	  8077      "10000000" // /* MW 15 */
	  8078      "00010011" // /* MW 14 */
	  8079      "00000010" // /* MW 13 */
	  8080      "10000000" // /* MW 12 */
	  8081      "01000010" // /* MW 11 */
	  8082      "00110100" // /* MW 10 */
	  8083      "01111000" // /* MW 9 */
	  8084      "00001100" // /* MW 8 */
	  8085      "00000000" // /* MW 7 */
	  8086      "00000000" // /* MW 6 */
	  8087      "00010000" // /* MW 5 */
	  8088      "00000000" // /* MW 4 */
	  8089      "00000000" // /* MW 3 */
	  8090      "00000000" // /* MW 2 */
	  8091      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8092      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-1952];  NOP /* MW 8 */
	  8093      "00100111" // /* MW 7 */
	  8094      "00001100" // /* MW 6 */
	  8095      "10011011" // /* MW 5 */
	  8096      "11000111" // /* MW 4 */
	  8097      "00000000" // /* MW 3 */
	  8098      "00000000" // /* MW 2 */
	  8099      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122
.nohwbrkpt
.noswbrkpt
	  8100      "00110111" // 	VLDA wr2, [sp, #-1888];                 NOP;                          OR r1, r6, r1 /* MW 8 */
	  8101      "00000000" // /* MW 7 */
	  8102      "00000000" // /* MW 6 */
	  8103      "00001000" // /* MW 5 */
	  8104      "10001011" // /* MW 4 */
	  8105      "01011010" // /* MW 3 */
	  8106      "11110001" // /* MW 2 */
	  8107      "00001010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8108      "00000001" // 	NOP /* MW 2 */
	  8109      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 538 37 first
.nohwbrkpt
.noswbrkpt
	  8110      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr1, [sp, #-1408];  NOP;                                    VCMP xc, r6, ya.s16, r7, c0, r5, c0, c2 /* MW 16 */
	  8111      "10000000" // /* MW 15 */
	  8112      "00011110" // /* MW 14 */
	  8113      "00000011" // /* MW 13 */
	  8114      "10000000" // /* MW 12 */
	  8115      "00000010" // /* MW 11 */
	  8116      "10110101" // /* MW 10 */
	  8117      "01111000" // /* MW 9 */
	  8118      "00001100" // /* MW 8 */
	  8119      "00000000" // /* MW 7 */
	  8120      "00000000" // /* MW 6 */
	  8121      "00010000" // /* MW 5 */
	  8122      "00000000" // /* MW 4 */
	  8123      "00000000" // /* MW 3 */
	  8124      "00000000" // /* MW 2 */
	  8125      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 537 37 first
.nohwbrkpt
.noswbrkpt
	  8126      "10001100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr0, [sp, #-1376];  NOP;                                    VCMP xc, r3, ya.s16, r4, c0, r7, c0, c2 /* MW 16 */
	  8127      "10000000" // /* MW 15 */
	  8128      "00010011" // /* MW 14 */
	  8129      "00000010" // /* MW 13 */
	  8130      "10000000" // /* MW 12 */
	  8131      "01000010" // /* MW 11 */
	  8132      "00110101" // /* MW 10 */
	  8133      "01111000" // /* MW 9 */
	  8134      "00001100" // /* MW 8 */
	  8135      "00000000" // /* MW 7 */
	  8136      "00000000" // /* MW 6 */
	  8137      "00010000" // /* MW 5 */
	  8138      "00000000" // /* MW 4 */
	  8139      "00000000" // /* MW 3 */
	  8140      "00000000" // /* MW 2 */
	  8141      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8142      "00000001" // 	NOP /* MW 2 */
	  8143      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 122
.nohwbrkpt
.noswbrkpt
	  8144      "00110111" // 	VLDA wr1, [sp, #-2048];                 NOP;                          OR r6, r6, r3 /* MW 8 */
	  8145      "00000000" // /* MW 7 */
	  8146      "00000000" // /* MW 6 */
	  8147      "00110000" // /* MW 5 */
	  8148      "10011011" // /* MW 4 */
	  8149      "00011010" // /* MW 3 */
	  8150      "11110000" // /* MW 2 */
	  8151      "00000110" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.nohwbrkpt
.noswbrkpt
	  8152      "11110111" // 	                                        ST r6, [p5], #4;                                            VLDA.SPIL wr0, [sp, #-2016];  NOP /* MW 8 */
	  8153      "00100111" // /* MW 7 */
	  8154      "00000100" // /* MW 6 */
	  8155      "10000011" // /* MW 5 */
	  8156      "11000111" // /* MW 4 */
	  8157      "01101000" // /* MW 3 */
	  8158      "11010100" // /* MW 2 */
	  8159      "10101110" // /* MW 1 */
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  8160      "00010011" // 	NOP;                                                                                                                                                                      VCMP xc, r6, ya.s16, r7, c0, r5, c0, c2 /* MW 4 */
	  8161      "00010001" // /* MW 3 */
	  8162      "11010000" // /* MW 2 */
	  8163      "01100011" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37 first
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37 first
.src_ref 5 "compare.hpp" 542 37
.nohwbrkpt
.noswbrkpt
	  8164      "11000111" // 	NOP;                                                                                                VMOV xb, xd;                                                          VCMP xc, r3, ya.s16, r4, c0, r7, c0, c2 /* MW 8 */
	  8165      "00001000" // /* MW 7 */
	  8166      "00111000" // /* MW 6 */
	  8167      "00100001" // /* MW 5 */
	  8168      "00000000" // /* MW 4 */
	  8169      "00011000" // /* MW 3 */
	  8170      "10101010" // /* MW 2 */
	  8171      "01001001" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  8172      "11110111" // 	                                        NOP;                                                        LDA.SPIL r7, [sp, #-1272];    NOP /* MW 8 */
	  8173      "01100111" // /* MW 7 */
	  8174      "01100001" // /* MW 6 */
	  8175      "11011111" // /* MW 5 */
	  8176      "11000111" // /* MW 4 */
	  8177      "00000000" // /* MW 3 */
	  8178      "00000000" // /* MW 2 */
	  8179      "10000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 540 30 first
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 122
.src_ref 6 "mask.hpp" 99 24
.src_ref 6 "mask.hpp" 260 27
.src_ref 6 "mask.hpp" 262 36
.nohwbrkpt
.noswbrkpt
	  8180      "01101111" // 	NOP;NOP;                                                              OR r3, r6, r3;                MOV.s8 r6, #-1;                                                       VCMP xc, r7, ya.s16, r4, c0, r7, c0, c2 /* MW 12 */
	  8181      "00000100" // /* MW 11 */
	  8182      "10011100" // /* MW 10 */
	  8183      "00011000" // /* MW 9 */
	  8184      "00000000" // /* MW 8 */
	  8185      "10110000" // /* MW 7 */
	  8186      "11111111" // /* MW 6 */
	  8187      "00011111" // /* MW 5 */
	  8188      "10011011" // /* MW 4 */
	  8189      "00011010" // /* MW 3 */
	  8190      "00000000" // /* MW 2 */
	  8191      "00000000" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 5 "compare.hpp" 538 37 first
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 542 37 first
.nohwbrkpt
.noswbrkpt
	  8192      "01000111" // 	NOP;                                    ST r3, [p5], #4;                                                                                                                  VCMP xc, r1, ya.s16, r7, c0, r5, c0, c2 /* MW 8 */
	  8193      "00001000" // /* MW 7 */
	  8194      "11101000" // /* MW 6 */
	  8195      "00100001" // /* MW 5 */
	  8196      "00000000" // /* MW 4 */
	  8197      "01101000" // /* MW 3 */
	  8198      "01110100" // /* MW 2 */
	  8199      "10101110" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12
.nohwbrkpt
.noswbrkpt
	  8200      "00000011" // 	NOP;                                    ST r1, [p5], #4 /* MW 4 */
	  8201      "01101000" // /* MW 3 */
	  8202      "00110100" // /* MW 2 */
	  8203      "10101110" // /* MW 1 */
.src_ref 5 "compare.hpp" 541 122 first
.nohwbrkpt
.noswbrkpt
	  8204      "00000011" // 	NOP;                                                                  OR r7, r1, r7 /* MW 4 */
	  8205      "01110000" // /* MW 3 */
	  8206      "01110001" // /* MW 2 */
	  8207      "00110101" // /* MW 1 */
.src_ref 7 "aie.hpp" 1614 12 first
.src_ref 6 "mask.hpp" 262 36 first
.nohwbrkpt
.noswbrkpt
	  8208      "10110111" // 	NOP;                                    ST r7, [p5], #-12;            XOR r1, r6, r7 /* MW 8 */
	  8209      "01110110" // /* MW 7 */
	  8210      "11101111" // /* MW 6 */
	  8211      "00001010" // /* MW 5 */
	  8212      "00111011" // /* MW 4 */
	  8213      "00011011" // /* MW 3 */
	  8214      "00000000" // /* MW 2 */
	  8215      "00000000" // /* MW 1 */
	  8216      "00000001" // 	NOP /* MW 2 */
	  8217      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28 first
	  8218      "00110111" // 	LDA r0, [p5], #4;                       NOP;                          NOP /* MW 8 */
	  8219      "00000000" // /* MW 7 */
	  8220      "00000000" // /* MW 6 */
	  8221      "00000000" // /* MW 5 */
	  8222      "00000000" // /* MW 4 */
	  8223      "01000000" // /* MW 3 */
	  8224      "10100011" // /* MW 2 */
	  8225      "01110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 28
	  8226      "00000011" // 	NOP;                LDB r3, [p5], #4 /* MW 4 */
	  8227      "01111000" // /* MW 3 */
	  8228      "10100011" // /* MW 2 */
	  8229      "01100111" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.noswbrkpt
	  8230      "11110111" // 	                                        NOP;                                                        LDA.SPIL r4, [sp, #-1276];    NOP /* MW 8 */
	  8231      "11100111" // /* MW 7 */
	  8232      "01100000" // /* MW 6 */
	  8233      "11010011" // /* MW 5 */
	  8234      "11000111" // /* MW 4 */
	  8235      "00000000" // /* MW 3 */
	  8236      "00000000" // /* MW 2 */
	  8237      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 130 25 first
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 260 28
.nohwbrkpt
.noswbrkpt
	  8238      "01110111" // 	LDA r5, [p5];                           ST r5, [p2], #4;                                            MOV p5, p2 /* MW 8 */
	  8239      "10001010" // /* MW 7 */
	  8240      "11010110" // /* MW 6 */
	  8241      "01010101" // /* MW 5 */
	  8242      "10101011" // /* MW 4 */
	  8243      "01000110" // /* MW 3 */
	  8244      "11010001" // /* MW 2 */
	  8245      "01110101" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 156 32
.src_ref 6 "mask.hpp" 130 25
.nohwbrkpt
.noswbrkpt
	  8246      "11110111" // 	                                        ST r4, [p2];                                                LDA.SPIL p4, [sp, #-520];     NOP /* MW 8 */
	  8247      "01100111" // /* MW 7 */
	  8248      "10111111" // /* MW 6 */
	  8249      "10110011" // /* MW 5 */
	  8250      "11000111" // /* MW 4 */
	  8251      "00010000" // /* MW 3 */
	  8252      "10011010" // /* MW 2 */
	  8253      "10101110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8254      "00000001" // 	NOP /* MW 2 */
	  8255      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8256      "00000001" // 	NOP /* MW 2 */
	  8257      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8258      "00000001" // 	NOP /* MW 2 */
	  8259      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27 first
.nohwbrkpt
.noswbrkpt
	  8260      "00000011" // 	NOP;                                                                  XOR r4, r0, r6 /* MW 4 */
	  8261      "01000000" // /* MW 3 */
	  8262      "01100000" // /* MW 2 */
	  8263      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.nohwbrkpt
.noswbrkpt
	  8264      "00000011" // 	NOP;                                    ST r4, [p4] /* MW 4 */
	  8265      "00100000" // /* MW 3 */
	  8266      "10011010" // /* MW 2 */
	  8267      "10101110" // /* MW 1 */
	  8268      "00000001" // 	NOP /* MW 2 */
	  8269      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 27
	  8270      "00000011" // 	NOP;                                                                  XOR r3, r6, r3 /* MW 4 */
	  8271      "00110000" // /* MW 3 */
	  8272      "00110110" // /* MW 2 */
	  8273      "00110110" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
.src_ref 6 "mask.hpp" 260 27
	  8274      "10110111" // 	NOP;                                    ST r3, [p3], #4;              XOR r3, r6, r5 /* MW 8 */
	  8275      "01000101" // /* MW 7 */
	  8276      "11100111" // /* MW 6 */
	  8277      "00011010" // /* MW 5 */
	  8278      "00101011" // /* MW 4 */
	  8279      "00011011" // /* MW 3 */
	  8280      "00000000" // /* MW 2 */
	  8281      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 260 25
	  8282      "00000011" // 	NOP;                                    ST r3, [p3], #-8 /* MW 4 */
	  8283      "10011000" // /* MW 3 */
	  8284      "01110111" // /* MW 2 */
	  8285      "10101110" // /* MW 1 */
	  8286      "00000001" // 	NOP /* MW 2 */
	  8287      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8 first
	  8288      "00110111" // 	LDA ch6, [p3], #4;                      NOP;                          NOP /* MW 8 */
	  8289      "00000000" // /* MW 7 */
	  8290      "00000000" // /* MW 6 */
	  8291      "00000000" // /* MW 5 */
	  8292      "00000000" // /* MW 4 */
	  8293      "11000000" // /* MW 3 */
	  8294      "10100010" // /* MW 2 */
	  8295      "01010110" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  8296      "00110111" // 	LDA r3, [p3], #4;                       NOP;                          NOP /* MW 8 */
	  8297      "00000000" // /* MW 7 */
	  8298      "00000000" // /* MW 6 */
	  8299      "00000000" // /* MW 5 */
	  8300      "00000000" // /* MW 4 */
	  8301      "11000000" // /* MW 3 */
	  8302      "10100010" // /* MW 2 */
	  8303      "01110011" // /* MW 1 */
.src_ref 6 "mask.hpp" 264 8
	  8304      "00110111" // 	LDA cl7, [p3];                          NOP;                          NOP /* MW 8 */
	  8305      "00000000" // /* MW 7 */
	  8306      "00000000" // /* MW 6 */
	  8307      "00000000" // /* MW 5 */
	  8308      "00000000" // /* MW 4 */
	  8309      "11000000" // /* MW 3 */
	  8310      "11010000" // /* MW 2 */
	  8311      "01011111" // /* MW 1 */
	  8312      "00000001" // 	NOP /* MW 2 */
	  8313      "00000000" // /* MW 1 */
	  8314      "00000001" // 	NOP /* MW 2 */
	  8315      "00000000" // /* MW 1 */
	  8316      "00000001" // 	NOP /* MW 2 */
	  8317      "00000000" // /* MW 1 */
	  8318      "00000001" // 	NOP /* MW 2 */
	  8319      "00000000" // /* MW 1 */
	  8320      "00000001" // 	NOP /* MW 2 */
	  8321      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 156 32 first
	  8322      "00000011" // 	NOP;                                    ST ch6, [p4], #4 /* MW 4 */
	  8323      "01100000" // /* MW 3 */
	  8324      "11010100" // /* MW 2 */
	  8325      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 156 32
	  8326      "00000011" // 	NOP;                                    ST r3, [p4], #4 /* MW 4 */
	  8327      "01100000" // /* MW 3 */
	  8328      "01110100" // /* MW 2 */
	  8329      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 156 32
	  8330      "00000011" // 	NOP;                                    ST cl7, [p4], #4 /* MW 4 */
	  8331      "01100000" // /* MW 3 */
	  8332      "11110100" // /* MW 2 */
	  8333      "10101011" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 156 32
	  8334      "00000011" // 	NOP;                                    ST r1, [p4], #-12 /* MW 4 */
	  8335      "01100000" // /* MW 3 */
	  8336      "00110111" // /* MW 2 */
	  8337      "10101110" // /* MW 1 */
	  8338      "00000001" // 	NOP /* MW 2 */
	  8339      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38 first
	  8340      "00110111" // 	LDA r3, [p4], #4;                       NOP;                          NOP /* MW 8 */
	  8341      "00000000" // /* MW 7 */
	  8342      "00000000" // /* MW 6 */
	  8343      "00000000" // /* MW 5 */
	  8344      "00000000" // /* MW 4 */
	  8345      "00000000" // /* MW 3 */
	  8346      "10100011" // /* MW 2 */
	  8347      "01110011" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38
	  8348      "00000011" // 	NOP;                LDB r1, [p4], #4 /* MW 4 */
	  8349      "00111000" // /* MW 3 */
	  8350      "10100011" // /* MW 2 */
	  8351      "01100011" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38
	  8352      "00000011" // 	NOP;                LDB r5, [p4], #4 /* MW 4 */
	  8353      "00111000" // /* MW 3 */
	  8354      "10100011" // /* MW 2 */
	  8355      "01101011" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.noswbrkpt
	  8356      "11110111" // 	                                        NOP;                                                        LDA.SPIL r4, [sp, #-1280];    NOP /* MW 8 */
	  8357      "01100111" // /* MW 7 */
	  8358      "01100000" // /* MW 6 */
	  8359      "11010011" // /* MW 5 */
	  8360      "11000111" // /* MW 4 */
	  8361      "00000000" // /* MW 3 */
	  8362      "00000000" // /* MW 2 */
	  8363      "10000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 38
.nohwbrkpt
.noswbrkpt
	  8364      "00000011" // 	NOP;                LDB r7, [p4], #-12 /* MW 4 */
	  8365      "00111000" // /* MW 3 */
	  8366      "10111011" // /* MW 2 */
	  8367      "01101111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8368      "00000001" // 	NOP /* MW 2 */
	  8369      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8370      "00000001" // 	NOP /* MW 2 */
	  8371      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8372      "00000001" // 	NOP /* MW 2 */
	  8373      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 36
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  8374      "01110111" // 	NOP;                                                                  AND r3, r3, r7;               MOV r7, cl5 /* MW 8 */
	  8375      "01100110" // /* MW 7 */
	  8376      "10001110" // /* MW 6 */
	  8377      "11000110" // /* MW 5 */
	  8378      "11011101" // /* MW 4 */
	  8379      "00000100" // /* MW 3 */
	  8380      "00000000" // /* MW 2 */
	  8381      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  8382      "10110111" // 	NOP;                                    ST r3, [p5];                  AND r1, r4, r1 /* MW 8 */
	  8383      "10100010" // /* MW 7 */
	  8384      "11100111" // /* MW 6 */
	  8385      "00001010" // /* MW 5 */
	  8386      "00001010" // /* MW 4 */
	  8387      "00011010" // /* MW 3 */
	  8388      "00000000" // /* MW 2 */
	  8389      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.nohwbrkpt
.noswbrkpt
	  8390      "00000011" // 	NOP;                                    ST r1, [p2], #4 /* MW 4 */
	  8391      "01010000" // /* MW 3 */
	  8392      "00110100" // /* MW 2 */
	  8393      "10101110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.src_ref 6 "mask.hpp" 204 36
.nohwbrkpt
.noswbrkpt
	  8394      "01110111" // 	NOP;                                                                  AND r1, r5, r7;               MOV r5, cl4 /* MW 8 */
	  8395      "10100010" // /* MW 7 */
	  8396      "10001110" // /* MW 6 */
	  8397      "01000110" // /* MW 5 */
	  8398      "11001101" // /* MW 4 */
	  8399      "00000100" // /* MW 3 */
	  8400      "00000000" // /* MW 2 */
	  8401      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
.src_ref 6 "mask.hpp" 204 36
	  8402      "00110111" // 	NOP;                                    ST r1, [p2], #4;              AND r7, r4, r7 /* MW 8 */
	  8403      "01000101" // /* MW 7 */
	  8404      "11100011" // /* MW 6 */
	  8405      "00111010" // /* MW 5 */
	  8406      "00111010" // /* MW 4 */
	  8407      "00011010" // /* MW 3 */
	  8408      "00000000" // /* MW 2 */
	  8409      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 204 25
	  8410      "00000011" // 	NOP;                                    ST r7, [p2], #-12 /* MW 4 */
	  8411      "01010000" // /* MW 3 */
	  8412      "11110111" // /* MW 2 */
	  8413      "10101110" // /* MW 1 */
	  8414      "00000001" // 	NOP /* MW 2 */
	  8415      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8 first
	  8416      "00110111" // 	LDA ch6, [p2], #4;                      NOP;                          NOP /* MW 8 */
	  8417      "00000000" // /* MW 7 */
	  8418      "00000000" // /* MW 6 */
	  8419      "00000000" // /* MW 5 */
	  8420      "00000000" // /* MW 4 */
	  8421      "10000000" // /* MW 3 */
	  8422      "10100010" // /* MW 2 */
	  8423      "01010110" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  8424      "00110111" // 	LDA r7, [p2], #4;                       NOP;                          NOP /* MW 8 */
	  8425      "00000000" // /* MW 7 */
	  8426      "00000000" // /* MW 6 */
	  8427      "00000000" // /* MW 5 */
	  8428      "00000000" // /* MW 4 */
	  8429      "10000000" // /* MW 3 */
	  8430      "10100010" // /* MW 2 */
	  8431      "01110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  8432      "00110111" // 	LDA r4, [p2], #4;                       NOP;                          NOP /* MW 8 */
	  8433      "00000000" // /* MW 7 */
	  8434      "00000000" // /* MW 6 */
	  8435      "00000000" // /* MW 5 */
	  8436      "00000000" // /* MW 4 */
	  8437      "10000000" // /* MW 3 */
	  8438      "10100010" // /* MW 2 */
	  8439      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 206 8
	  8440      "00110111" // 	LDA cl7, [p2];                          NOP;                          NOP /* MW 8 */
	  8441      "00000000" // /* MW 7 */
	  8442      "00000000" // /* MW 6 */
	  8443      "00000000" // /* MW 5 */
	  8444      "00000000" // /* MW 4 */
	  8445      "10000000" // /* MW 3 */
	  8446      "11010000" // /* MW 2 */
	  8447      "01011111" // /* MW 1 */
	  8448      "00000001" // 	NOP /* MW 2 */
	  8449      "00000000" // /* MW 1 */
	  8450      "00000001" // 	NOP /* MW 2 */
	  8451      "00000000" // /* MW 1 */
	  8452      "00000001" // 	NOP /* MW 2 */
	  8453      "00000000" // /* MW 1 */
	  8454      "00000001" // 	NOP /* MW 2 */
	  8455      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 157 32 first
	  8456      "00000011" // 	NOP;                                    ST ch6, [p4], #4 /* MW 4 */
	  8457      "01100000" // /* MW 3 */
	  8458      "11010100" // /* MW 2 */
	  8459      "10101010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 157 32
	  8460      "00000011" // 	NOP;                                    ST r7, [p4], #4 /* MW 4 */
	  8461      "01100000" // /* MW 3 */
	  8462      "11110100" // /* MW 2 */
	  8463      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 157 32
	  8464      "00000011" // 	NOP;                                    ST r4, [p4], #4 /* MW 4 */
	  8465      "01100000" // /* MW 3 */
	  8466      "10010100" // /* MW 2 */
	  8467      "10101110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 157 32
	  8468      "00000011" // 	NOP;                                    ST cl7, [p4], #-12 /* MW 4 */
	  8469      "01100000" // /* MW 3 */
	  8470      "11110111" // /* MW 2 */
	  8471      "10101011" // /* MW 1 */
	  8472      "00000001" // 	NOP /* MW 2 */
	  8473      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32 first
	  8474      "00110111" // 	LDA r4, [p4], #4;                       NOP;                          NOP /* MW 8 */
	  8475      "00000000" // /* MW 7 */
	  8476      "00000000" // /* MW 6 */
	  8477      "00000000" // /* MW 5 */
	  8478      "00000000" // /* MW 4 */
	  8479      "00000000" // /* MW 3 */
	  8480      "10100011" // /* MW 2 */
	  8481      "01110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  8482      "00000011" // 	NOP;                LDB r7, [p4], #4 /* MW 4 */
	  8483      "00111000" // /* MW 3 */
	  8484      "10100011" // /* MW 2 */
	  8485      "01101111" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
	  8486      "00000011" // 	NOP;                LDB r3, [p4], #4 /* MW 4 */
	  8487      "00111000" // /* MW 3 */
	  8488      "10100011" // /* MW 2 */
	  8489      "01100111" // /* MW 1 */
	  8490      "00000001" // 	NOP /* MW 2 */
	  8491      "00000000" // /* MW 1 */
	  8492      "00000001" // 	NOP /* MW 2 */
	  8493      "00000000" // /* MW 1 */
	  8494      "00000001" // 	NOP /* MW 2 */
	  8495      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 32
.noswbrkpt
	  8496      "00000011" // 	NOP;                LDB r1, [p4] /* MW 4 */
	  8497      "00111000" // /* MW 3 */
	  8498      "11010001" // /* MW 2 */
	  8499      "01100011" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8500      "00000001" // 	NOP /* MW 2 */
	  8501      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24 first
.nohwbrkpt
.noswbrkpt
	  8502      "00000011" // 	NOP;                                                                  LSHL r1, r4, r6 /* MW 4 */
	  8503      "00010000" // /* MW 3 */
	  8504      "01100100" // /* MW 2 */
	  8505      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  8506      "00000011" // 	NOP;                                                                  AND r1, r1, r5 /* MW 4 */
	  8507      "00010000" // /* MW 3 */
	  8508      "01010001" // /* MW 2 */
	  8509      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  8510      "00000011" // 	NOP;                                                                  SUB r4, r4, r1 /* MW 4 */
	  8511      "01000000" // /* MW 3 */
	  8512      "00010100" // /* MW 2 */
	  8513      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
.nohwbrkpt
.noswbrkpt
	  8514      "00000011" // 	NOP;                                                                  LSHL r1, r7, r6 /* MW 4 */
	  8515      "00010000" // /* MW 3 */
	  8516      "01100111" // /* MW 2 */
	  8517      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
.nohwbrkpt
.noswbrkpt
	  8518      "00000011" // 	NOP;                                                                  AND r1, r1, r5 /* MW 4 */
	  8519      "00010000" // /* MW 3 */
	  8520      "01010001" // /* MW 2 */
	  8521      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.nohwbrkpt
.noswbrkpt
	  8522      "00000011" // 	NOP;                                                                  SUB r7, r7, r1 /* MW 4 */
	  8523      "01110000" // /* MW 3 */
	  8524      "00010111" // /* MW 2 */
	  8525      "00110001" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  8526      "00000011" // 	NOP;                                                                  LSHL r0, r3, r6 /* MW 4 */
	  8527      "00000000" // /* MW 3 */
	  8528      "01100011" // /* MW 2 */
	  8529      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  8530      "00000011" // 	NOP;                                                                  AND r0, r0, r5 /* MW 4 */
	  8531      "00000000" // /* MW 3 */
	  8532      "01010000" // /* MW 2 */
	  8533      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 24
	  8534      "00000011" // 	NOP;                                                                  LSHL r6, r1, r6 /* MW 4 */
	  8535      "01100000" // /* MW 3 */
	  8536      "01100001" // /* MW 2 */
	  8537      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 30
	  8538      "00000011" // 	NOP;                                                                  AND r5, r6, r5 /* MW 4 */
	  8539      "01010000" // /* MW 3 */
	  8540      "01010110" // /* MW 2 */
	  8541      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18
.src_ref 6 "mask.hpp" 100 39
	  8542      "01110111" // 	NOP;                                                                  SUB r3, r3, r0;               MOV.s8 r0, #-2 /* MW 8 */
	  8543      "01100110" // /* MW 7 */
	  8544      "00100000" // /* MW 6 */
	  8545      "00000110" // /* MW 5 */
	  8546      "11101100" // /* MW 4 */
	  8547      "00111111" // /* MW 3 */
	  8548      "00000000" // /* MW 2 */
	  8549      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39 first
	  8550      "00000011" // 	NOP;                                                                  LSHL r6, r4, r0 /* MW 4 */
	  8551      "01100000" // /* MW 3 */
	  8552      "00000100" // /* MW 2 */
	  8553      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 99 18 first
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 100 45
	  8554      "01110111" // 	NOP;                                                                  SUB r1, r1, r5;               MOV r5, ch5 /* MW 8 */
	  8555      "00100010" // /* MW 7 */
	  8556      "00101010" // /* MW 6 */
	  8557      "01000110" // /* MW 5 */
	  8558      "01011101" // /* MW 4 */
	  8559      "00000100" // /* MW 3 */
	  8560      "00000000" // /* MW 2 */
	  8561      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45 first
	  8562      "00000011" // 	NOP;                                                                  AND r6, r6, r5 /* MW 4 */
	  8563      "01100000" // /* MW 3 */
	  8564      "01010110" // /* MW 2 */
	  8565      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  8566      "00000011" // 	NOP;                                                                  AND r4, r4, r5 /* MW 4 */
	  8567      "01000000" // /* MW 3 */
	  8568      "01010100" // /* MW 2 */
	  8569      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  8570      "00000011" // 	NOP;                                                                  ADD r6, r4, r6 /* MW 4 */
	  8571      "01100000" // /* MW 3 */
	  8572      "01100100" // /* MW 2 */
	  8573      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  8574      "00000011" // 	NOP;                                                                  LSHL r4, r7, r0 /* MW 4 */
	  8575      "01000000" // /* MW 3 */
	  8576      "00000111" // /* MW 2 */
	  8577      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  8578      "00000011" // 	NOP;                                                                  AND r4, r4, r5 /* MW 4 */
	  8579      "01000000" // /* MW 3 */
	  8580      "01010100" // /* MW 2 */
	  8581      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  8582      "00000011" // 	NOP;                                                                  AND r7, r5, r7 /* MW 4 */
	  8583      "01110000" // /* MW 3 */
	  8584      "01110101" // /* MW 2 */
	  8585      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  8586      "00000011" // 	NOP;                                                                  ADD r7, r4, r7 /* MW 4 */
	  8587      "01110000" // /* MW 3 */
	  8588      "01110100" // /* MW 2 */
	  8589      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  8590      "00000011" // 	NOP;                                                                  LSHL r4, r3, r0 /* MW 4 */
	  8591      "01000000" // /* MW 3 */
	  8592      "00000011" // /* MW 2 */
	  8593      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  8594      "00000011" // 	NOP;                                                                  AND r4, r4, r5 /* MW 4 */
	  8595      "01000000" // /* MW 3 */
	  8596      "01010100" // /* MW 2 */
	  8597      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
	  8598      "00000011" // 	NOP;                                                                  AND r3, r5, r3 /* MW 4 */
	  8599      "00110000" // /* MW 3 */
	  8600      "00110101" // /* MW 2 */
	  8601      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
.src_ref 6 "mask.hpp" 101 25
	  8602      "01110111" // 	NOP;                                                                  ADD r4, r4, r3;               MOV.s8 r3, #-4 /* MW 8 */
	  8603      "10001000" // /* MW 7 */
	  8604      "00000110" // /* MW 6 */
	  8605      "11000110" // /* MW 5 */
	  8606      "11001100" // /* MW 4 */
	  8607      "00111111" // /* MW 3 */
	  8608      "00000000" // /* MW 2 */
	  8609      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 39
	  8610      "00000011" // 	NOP;                                                                  LSHL r0, r1, r0 /* MW 4 */
	  8611      "00000000" // /* MW 3 */
	  8612      "00000001" // /* MW 2 */
	  8613      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 45
	  8614      "00000011" // 	NOP;                                                                  AND r5, r0, r5 /* MW 4 */
	  8615      "01010000" // /* MW 3 */
	  8616      "01010000" // /* MW 2 */
	  8617      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  8618      "00000011" // 	NOP;                                                                  LSHL r0, r6, r3 /* MW 4 */
	  8619      "00000000" // /* MW 3 */
	  8620      "00110110" // /* MW 2 */
	  8621      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
	  8622      "00000011" // 	NOP;                                                                  ADD r6, r0, r6 /* MW 4 */
	  8623      "01100000" // /* MW 3 */
	  8624      "01100000" // /* MW 2 */
	  8625      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  8626      "00000011" // 	NOP;                                                                  LSHL r0, r4, r3 /* MW 4 */
	  8627      "00000000" // /* MW 3 */
	  8628      "00110100" // /* MW 2 */
	  8629      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19
.src_ref 6 "mask.hpp" 101 20
	  8630      "01110111" // 	NOP;                                                                  ADD r4, r0, r4;               MOV r0, ch5 /* MW 8 */
	  8631      "00001000" // /* MW 7 */
	  8632      "00001000" // /* MW 6 */
	  8633      "00000110" // /* MW 5 */
	  8634      "01011100" // /* MW 4 */
	  8635      "00000100" // /* MW 3 */
	  8636      "00000000" // /* MW 2 */
	  8637      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 19 first
.src_ref 6 "mask.hpp" 101 31
	  8638      "01110111" // 	NOP;                                                                  AND r1, r0, r1;               MOV r0, ch3 /* MW 8 */
	  8639      "00000010" // /* MW 7 */
	  8640      "10000010" // /* MW 6 */
	  8641      "00000110" // /* MW 5 */
	  8642      "00111100" // /* MW 4 */
	  8643      "00000100" // /* MW 3 */
	  8644      "00000000" // /* MW 2 */
	  8645      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 100 33
	  8646      "00000011" // 	NOP;                                                                  ADD r5, r1, r5 /* MW 4 */
	  8647      "01010000" // /* MW 3 */
	  8648      "01010001" // /* MW 2 */
	  8649      "00110000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25 first
	  8650      "00000011" // 	NOP;                                                                  LSHL r3, r7, r3 /* MW 4 */
	  8651      "00110000" // /* MW 3 */
	  8652      "00110111" // /* MW 2 */
	  8653      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 25
	  8654      "01110111" // 	NOP;                                                                  ADD r3, r3, r7;               MOV.s8 r7, #-4 /* MW 8 */
	  8655      "01100110" // /* MW 7 */
	  8656      "00001110" // /* MW 6 */
	  8657      "11000110" // /* MW 5 */
	  8658      "11001101" // /* MW 4 */
	  8659      "00111111" // /* MW 3 */
	  8660      "00000000" // /* MW 2 */
	  8661      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  8662      "00000011" // 	NOP;                                                                  AND r3, r0, r3 /* MW 4 */
	  8663      "00110000" // /* MW 3 */
	  8664      "00110000" // /* MW 2 */
	  8665      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 25
	  8666      "00000011" // 	NOP;                                                                  LSHL r7, r5, r7 /* MW 4 */
	  8667      "01110000" // /* MW 3 */
	  8668      "01110101" // /* MW 2 */
	  8669      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 20
.src_ref 6 "mask.hpp" 101 57
	  8670      "01110111" // 	NOP;                                                                  ADD r7, r5, r7;               MOV.s8 r5, #-24 /* MW 8 */
	  8671      "10101110" // /* MW 7 */
	  8672      "00001110" // /* MW 6 */
	  8673      "01000110" // /* MW 5 */
	  8674      "10001101" // /* MW 4 */
	  8675      "00111110" // /* MW 3 */
	  8676      "00000000" // /* MW 2 */
	  8677      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
	  8678      "00000011" // 	NOP;                                                                  AND r7, r0, r7 /* MW 4 */
	  8679      "01110000" // /* MW 3 */
	  8680      "01110000" // /* MW 2 */
	  8681      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
.src_ref 6 "mask.hpp" 101 44
	  8682      "01110111" // 	NOP;                                                                  AND r1, r0, r6;               MOV r6, cl3 /* MW 8 */
	  8683      "00000010" // /* MW 7 */
	  8684      "10001100" // /* MW 6 */
	  8685      "10000110" // /* MW 5 */
	  8686      "10111101" // /* MW 4 */
	  8687      "00000100" // /* MW 3 */
	  8688      "00000000" // /* MW 2 */
	  8689      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
.noswbrkpt
	  8690      "00000011" // 	NOP;                                                                  MUL r4, r6, r7 /* MW 4 */
	  8691      "01000000" // /* MW 3 */
	  8692      "01110110" // /* MW 2 */
	  8693      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 31
.nohwbrkpt
.noswbrkpt
	  8694      "00000011" // 	NOP;                                                                  AND r4, r0, r4 /* MW 4 */
	  8695      "01000000" // /* MW 3 */
	  8696      "01000000" // /* MW 2 */
	  8697      "00110100" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
.nohwbrkpt
.noswbrkpt
	  8698      "00000011" // 	NOP;                                                                  MUL r0, r4, r6 /* MW 4 */
	  8699      "00000000" // /* MW 3 */
	  8700      "01100100" // /* MW 2 */
	  8701      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  8702      "00000011" // 	NOP;                                                                  MUL r3, r6, r3 /* MW 4 */
	  8703      "00110000" // /* MW 3 */
	  8704      "00110110" // /* MW 2 */
	  8705      "00110111" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 44
	  8706      "00000011" // 	NOP;                                                                  MUL r1, r6, r1 /* MW 4 */
	  8707      "00010000" // /* MW 3 */
	  8708      "00010110" // /* MW 2 */
	  8709      "00110111" // /* MW 1 */
	  8710      "00000001" // 	NOP /* MW 2 */
	  8711      "00000000" // /* MW 1 */
	  8712      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  8713      "00000000" // /* MW 3 */
	  8714      "00000000" // /* MW 2 */
	  8715      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 178 24
.src_ref 6 "mask.hpp" 101 57
	  8716      "11110111" // 	                                                                      LSHL r7, r3, r5;              MOV.u20 r3, #1000;            NOP /* MW 8 */
	  8717      "10000111" // /* MW 7 */
	  8718      "00111110" // /* MW 6 */
	  8719      "11001100" // /* MW 5 */
	  8720      "01000000" // /* MW 4 */
	  8721      "01110000" // /* MW 3 */
	  8722      "01010011" // /* MW 2 */
	  8723      "00111110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 30
.src_ref 6 "mask.hpp" 101 57
	  8724      "11110111" // 	                                                                      LSHL r6, r1, r5;              MOV.u20 r1, #256;             NOP /* MW 8 */
	  8725      "00000111" // /* MW 7 */
	  8726      "00010000" // /* MW 6 */
	  8727      "11000100" // /* MW 5 */
	  8728      "01000000" // /* MW 4 */
	  8729      "01100000" // /* MW 3 */
	  8730      "01010001" // /* MW 2 */
	  8731      "00111110" // /* MW 1 */
.src_ref 6 "mask.hpp" 101 57
	  8732      "00000011" // 	NOP;                                                                  LSHL r0, r0, r5 /* MW 4 */
	  8733      "00000000" // /* MW 3 */
	  8734      "01010000" // /* MW 2 */
	  8735      "00111110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 38
.src_ref 3 "my_kernel_1.cpp" 178 24
.src_ref 6 "mask.hpp" 371 18 first
	  8736      "11110111" // 	                                                                      ADD r7, r6, r7;               MOV.u20 r6, #1001;            NOP /* MW 8 */
	  8737      "10010111" // /* MW 7 */
	  8738      "00111110" // /* MW 6 */
	  8739      "11011000" // /* MW 5 */
	  8740      "01000000" // /* MW 4 */
	  8741      "01110000" // /* MW 3 */
	  8742      "01110110" // /* MW 2 */
	  8743      "00110000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 6 "mask.hpp" 371 18
	  8744      "01110111" // 	NOP;                                                                  ADD r0, r0, r7;               MOV.s8 r7, #32 /* MW 8 */
	  8745      "00000000" // /* MW 7 */
	  8746      "00001110" // /* MW 6 */
	  8747      "11000110" // /* MW 5 */
	  8748      "00001101" // /* MW 4 */
	  8749      "00110010" // /* MW 3 */
	  8750      "00000000" // /* MW 2 */
	  8751      "00000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 6 "mask.hpp" 101 57 first
.src_ref 6 "mask.hpp" 130 25
	  8752      "01110111" // 	NOP;                                                                  LSHL r5, r4, r5;              MOV.s8 r4, #0 /* MW 8 */
	  8753      "10001010" // /* MW 7 */
	  8754      "11001010" // /* MW 6 */
	  8755      "00000111" // /* MW 5 */
	  8756      "00001101" // /* MW 4 */
	  8757      "00110000" // /* MW 3 */
	  8758      "00000000" // /* MW 2 */
	  8759      "00000000" // /* MW 1 */
.src_ref 6 "mask.hpp" 371 18 first
	  8760      "00000011" // 	NOP;                                                                  ADD r5, r0, r5 /* MW 4 */
	  8761      "01010000" // /* MW 3 */
	  8762      "01010000" // /* MW 2 */
	  8763      "00110000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 158 28 first
	  8764      "00000011" // 	NOP;                                                                  ADD r2, r2, r5 /* MW 4 */
	  8765      "00100000" // /* MW 3 */
	  8766      "01010010" // /* MW 2 */
	  8767      "00110000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8176
.src_ref 5 "vector.hpp" 691 23
	  8768      "11110111" // 	                                        NOP;                                                        VLDA.SPIL vrl2, [sp, #-544];  NOP /* MW 8 */
	  8769      "00100111" // /* MW 7 */
	  8770      "10111100" // /* MW 6 */
	  8771      "00010011" // /* MW 5 */
	  8772      "11001111" // /* MW 4 */
	  8773      "00000000" // /* MW 3 */
	  8774      "00000000" // /* MW 2 */
	  8775      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 167 24 first
	  8776      "11110111" // 	                                        NOP;                                                        BEQZ r2,#8832;                NOP /* MW 8 */
	  8777      "00000111" // /* MW 7 */
	  8778      "00101000" // /* MW 6 */
	  8779      "01000010" // /* MW 5 */
	  8780      "10000000" // /* MW 4 */
	  8781      "00000000" // /* MW 3 */
	  8782      "00000000" // /* MW 2 */
	  8783      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  8784      "00000001" // 	NOP /* MW 2 */
	  8785      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  8786      "00000001" // 	NOP /* MW 2 */
	  8787      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  8788      "00000001" // 	NOP /* MW 2 */
	  8789      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  8790      "00000001" // 	NOP /* MW 2 */
	  8791      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 165 24 first
.delay_slot
	  8792      "00000011" // 	NOP;                                                                  ADD r9, r2, r9 /* MW 4 */
	  8793      "10010000" // /* MW 3 */
	  8794      "10010010" // /* MW 2 */
	  8795      "00110000" // /* MW 1 */
	  8796      "11110111" // 	                                        NOP;                                                        J #8848;                      NOP /* MW 8 */
	  8797      "00000111" // /* MW 7 */
	  8798      "00101001" // /* MW 6 */
	  8799      "00000010" // /* MW 5 */
	  8800      "10100000" // /* MW 4 */
	  8801      "00000000" // /* MW 3 */
	  8802      "00000000" // /* MW 2 */
	  8803      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23 first
.delay_slot
	  8804      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[0], r10 /* MW 4 */
	  8805      "00011000" // /* MW 3 */
	  8806      "01011010" // /* MW 2 */
	  8807      "00100011" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  8808      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[1], r15 /* MW 4 */
	  8809      "00011000" // /* MW 3 */
	  8810      "11111010" // /* MW 2 */
	  8811      "00101011" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  8812      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[2], r2 /* MW 4 */
	  8813      "00011000" // /* MW 3 */
	  8814      "01011010" // /* MW 2 */
	  8815      "00110010" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8 first
.delay_slot
	  8816      "01110111" // 	NOP;                                    VST vrl2, [sp, #-544];                                                                    VMOV1 WMS.md0[10], vrl2, #0 /* MW 8 */
	  8817      "11011110" // /* MW 7 */
	  8818      "10010011" // /* MW 6 */
	  8819      "00110110" // /* MW 5 */
	  8820      "00100000" // /* MW 4 */
	  8821      "00000001" // /* MW 3 */
	  8822      "00000000" // /* MW 2 */
	  8823      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  8824      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	  8825      "00000000" // /* MW 7 */
	  8826      "00000000" // /* MW 6 */
	  8827      "00000000" // /* MW 5 */
	  8828      "00000000" // /* MW 4 */
	  8829      "00000000" // /* MW 3 */
	  8830      "00000000" // /* MW 2 */
	  8831      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8240
	  8832      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL vrl2, [sp, #-544];   NOP;                                    NOP /* MW 16 */
	  8833      "00000000" // /* MW 15 */
	  8834      "00000000" // /* MW 14 */
	  8835      "00000000" // /* MW 13 */
	  8836      "10000000" // /* MW 12 */
	  8837      "00001000" // /* MW 11 */
	  8838      "11011110" // /* MW 10 */
	  8839      "01001111" // /* MW 9 */
	  8840      "00001100" // /* MW 8 */
	  8841      "00000000" // /* MW 7 */
	  8842      "00000000" // /* MW 6 */
	  8843      "00010000" // /* MW 5 */
	  8844      "00000000" // /* MW 4 */
	  8845      "00000000" // /* MW 3 */
	  8846      "00000000" // /* MW 2 */
	  8847      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8256
.src_ref 3 "my_kernel_1.cpp" 147 38 first
	  8848      "00110111" // 	VLDA wr2, [sp, #-320];                  NOP;                          ADD r15, r15, #1 /* MW 8 */
	  8849      "00000000" // /* MW 7 */
	  8850      "00000000" // /* MW 6 */
	  8851      "11111000" // /* MW 5 */
	  8852      "00001111" // /* MW 4 */
	  8853      "10010000" // /* MW 3 */
	  8854      "11111101" // /* MW 2 */
	  8855      "00001010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 178 28 first
	  8856      "00110111" // 	VLDA wr3, [sp, #-96];                   NOP;                          EQ r0, r14, r9 /* MW 8 */
	  8857      "00000000" // /* MW 7 */
	  8858      "00000000" // /* MW 6 */
	  8859      "00000000" // /* MW 5 */
	  8860      "01001111" // /* MW 4 */
	  8861      "01011100" // /* MW 3 */
	  8862      "11111111" // /* MW 2 */
	  8863      "00001110" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 38 first
.src_ref 3 "my_kernel_1.cpp" 178 24
.noswbrkpt
	  8864      "00110111" // 	VLDA wd0, [sp, #-1920];                 NOP;                          ITE_NEZ r15, r6, r15, r0 /* MW 8 */
	  8865      "00000000" // /* MW 7 */
	  8866      "00000000" // /* MW 6 */
	  8867      "01111000" // /* MW 5 */
	  8868      "11111011" // /* MW 4 */
	  8869      "00001111" // /* MW 3 */
	  8870      "11110001" // /* MW 2 */
	  8871      "00011010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 30
.nohwbrkpt
.noswbrkpt
	  8872      "00110111" // 	VLDA wr2, [sp, #-288];                  NOP;                          LT r2, r15, r1 /* MW 8 */
	  8873      "00000000" // /* MW 7 */
	  8874      "00000000" // /* MW 6 */
	  8875      "10010000" // /* MW 5 */
	  8876      "10001111" // /* MW 4 */
	  8877      "11011101" // /* MW 3 */
	  8878      "11111101" // /* MW 2 */
	  8879      "00001010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8880      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-192];   NOP /* MW 8 */
	  8881      "00100111" // /* MW 7 */
	  8882      "11101000" // /* MW 6 */
	  8883      "10011011" // /* MW 5 */
	  8884      "11000111" // /* MW 4 */
	  8885      "00000000" // /* MW 3 */
	  8886      "00000000" // /* MW 2 */
	  8887      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8888      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1984];  NOP /* MW 8 */
	  8889      "00100111" // /* MW 7 */
	  8890      "00001000" // /* MW 6 */
	  8891      "10111011" // /* MW 5 */
	  8892      "11000111" // /* MW 4 */
	  8893      "00000000" // /* MW 3 */
	  8894      "00000000" // /* MW 2 */
	  8895      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8896      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-1888];  NOP /* MW 8 */
	  8897      "00100111" // /* MW 7 */
	  8898      "00010100" // /* MW 6 */
	  8899      "10110011" // /* MW 5 */
	  8900      "11000111" // /* MW 4 */
	  8901      "00000000" // /* MW 3 */
	  8902      "00000000" // /* MW 2 */
	  8903      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8904      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1952];  NOP /* MW 8 */
	  8905      "00100111" // /* MW 7 */
	  8906      "00001100" // /* MW 6 */
	  8907      "10111011" // /* MW 5 */
	  8908      "11000111" // /* MW 4 */
	  8909      "00000000" // /* MW 3 */
	  8910      "00000000" // /* MW 2 */
	  8911      "10000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.nohwbrkpt
.noswbrkpt
	  8912      "01010100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr2, [sp, #-320];   NOP;                                    VCMP xc, r5, yd.s16, r4, c0, r7, c0, c1 /* MW 16 */
	  8913      "10000000" // /* MW 15 */
	  8914      "00010011" // /* MW 14 */
	  8915      "00000011" // /* MW 13 */
	  8916      "10000000" // /* MW 12 */
	  8917      "10000010" // /* MW 11 */
	  8918      "00111101" // /* MW 10 */
	  8919      "01111001" // /* MW 9 */
	  8920      "00001100" // /* MW 8 */
	  8921      "00000000" // /* MW 7 */
	  8922      "00000000" // /* MW 6 */
	  8923      "00010000" // /* MW 5 */
	  8924      "00000000" // /* MW 4 */
	  8925      "00000000" // /* MW 3 */
	  8926      "00000000" // /* MW 2 */
	  8927      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8928      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-96];    NOP /* MW 8 */
	  8929      "00100111" // /* MW 7 */
	  8930      "11110100" // /* MW 6 */
	  8931      "10011011" // /* MW 5 */
	  8932      "11000111" // /* MW 4 */
	  8933      "00000000" // /* MW 3 */
	  8934      "00000000" // /* MW 2 */
	  8935      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.nohwbrkpt
.noswbrkpt
	  8936      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1920] /* MW 4 */
	  8937      "00100000" // /* MW 3 */
	  8938      "00011110" // /* MW 2 */
	  8939      "10111001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  8940      "00000001" // 	NOP /* MW 2 */
	  8941      "00000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.nohwbrkpt
.noswbrkpt
	  8942      "10010011" // 	NOP;                                                                                                                                                                      VCMP xc, r5, yd.s16, r4, c0, r7, c0, c1 /* MW 4 */
	  8943      "00001010" // /* MW 3 */
	  8944      "01110000" // /* MW 2 */
	  8945      "01100010" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.nohwbrkpt
.noswbrkpt
	  8946      "10010011" // 	NOP;                                                                                                                                                                      VCMP xc, r5, ya.s16, r4, c0, r7, c0, c1 /* MW 4 */
	  8947      "00001000" // /* MW 3 */
	  8948      "01110000" // /* MW 2 */
	  8949      "01100010" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.nohwbrkpt
.noswbrkpt
	  8950      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1888] /* MW 4 */
	  8951      "00101000" // /* MW 3 */
	  8952      "00011110" // /* MW 2 */
	  8953      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27
	  8954      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1952] /* MW 4 */
	  8955      "00011000" // /* MW 3 */
	  8956      "00011110" // /* MW 2 */
	  8957      "10111001" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
	  8958      "10010011" // 	NOP;                                                                                                                                                                      VCMP xc, r5, yd.s16, r4, c0, r7, c0, c1 /* MW 4 */
	  8959      "00001010" // /* MW 3 */
	  8960      "01110000" // /* MW 2 */
	  8961      "01100010" // /* MW 1 */
	  8962      "00000001" // 	NOP /* MW 2 */
	  8963      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
	  8964      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1984] /* MW 4 */
	  8965      "00010000" // /* MW 3 */
	  8966      "00011110" // /* MW 2 */
	  8967      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
	  8968      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1984];  NOP /* MW 8 */
	  8969      "00100111" // /* MW 7 */
	  8970      "00001000" // /* MW 6 */
	  8971      "10001011" // /* MW 5 */
	  8972      "11000111" // /* MW 4 */
	  8973      "00000000" // /* MW 3 */
	  8974      "00000000" // /* MW 2 */
	  8975      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 147 16 first
	  8976      "11110111" // 	                                        NOP;                                                        BNEZ r2,#7088;                NOP /* MW 8 */
	  8977      "00000111" // /* MW 7 */
	  8978      "10111011" // /* MW 6 */
	  8979      "01000001" // /* MW 5 */
	  8980      "10010000" // /* MW 4 */
	  8981      "00000000" // /* MW 3 */
	  8982      "00000000" // /* MW 2 */
	  8983      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19 first
.delay_slot
	  8984      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-1888];  NOP /* MW 8 */
	  8985      "00100111" // /* MW 7 */
	  8986      "00010100" // /* MW 6 */
	  8987      "10100011" // /* MW 5 */
	  8988      "11000111" // /* MW 4 */
	  8989      "00000000" // /* MW 3 */
	  8990      "00000000" // /* MW 2 */
	  8991      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  8992      "00000001" // 	NOP /* MW 2 */
	  8993      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.delay_slot
	  8994      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc1, [sp, #-1920];  NOP /* MW 8 */
	  8995      "00100111" // /* MW 7 */
	  8996      "00010000" // /* MW 6 */
	  8997      "10101011" // /* MW 5 */
	  8998      "11000111" // /* MW 4 */
	  8999      "00000000" // /* MW 3 */
	  9000      "00000000" // /* MW 2 */
	  9001      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19
.delay_slot
	  9002      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1952];  NOP /* MW 8 */
	  9003      "00100111" // /* MW 7 */
	  9004      "00001100" // /* MW 6 */
	  9005      "10000011" // /* MW 5 */
	  9006      "11000111" // /* MW 4 */
	  9007      "00000000" // /* MW 3 */
	  9008      "00000000" // /* MW 2 */
	  9009      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 178 24 first
.delay_slot
	  9010      "00000011" // 	NOP;                                                                  ITE_EQZ r10, r10, r3, r0 /* MW 4 */
	  9011      "10100000" // /* MW 3 */
	  9012      "00111010" // /* MW 2 */
	  9013      "00011110" // /* MW 1 */
.loop_nesting 2
	  9014      "11110111" // 	                                        NOP;                                                        J #9072;                      NOP /* MW 8 */
	  9015      "00000111" // /* MW 7 */
	  9016      "00110111" // /* MW 6 */
	  9017      "00000010" // /* MW 5 */
	  9018      "10100000" // /* MW 4 */
	  9019      "00000000" // /* MW 3 */
	  9020      "00000000" // /* MW 2 */
	  9021      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9022      "00000001" // 	NOP /* MW 2 */
	  9023      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9024      "00000001" // 	NOP /* MW 2 */
	  9025      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9026      "00000001" // 	NOP /* MW 2 */
	  9027      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9028      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  9029      "00000000" // /* MW 3 */
	  9030      "00000000" // /* MW 2 */
	  9031      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9032      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	  9033      "00000000" // /* MW 7 */
	  9034      "00000000" // /* MW 6 */
	  9035      "00000000" // /* MW 5 */
	  9036      "00000000" // /* MW 4 */
	  9037      "00000000" // /* MW 3 */
	  9038      "00000000" // /* MW 2 */
	  9039      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8448
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
	  9040      "00000000" // 	MOV.s10 r7, #32;    NOP;                NOP;                          NOP;                          LDA.SPIL r9, [sp, #-1268];    NOP;                                    NOP /* MW 16 */
	  9041      "00000000" // /* MW 15 */
	  9042      "00000000" // /* MW 14 */
	  9043      "00000000" // /* MW 13 */
	  9044      "10000000" // /* MW 12 */
	  9045      "00011110" // /* MW 11 */
	  9046      "01110110" // /* MW 10 */
	  9047      "01111110" // /* MW 9 */
	  9048      "00001100" // /* MW 8 */
	  9049      "00000000" // /* MW 7 */
	  9050      "00000000" // /* MW 6 */
	  9051      "00010000" // /* MW 5 */
	  9052      "00000000" // /* MW 4 */
	  9053      "00000000" // /* MW 3 */
	  9054      "00001000" // /* MW 2 */
	  9055      "00111111" // /* MW 1 */
	  9056      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL vrl2, [sp, #-128];   NOP;                                    NOP /* MW 16 */
	  9057      "00000000" // /* MW 15 */
	  9058      "00000000" // /* MW 14 */
	  9059      "00000000" // /* MW 13 */
	  9060      "10000000" // /* MW 12 */
	  9061      "00001000" // /* MW 11 */
	  9062      "11111000" // /* MW 10 */
	  9063      "01001111" // /* MW 9 */
	  9064      "00001100" // /* MW 8 */
	  9065      "00000000" // /* MW 7 */
	  9066      "00000000" // /* MW 6 */
	  9067      "00010000" // /* MW 5 */
	  9068      "00000000" // /* MW 4 */
	  9069      "00000000" // /* MW 3 */
	  9070      "00000000" // /* MW 2 */
	  9071      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8480
.src_ref 3 "my_kernel_1.cpp" 118 17
	  9072      "00110111" // 	VLDA wr2, [sp, #-320];                  NOP;                          MOV.s12 r11, #255 /* MW 8 */
	  9073      "00000000" // /* MW 7 */
	  9074      "00000000" // /* MW 6 */
	  9075      "11011000" // /* MW 5 */
	  9076      "11111111" // /* MW 4 */
	  9077      "10100001" // /* MW 3 */
	  9078      "11111101" // /* MW 2 */
	  9079      "00001010" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 118 17 first
	  9080      "00110111" // 	VLDA wr3, [sp, #-96];                   NOP;                          LT r11, r10, r11 /* MW 8 */
	  9081      "00000000" // /* MW 7 */
	  9082      "00000000" // /* MW 6 */
	  9083      "01011000" // /* MW 5 */
	  9084      "11011101" // /* MW 4 */
	  9085      "01011101" // /* MW 3 */
	  9086      "11111111" // /* MW 2 */
	  9087      "00001110" // /* MW 1 */
	  9088      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-1632];  NOP /* MW 8 */
	  9089      "00100111" // /* MW 7 */
	  9090      "00110100" // /* MW 6 */
	  9091      "10110011" // /* MW 5 */
	  9092      "11000111" // /* MW 4 */
	  9093      "00000000" // /* MW 3 */
	  9094      "00000000" // /* MW 2 */
	  9095      "10000000" // /* MW 1 */
	  9096      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1856];  NOP /* MW 8 */
	  9097      "00100111" // /* MW 7 */
	  9098      "00011000" // /* MW 6 */
	  9099      "10111011" // /* MW 5 */
	  9100      "11000111" // /* MW 4 */
	  9101      "00000000" // /* MW 3 */
	  9102      "00000000" // /* MW 2 */
	  9103      "10000000" // /* MW 1 */
	  9104      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1696];  NOP /* MW 8 */
	  9105      "00100111" // /* MW 7 */
	  9106      "00101100" // /* MW 6 */
	  9107      "10000011" // /* MW 5 */
	  9108      "11000111" // /* MW 4 */
	  9109      "00000000" // /* MW 3 */
	  9110      "00000000" // /* MW 2 */
	  9111      "10000000" // /* MW 1 */
	  9112      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1824];  NOP /* MW 8 */
	  9113      "00100111" // /* MW 7 */
	  9114      "00011100" // /* MW 6 */
	  9115      "10001011" // /* MW 5 */
	  9116      "11000111" // /* MW 4 */
	  9117      "00000000" // /* MW 3 */
	  9118      "00000000" // /* MW 2 */
	  9119      "10000000" // /* MW 1 */
.noswbrkpt
	  9120      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr2, [sp, #-288];   NOP /* MW 8 */
	  9121      "00100111" // /* MW 7 */
	  9122      "11011100" // /* MW 6 */
	  9123      "10010011" // /* MW 5 */
	  9124      "11000111" // /* MW 4 */
	  9125      "00000000" // /* MW 3 */
	  9126      "00000000" // /* MW 2 */
	  9127      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  9128      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr3, [sp, #-192];   NOP /* MW 8 */
	  9129      "00100111" // /* MW 7 */
	  9130      "11101000" // /* MW 6 */
	  9131      "10011011" // /* MW 5 */
	  9132      "11000111" // /* MW 4 */
	  9133      "00000000" // /* MW 3 */
	  9134      "00000000" // /* MW 2 */
	  9135      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  9136      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-1728];  NOP /* MW 8 */
	  9137      "00100111" // /* MW 7 */
	  9138      "00101000" // /* MW 6 */
	  9139      "10110011" // /* MW 5 */
	  9140      "11000111" // /* MW 4 */
	  9141      "00000000" // /* MW 3 */
	  9142      "00000000" // /* MW 2 */
	  9143      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  9144      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-1760];  NOP /* MW 8 */
	  9145      "00100111" // /* MW 7 */
	  9146      "00100100" // /* MW 6 */
	  9147      "10111011" // /* MW 5 */
	  9148      "11000111" // /* MW 4 */
	  9149      "00000000" // /* MW 3 */
	  9150      "00000000" // /* MW 2 */
	  9151      "10000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.nohwbrkpt
.noswbrkpt
	  9152      "01111000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wr0, [sp, #-1664];  NOP;                                    VCMP xd, r6, yd.s16, r4, c0, r7, c0, c1 /* MW 16 */
	  9153      "10000000" // /* MW 15 */
	  9154      "00010011" // /* MW 14 */
	  9155      "00000011" // /* MW 13 */
	  9156      "10000000" // /* MW 12 */
	  9157      "00000010" // /* MW 11 */
	  9158      "00110011" // /* MW 10 */
	  9159      "01111000" // /* MW 9 */
	  9160      "00001100" // /* MW 8 */
	  9161      "00000000" // /* MW 7 */
	  9162      "00000000" // /* MW 6 */
	  9163      "00010000" // /* MW 5 */
	  9164      "00000000" // /* MW 4 */
	  9165      "00000000" // /* MW 3 */
	  9166      "00000000" // /* MW 2 */
	  9167      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  9168      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1792];  NOP /* MW 8 */
	  9169      "00100111" // /* MW 7 */
	  9170      "00100000" // /* MW 6 */
	  9171      "10001011" // /* MW 5 */
	  9172      "11000111" // /* MW 4 */
	  9173      "00000000" // /* MW 3 */
	  9174      "00000000" // /* MW 2 */
	  9175      "10000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "vector.hpp" 1149 27 first
.nohwbrkpt
.noswbrkpt
	  9176      "10000111" // 	NOP;                                    VST.PACK.u8 xd, [sp, #-1632];                                                                                                     VCMP xc, r6, ya.s16, r4, c0, r7, c0, c1 /* MW 8 */
	  9177      "00000100" // /* MW 7 */
	  9178      "00111000" // /* MW 6 */
	  9179      "00110001" // /* MW 5 */
	  9180      "00000000" // /* MW 4 */
	  9181      "01101000" // /* MW 3 */
	  9182      "10011110" // /* MW 2 */
	  9183      "10111001" // /* MW 1 */
	  9184      "00000001" // 	NOP /* MW 2 */
	  9185      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27
	  9186      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1664] /* MW 4 */
	  9187      "01100000" // /* MW 3 */
	  9188      "00011110" // /* MW 2 */
	  9189      "10111001" // /* MW 1 */
	  9190      "00000001" // 	NOP /* MW 2 */
	  9191      "00000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49 first
.src_ref 5 "vector.hpp" 853 19
.noswbrkpt
	  9192      "01111000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wc1, [sp, #-1632];  NOP;                                    VCMP xd, r6, yd.s16, r4, c0, r7, c0, c1 /* MW 16 */
	  9193      "10000000" // /* MW 15 */
	  9194      "00010011" // /* MW 14 */
	  9195      "00000011" // /* MW 13 */
	  9196      "10000000" // /* MW 12 */
	  9197      "01000010" // /* MW 11 */
	  9198      "10110011" // /* MW 10 */
	  9199      "01111010" // /* MW 9 */
	  9200      "00001100" // /* MW 8 */
	  9201      "00000000" // /* MW 7 */
	  9202      "00000000" // /* MW 6 */
	  9203      "00010000" // /* MW 5 */
	  9204      "00000000" // /* MW 4 */
	  9205      "00000000" // /* MW 3 */
	  9206      "00000000" // /* MW 2 */
	  9207      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  9208      "00000001" // 	NOP /* MW 2 */
	  9209      "00000000" // /* MW 1 */
.src_ref 5 "add.hpp" 151 49
.src_ref 5 "vector.hpp" 1149 27 first
.nohwbrkpt
.noswbrkpt
	  9210      "10000111" // 	NOP;                                    VST.PACK.u8 xd, [sp, #-1632];                                                                                                     VCMP xc, r6, ya.s16, r4, c0, r7, c0, c1 /* MW 8 */
	  9211      "00000100" // /* MW 7 */
	  9212      "00111000" // /* MW 6 */
	  9213      "00110001" // /* MW 5 */
	  9214      "00000000" // /* MW 4 */
	  9215      "01101000" // /* MW 3 */
	  9216      "10011110" // /* MW 2 */
	  9217      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19 first
.nohwbrkpt
.noswbrkpt
	  9218      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-1632];  NOP /* MW 8 */
	  9219      "00100111" // /* MW 7 */
	  9220      "00110100" // /* MW 6 */
	  9221      "10000011" // /* MW 5 */
	  9222      "11000111" // /* MW 4 */
	  9223      "00000000" // /* MW 3 */
	  9224      "00000000" // /* MW 2 */
	  9225      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 118 8 first
.nohwbrkpt
.noswbrkpt
	  9226      "11110111" // 	                                        NOP;                                                        BNEZ r11,#5792;               NOP /* MW 8 */
	  9227      "00000111" // /* MW 7 */
	  9228      "01101010" // /* MW 6 */
	  9229      "01100001" // /* MW 5 */
	  9230      "10010001" // /* MW 4 */
	  9231      "00000000" // /* MW 3 */
	  9232      "00000000" // /* MW 2 */
	  9233      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.delay_slot
.nohwbrkpt
.noswbrkpt
	  9234      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-1664];  NOP /* MW 8 */
	  9235      "00100111" // /* MW 7 */
	  9236      "00110000" // /* MW 6 */
	  9237      "10001011" // /* MW 5 */
	  9238      "11000111" // /* MW 4 */
	  9239      "00000000" // /* MW 3 */
	  9240      "00000000" // /* MW 2 */
	  9241      "10000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 1149 27 first
.delay_slot
.nohwbrkpt
.noswbrkpt
	  9242      "00000011" // 	NOP;                                    VST.PACK.u8 xc, [sp, #-1664] /* MW 4 */
	  9243      "01100000" // /* MW 3 */
	  9244      "00011110" // /* MW 2 */
	  9245      "10111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 853 19
.src_ref 5 "vector.hpp" 853 19 first
.delay_slot
	  9246      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-1664];  NOP /* MW 8 */
	  9247      "00100111" // /* MW 7 */
	  9248      "00110000" // /* MW 6 */
	  9249      "10100011" // /* MW 5 */
	  9250      "11000111" // /* MW 4 */
	  9251      "00000000" // /* MW 3 */
	  9252      "00000000" // /* MW 2 */
	  9253      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9254      "00000001" // 	NOP /* MW 2 */
	  9255      "00000000" // /* MW 1 */
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 536 30
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 537 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 538 37
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 540 30
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 541 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 5 "compare.hpp" 542 37
.src_ref 6 "mask.hpp" 130 25
.delay_slot
	  9256      "00110111" // 	NOP;                                    NOP;                          MOV.s12 r2, #0 /* MW 8 */
	  9257      "00000000" // /* MW 7 */
	  9258      "00000000" // /* MW 6 */
	  9259      "10010000" // /* MW 5 */
	  9260      "00000001" // /* MW 4 */
	  9261      "00100000" // /* MW 3 */
	  9262      "00000000" // /* MW 2 */
	  9263      "00000000" // /* MW 1 */
.loop_nesting 1
	  9264      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          J #9376;                      NOP;                                    NOP /* MW 16 */
	  9265      "00000000" // /* MW 15 */
	  9266      "00000000" // /* MW 14 */
	  9267      "00000000" // /* MW 13 */
	  9268      "10000000" // /* MW 12 */
	  9269      "10100000" // /* MW 11 */
	  9270      "00100100" // /* MW 10 */
	  9271      "00000000" // /* MW 9 */
	  9272      "00001010" // /* MW 8 */
	  9273      "00000000" // /* MW 7 */
	  9274      "00000000" // /* MW 6 */
	  9275      "00010000" // /* MW 5 */
	  9276      "00000000" // /* MW 4 */
	  9277      "00000000" // /* MW 3 */
	  9278      "00000000" // /* MW 2 */
	  9279      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9280      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9281      "00000000" // /* MW 15 */
	  9282      "00000000" // /* MW 14 */
	  9283      "00000000" // /* MW 13 */
	  9284      "00000000" // /* MW 12 */
	  9285      "00000000" // /* MW 11 */
	  9286      "00000000" // /* MW 10 */
	  9287      "00000000" // /* MW 9 */
	  9288      "00000000" // /* MW 8 */
	  9289      "00000000" // /* MW 7 */
	  9290      "00000000" // /* MW 6 */
	  9291      "00000000" // /* MW 5 */
	  9292      "00000000" // /* MW 4 */
	  9293      "00000000" // /* MW 3 */
	  9294      "00000000" // /* MW 2 */
	  9295      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9296      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9297      "00000000" // /* MW 15 */
	  9298      "00000000" // /* MW 14 */
	  9299      "00000000" // /* MW 13 */
	  9300      "00000000" // /* MW 12 */
	  9301      "00000000" // /* MW 11 */
	  9302      "00000000" // /* MW 10 */
	  9303      "00000000" // /* MW 9 */
	  9304      "00000000" // /* MW 8 */
	  9305      "00000000" // /* MW 7 */
	  9306      "00000000" // /* MW 6 */
	  9307      "00000000" // /* MW 5 */
	  9308      "00000000" // /* MW 4 */
	  9309      "00000000" // /* MW 3 */
	  9310      "00000000" // /* MW 2 */
	  9311      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9312      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9313      "00000000" // /* MW 15 */
	  9314      "00000000" // /* MW 14 */
	  9315      "00000000" // /* MW 13 */
	  9316      "00000000" // /* MW 12 */
	  9317      "00000000" // /* MW 11 */
	  9318      "00000000" // /* MW 10 */
	  9319      "00000000" // /* MW 9 */
	  9320      "00000000" // /* MW 8 */
	  9321      "00000000" // /* MW 7 */
	  9322      "00000000" // /* MW 6 */
	  9323      "00000000" // /* MW 5 */
	  9324      "00000000" // /* MW 4 */
	  9325      "00000000" // /* MW 3 */
	  9326      "00000000" // /* MW 2 */
	  9327      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9328      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9329      "00000000" // /* MW 15 */
	  9330      "00000000" // /* MW 14 */
	  9331      "00000000" // /* MW 13 */
	  9332      "00000000" // /* MW 12 */
	  9333      "00000000" // /* MW 11 */
	  9334      "00000000" // /* MW 10 */
	  9335      "00000000" // /* MW 9 */
	  9336      "00000000" // /* MW 8 */
	  9337      "00000000" // /* MW 7 */
	  9338      "00000000" // /* MW 6 */
	  9339      "00000000" // /* MW 5 */
	  9340      "00000000" // /* MW 4 */
	  9341      "00000000" // /* MW 3 */
	  9342      "00000000" // /* MW 2 */
	  9343      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9344      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9345      "00000000" // /* MW 15 */
	  9346      "00000000" // /* MW 14 */
	  9347      "00000000" // /* MW 13 */
	  9348      "00000000" // /* MW 12 */
	  9349      "00000000" // /* MW 11 */
	  9350      "00000000" // /* MW 10 */
	  9351      "00000000" // /* MW 9 */
	  9352      "00000000" // /* MW 8 */
	  9353      "00000000" // /* MW 7 */
	  9354      "00000000" // /* MW 6 */
	  9355      "00000000" // /* MW 5 */
	  9356      "00000000" // /* MW 4 */
	  9357      "00000000" // /* MW 3 */
	  9358      "00000000" // /* MW 2 */
	  9359      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8768
	  9360      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL vrh2, [sp, #-544];   NOP;                                    NOP /* MW 16 */
	  9361      "00000000" // /* MW 15 */
	  9362      "00000000" // /* MW 14 */
	  9363      "00000000" // /* MW 13 */
	  9364      "10000000" // /* MW 12 */
	  9365      "00001000" // /* MW 11 */
	  9366      "11011110" // /* MW 10 */
	  9367      "01011111" // /* MW 9 */
	  9368      "00001100" // /* MW 8 */
	  9369      "00000000" // /* MW 7 */
	  9370      "00000000" // /* MW 6 */
	  9371      "00010000" // /* MW 5 */
	  9372      "00000000" // /* MW 4 */
	  9373      "00000000" // /* MW 3 */
	  9374      "00000000" // /* MW 2 */
	  9375      "00000000" // /* MW 1 */
.label TGT_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8784
.swstall builtin_control
	  9376      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9377      "00000000" // /* MW 15 */
	  9378      "00000000" // /* MW 14 */
	  9379      "00000000" // /* MW 13 */
	  9380      "00000000" // /* MW 12 */
	  9381      "00000000" // /* MW 11 */
	  9382      "00000000" // /* MW 10 */
	  9383      "00000000" // /* MW 9 */
	  9384      "00000000" // /* MW 8 */
	  9385      "00000000" // /* MW 7 */
	  9386      "00000000" // /* MW 6 */
	  9387      "00000000" // /* MW 5 */
	  9388      "00000000" // /* MW 4 */
	  9389      "00000000" // /* MW 3 */
	  9390      "00000000" // /* MW 2 */
	  9391      "00000000" // /* MW 1 */
.label ZLE_F_Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE_8800
.end_of_loop
.swstall jump_to_loop_end
	  9392      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9393      "00000000" // /* MW 15 */
	  9394      "00000000" // /* MW 14 */
	  9395      "00000000" // /* MW 13 */
	  9396      "00000000" // /* MW 12 */
	  9397      "00000000" // /* MW 11 */
	  9398      "00000000" // /* MW 10 */
	  9399      "00000000" // /* MW 9 */
	  9400      "00000000" // /* MW 8 */
	  9401      "00000000" // /* MW 7 */
	  9402      "00000000" // /* MW 6 */
	  9403      "00000000" // /* MW 5 */
	  9404      "00000000" // /* MW 4 */
	  9405      "00000000" // /* MW 3 */
	  9406      "00000000" // /* MW 2 */
	  9407      "00000000" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
.loop_nesting 0
	  9408      "00111111" // 	VLDA vrl2, [sp, #-128];NOP;             NOP;                                                        MOV.s20 r9, #-1000;           NOP /* MW 12 */
	  9409      "00011000" // /* MW 11 */
	  9410      "01111100" // /* MW 10 */
	  9411      "11111110" // /* MW 9 */
	  9412      "00000011" // /* MW 8 */
	  9413      "00000000" // /* MW 7 */
	  9414      "00000000" // /* MW 6 */
	  9415      "00010000" // /* MW 5 */
	  9416      "00000000" // /* MW 4 */
	  9417      "00000000" // /* MW 3 */
	  9418      "11111110" // /* MW 2 */
	  9419      "10101000" // /* MW 1 */
	  9420      "11110111" // 	                                        NOP;                                                        LDA.SPIL r10, [sp, #-16];     NOP /* MW 8 */
	  9421      "01100111" // /* MW 7 */
	  9422      "11111110" // /* MW 6 */
	  9423      "11101011" // /* MW 5 */
	  9424      "11000111" // /* MW 4 */
	  9425      "00000000" // /* MW 3 */
	  9426      "00000000" // /* MW 2 */
	  9427      "10000000" // /* MW 1 */
.noswbrkpt
	  9428      "11110111" // 	                                        NOP;                                                        LDA.SPIL r11, [sp, #-12];     NOP /* MW 8 */
	  9429      "11100111" // /* MW 7 */
	  9430      "11111110" // /* MW 6 */
	  9431      "11101111" // /* MW 5 */
	  9432      "11000111" // /* MW 4 */
	  9433      "00000000" // /* MW 3 */
	  9434      "00000000" // /* MW 2 */
	  9435      "10000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 197
.nohwbrkpt
.noswbrkpt
	  9436      "00111111" // 	NOP;                LDB r4, [sp, #-20]; NOP;                                                        MOV.s20 r11, #-2432;          NOP /* MW 12 */
	  9437      "10000000" // /* MW 11 */
	  9438      "11110110" // /* MW 10 */
	  9439      "11111110" // /* MW 9 */
	  9440      "00000011" // /* MW 8 */
	  9441      "00000000" // /* MW 7 */
	  9442      "00000000" // /* MW 6 */
	  9443      "01110000" // /* MW 5 */
	  9444      "11111111" // /* MW 4 */
	  9445      "00110100" // /* MW 3 */
	  9446      "00000000" // /* MW 2 */
	  9447      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 197
.nohwbrkpt
.noswbrkpt
	  9448      "01110111" // 	LDA p6, [sp, #-4];                                                    NOP;                          MOV m0, r11 /* MW 8 */
	  9449      "00000000" // /* MW 7 */
	  9450      "00000000" // /* MW 6 */
	  9451      "00000000" // /* MW 5 */
	  9452      "10111000" // /* MW 4 */
	  9453      "11000111" // /* MW 3 */
	  9454      "11111111" // /* MW 2 */
	  9455      "01101110" // /* MW 1 */
	  9456      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-8];       NOP /* MW 8 */
	  9457      "01100111" // /* MW 7 */
	  9458      "11111111" // /* MW 6 */
	  9459      "10111111" // /* MW 5 */
	  9460      "11000111" // /* MW 4 */
	  9461      "00000000" // /* MW 3 */
	  9462      "00000000" // /* MW 2 */
	  9463      "10000000" // /* MW 1 */
	  9464      "00000001" // 	NOP /* MW 2 */
	  9465      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 197 first
	  9466      "00000001" // 	RET lr /* MW 2 */
	  9467      "00000001" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23 first
.delay_slot
	  9468      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[0], r9 /* MW 4 */
	  9469      "00011000" // /* MW 3 */
	  9470      "00111010" // /* MW 2 */
	  9471      "00100011" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  9472      "00000011" // 	NOP;                                                                                                VUPD.32 vrl2[1], r9 /* MW 4 */
	  9473      "00011000" // /* MW 3 */
	  9474      "00111010" // /* MW 2 */
	  9475      "00101011" // /* MW 1 */
.src_ref 5 "vector.hpp" 691 23
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  9476      "01110111" // 	NOP;                                                                  MOV.s12 r8, #-1234;           VUPD.32 vrl2[2], r9 /* MW 8 */
	  9477      "01110000" // /* MW 7 */
	  9478      "10010111" // /* MW 6 */
	  9479      "00001101" // /* MW 5 */
	  9480      "10011101" // /* MW 4 */
	  9481      "00011001" // /* MW 3 */
	  9482      "00000000" // /* MW 2 */
	  9483      "00000000" // /* MW 1 */
.src_ref 3 "my_kernel_1.cpp" 197 first
.src_ref 5 "vector.hpp" 691 23
.delay_slot
	  9484      "01110111" // 	PADDA [sp], m0;                                                       NOP;                          VUPD.32 vrl2[3], r8 /* MW 8 */
	  9485      "00000000" // /* MW 7 */
	  9486      "00000000" // /* MW 6 */
	  9487      "00000000" // /* MW 5 */
	  9488      "10001101" // /* MW 4 */
	  9489      "00011101" // /* MW 3 */
	  9490      "10010000" // /* MW 2 */
	  9491      "00001000" // /* MW 1 */
.src_ref 4 "stream_utils.h" 213 8 first
.delay_slot
	  9492      "01110111" // 	NOP;                                    NOP;                                                                                      VMOV1 WMS.md0[10], vrl2, #0 /* MW 8 */
	  9493      "00000000" // /* MW 7 */
	  9494      "00000000" // /* MW 6 */
	  9495      "00110000" // /* MW 5 */
	  9496      "00100000" // /* MW 4 */
	  9497      "00000001" // /* MW 3 */
	  9498      "00000000" // /* MW 2 */
.label _Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE__end
.label __Z18my_kernel_functionP12input_streamIhES1_P13output_streamIiE___func_end0
	  9499      "00000000" // /* MW 1 */
.label _fini
.function _fini _fini
.src_ref 0 "me_basic.c" 73 4 first
.src_ref 0 "me_basic.c" 73 9
.function_start
	  9504      "01110111" // 	NOP;                                                                  MOV.s12 m0, #32;              MOV r5, r11 /* MW 8 */
	  9505      "01000000" // /* MW 7 */
	  9506      "00010000" // /* MW 6 */
	  9507      "01001000" // /* MW 5 */
	  9508      "10111101" // /* MW 4 */
	  9509      "00000111" // /* MW 3 */
	  9510      "00000000" // /* MW 2 */
	  9511      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 73 9
	  9512      "00111111" // 	PADDA [sp], m0;     NOP;                NOP;                                                        J #9616;                      NOP /* MW 12 */
	  9513      "10010000" // /* MW 11 */
	  9514      "00100101" // /* MW 10 */
	  9515      "00000000" // /* MW 9 */
	  9516      "00001010" // /* MW 8 */
	  9517      "00000000" // /* MW 7 */
	  9518      "00000000" // /* MW 6 */
	  9519      "00010000" // /* MW 5 */
	  9520      "00000000" // /* MW 4 */
	  9521      "00000000" // /* MW 3 */
	  9522      "10010000" // /* MW 2 */
	  9523      "00001000" // /* MW 1 */
.delay_slot
	  9524      "00000011" // 	NOP;                                                                                                MOV r0, r4 /* MW 4 */
	  9525      "00011000" // /* MW 3 */
	  9526      "10011000" // /* MW 2 */
	  9527      "00001110" // /* MW 1 */
.delay_slot
	  9528      "11110111" // 	                                        ST lr, [sp, #-16];            NOP;                          MOV p0, p7 /* MW 8 */
	  9529      "11010000" // /* MW 7 */
	  9530      "00110111" // /* MW 6 */
	  9531      "00000000" // /* MW 5 */
	  9532      "00000000" // /* MW 4 */
	  9533      "11000000" // /* MW 3 */
	  9534      "00111111" // /* MW 2 */
	  9535      "01010010" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 41
.delay_slot
	  9536      "11110111" // 	                                        ST p0, [sp, #-12];                                          MOV.u20 r4, #0;               NOP /* MW 8 */
	  9537      "00000111" // /* MW 7 */
	  9538      "00000000" // /* MW 6 */
	  9539      "11010000" // /* MW 5 */
	  9540      "01000000" // /* MW 4 */
	  9541      "11101000" // /* MW 3 */
	  9542      "00011111" // /* MW 2 */
	  9543      "10101101" // /* MW 1 */
.src_ref 0 "me_basic.c" 76 13
.delay_slot
	  9544      "11110111" // 	                                        ST r0, [sp, #-4];                                           MOV.u20 p7, #0;               NOP /* MW 8 */
	  9545      "00000111" // /* MW 7 */
	  9546      "00000000" // /* MW 6 */
	  9547      "10111100" // /* MW 5 */
	  9548      "01000000" // /* MW 4 */
	  9549      "11111000" // /* MW 3 */
	  9550      "00011111" // /* MW 2 */
	  9551      "10101110" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 41
.delay_slot
	  9552      "00000000" // 	NOP;                NOP;                ST r5, [sp, #-8];             NOP;                          MOV.u20 r11, #0;              NOP;                                    NOP /* MW 16 */
	  9553      "00000000" // /* MW 15 */
	  9554      "00000000" // /* MW 14 */
	  9555      "00000000" // /* MW 13 */
	  9556      "10000000" // /* MW 12 */
	  9557      "00000000" // /* MW 11 */
	  9558      "11000000" // /* MW 10 */
	  9559      "00001110" // /* MW 9 */
	  9560      "00000100" // /* MW 8 */
	  9561      "11111110" // /* MW 7 */
	  9562      "11010111" // /* MW 6 */
	  9563      "00010101" // /* MW 5 */
	  9564      "00000000" // /* MW 4 */
	  9565      "00000000" // /* MW 3 */
	  9566      "00000000" // /* MW 2 */
	  9567      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.src_ref 0 "me_basic.c" 76 13 first
.loop_nesting 1
	  9568      "00110111" // 	LDA cb0, [p7], #4;                      NOP;                          NOP /* MW 8 */
	  9569      "00000000" // /* MW 7 */
	  9570      "00000000" // /* MW 6 */
	  9571      "00000000" // /* MW 5 */
	  9572      "00000000" // /* MW 4 */
	  9573      "11000000" // /* MW 3 */
	  9574      "10100011" // /* MW 2 */
	  9575      "01000000" // /* MW 1 */
	  9576      "00000001" // 	NOP /* MW 2 */
	  9577      "00000000" // /* MW 1 */
	  9578      "00000001" // 	NOP /* MW 2 */
	  9579      "00000000" // /* MW 1 */
	  9580      "00000001" // 	NOP /* MW 2 */
	  9581      "00000000" // /* MW 1 */
	  9582      "00000001" // 	NOP /* MW 2 */
	  9583      "00000000" // /* MW 1 */
	  9584      "00000001" // 	NOP /* MW 2 */
	  9585      "00000000" // /* MW 1 */
	  9586      "00000001" // 	NOP /* MW 2 */
	  9587      "00000000" // /* MW 1 */
	  9588      "00000001" // 	NOP /* MW 2 */
	  9589      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 76 16
.no_stack_arguments
	  9590      "01000001" // 	JAL cb0 /* MW 2 */
	  9591      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 41
.delay_slot
	  9592      "10110101" // 	MOV r11, p7 /* MW 2 */
	  9593      "10111111" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9594      "00000001" // 	NOP /* MW 2 */
	  9595      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9596      "00000001" // 	NOP /* MW 2 */
	  9597      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9598      "00000001" // 	NOP /* MW 2 */
	  9599      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9600      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  9601      "00000000" // /* MW 15 */
	  9602      "00000000" // /* MW 14 */
	  9603      "00000000" // /* MW 13 */
	  9604      "00000000" // /* MW 12 */
	  9605      "00000000" // /* MW 11 */
	  9606      "00000000" // /* MW 10 */
	  9607      "00000000" // /* MW 9 */
	  9608      "00000000" // /* MW 8 */
	  9609      "00000000" // /* MW 7 */
	  9610      "00000000" // /* MW 6 */
	  9611      "00000000" // /* MW 5 */
	  9612      "00000000" // /* MW 4 */
	  9613      "00000000" // /* MW 3 */
	  9614      "00000000" // /* MW 2 */
	  9615      "00000000" // /* MW 1 */
.label __ll1__fini
.src_ref 0 "me_basic.c" 75 41 first
.return_address
	  9616      "00000011" // 	NOP;                                                                  NE r12, r4, r11 /* MW 4 */
	  9617      "11000000" // /* MW 3 */
	  9618      "10110100" // /* MW 2 */
	  9619      "00111001" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 8
	  9620      "11110111" // 	                                        NOP;                                                        BNEZ r12,#9568;               NOP /* MW 8 */
	  9621      "00000111" // /* MW 7 */
	  9622      "01010110" // /* MW 6 */
	  9623      "10000010" // /* MW 5 */
	  9624      "10010001" // /* MW 4 */
	  9625      "00000000" // /* MW 3 */
	  9626      "00000000" // /* MW 2 */
	  9627      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9628      "00000001" // 	NOP /* MW 2 */
	  9629      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9630      "00000001" // 	NOP /* MW 2 */
	  9631      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9632      "00000001" // 	NOP /* MW 2 */
	  9633      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9634      "00000001" // 	NOP /* MW 2 */
	  9635      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9636      "00000001" // 	NOP /* MW 2 */
	  9637      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4
.loop_nesting 0
	  9638      "00000011" // 	NOP;                LDB lr, [sp, #-16] /* MW 4 */
	  9639      "00111000" // /* MW 3 */
	  9640      "11111111" // /* MW 2 */
	  9641      "01011000" // /* MW 1 */
	  9642      "11110111" // 	                                        NOP;                                                        LDA.SPIL r11, [sp, #-8];      NOP /* MW 8 */
	  9643      "01100111" // /* MW 7 */
	  9644      "11111111" // /* MW 6 */
	  9645      "11101111" // /* MW 5 */
	  9646      "11000111" // /* MW 4 */
	  9647      "00000000" // /* MW 3 */
	  9648      "00000000" // /* MW 2 */
	  9649      "10000000" // /* MW 1 */
	  9650      "11110111" // 	                                        NOP;                                                        LDA.SPIL r4, [sp, #-4];       NOP /* MW 8 */
	  9651      "11100111" // /* MW 7 */
	  9652      "11111111" // /* MW 6 */
	  9653      "11010011" // /* MW 5 */
	  9654      "11000111" // /* MW 4 */
	  9655      "00000000" // /* MW 3 */
	  9656      "00000000" // /* MW 2 */
	  9657      "10000000" // /* MW 1 */
	  9658      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-12];      NOP /* MW 8 */
	  9659      "11100111" // /* MW 7 */
	  9660      "11111110" // /* MW 6 */
	  9661      "10111111" // /* MW 5 */
	  9662      "11000111" // /* MW 4 */
	  9663      "00000000" // /* MW 3 */
	  9664      "00000000" // /* MW 2 */
	  9665      "10000000" // /* MW 1 */
	  9666      "00000001" // 	NOP /* MW 2 */
	  9667      "00000000" // /* MW 1 */
	  9668      "00000001" // 	NOP /* MW 2 */
	  9669      "00000000" // /* MW 1 */
	  9670      "00000001" // 	NOP /* MW 2 */
	  9671      "00000000" // /* MW 1 */
	  9672      "00000001" // 	NOP /* MW 2 */
	  9673      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4 first
	  9674      "00000001" // 	RET lr /* MW 2 */
	  9675      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9676      "00000001" // 	NOP /* MW 2 */
	  9677      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9678      "00000001" // 	NOP /* MW 2 */
	  9679      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4
.delay_slot
	  9680      "00000011" // 	NOP;                                                                  MOV.s12 m0, #-32 /* MW 4 */
	  9681      "00000000" // /* MW 3 */
	  9682      "10000010" // /* MW 2 */
	  9683      "01111111" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4
.delay_slot
	  9684      "00110111" // 	PADDA [sp], m0;                         NOP;                          NOP /* MW 8 */
	  9685      "00000000" // /* MW 7 */
	  9686      "00000000" // /* MW 6 */
	  9687      "00000000" // /* MW 5 */
	  9688      "00000000" // /* MW 4 */
	  9689      "00000000" // /* MW 3 */
	  9690      "10010000" // /* MW 2 */
	  9691      "00001000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9692      "00000001" // 	NOP /* MW 2 */
.label _fini__end
	  9693      "00000000" // /* MW 1 */
.label __cxa_finalize
.function __cxa_finalize __cxa_finalize
.src_ref 8 "atexit.c" 47 first
.src_ref 8 "atexit.c" 52 14
.src_ref 8 "atexit.c" 53 4
.src_ref 8 "atexit.c" 53 4
.src_ref 8 "atexit.c" 55 15
.function_start
	  9696      "00111111" // 	NOP;                MOV.s9 r8, #-3;                                   MOV.s12 r12, #8;              MOV.u20 p0, #233568;          NOP /* MW 12 */
	  9697      "01100000" // /* MW 11 */
	  9698      "00010000" // /* MW 10 */
	  9699      "11101010" // /* MW 9 */
	  9700      "00000100" // /* MW 8 */
	  9701      "01111000" // /* MW 7 */
	  9702      "00000100" // /* MW 6 */
	  9703      "10101000" // /* MW 5 */
	  9704      "11111111" // /* MW 4 */
	  9705      "00011000" // /* MW 3 */
	  9706      "00000000" // /* MW 2 */
	  9707      "00000000" // /* MW 1 */
.src_ref 8 "atexit.c" 52 14 first
.src_ref 8 "atexit.c" 56 37
	  9708      "00111111" // 	LDA r9, [p0];       NOP;                NOP;                                                        MOV.u20 p6, #233536;          NOP /* MW 12 */
	  9709      "01000000" // /* MW 11 */
	  9710      "10010000" // /* MW 10 */
	  9711      "11101011" // /* MW 9 */
	  9712      "00000100" // /* MW 8 */
	  9713      "00000000" // /* MW 7 */
	  9714      "00000000" // /* MW 6 */
	  9715      "00010000" // /* MW 5 */
	  9716      "00000000" // /* MW 4 */
	  9717      "00000000" // /* MW 3 */
	  9718      "11010000" // /* MW 2 */
	  9719      "01111001" // /* MW 1 */
.src_ref 8 "atexit.c" 53 4 first
.src_ref 8 "atexit.c" 68
	  9720      "11110111" // 	                                        ST r12, [p0];                 NOP;                          MOV r10, lr /* MW 8 */
	  9721      "10110100" // /* MW 7 */
	  9722      "00000010" // /* MW 6 */
	  9723      "00000001" // /* MW 5 */
	  9724      "00000000" // /* MW 4 */
	  9725      "00000000" // /* MW 3 */
	  9726      "00110100" // /* MW 2 */
	  9727      "01011111" // /* MW 1 */
	  9728      "00000001" // 	NOP /* MW 2 */
	  9729      "00000000" // /* MW 1 */
	  9730      "00000001" // 	NOP /* MW 2 */
	  9731      "00000000" // /* MW 1 */
	  9732      "00000001" // 	NOP /* MW 2 */
	  9733      "00000000" // /* MW 1 */
	  9734      "00000001" // 	NOP /* MW 2 */
	  9735      "00000000" // /* MW 1 */
	  9736      "00000001" // 	NOP /* MW 2 */
	  9737      "00000000" // /* MW 1 */
	  9738      "00000001" // 	NOP /* MW 2 */
	  9739      "00000000" // /* MW 1 */
.src_ref 8 "atexit.c" 54 8 first
	  9740      "00000011" // 	NOP;                                                                  ADD r9, r9, #-8 /* MW 4 */
	  9741      "10010000" // /* MW 3 */
	  9742      "10001001" // /* MW 2 */
	  9743      "00100111" // /* MW 1 */
.src_ref 8 "atexit.c" 55 15 first
.src_ref 8 "atexit.c" 56 37
	  9744      "01110111" // 	NOP;                                                                  ASHL r11, r9, r8;             MOV m0, r9 /* MW 8 */
	  9745      "00110110" // /* MW 7 */
	  9746      "11110001" // /* MW 6 */
	  9747      "00000111" // /* MW 5 */
	  9748      "10011000" // /* MW 4 */
	  9749      "00000111" // /* MW 3 */
	  9750      "00000000" // /* MW 2 */
	  9751      "00000000" // /* MW 1 */
.src_ref 8 "atexit.c" 56 37 first
	  9752      "00000011" // 	NOP;                                    PADDS [p6], m0 /* MW 4 */
	  9753      "00110000" // /* MW 3 */
	  9754      "00010000" // /* MW 2 */
	  9755      "10100000" // /* MW 1 */
	  9756      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  9757      "00000000" // /* MW 3 */
	  9758      "00000000" // /* MW 2 */
	  9759      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.src_ref 8 "atexit.c" 65 18 first
.loop_nesting 1
	  9760      "00110111" // 	LDA cb0, [p6], #4;                      NOP;                          NOP /* MW 8 */
	  9761      "00000000" // /* MW 7 */
	  9762      "00000000" // /* MW 6 */
	  9763      "00000000" // /* MW 5 */
	  9764      "00000000" // /* MW 4 */
	  9765      "10000000" // /* MW 3 */
	  9766      "10100011" // /* MW 2 */
	  9767      "01000000" // /* MW 1 */
.src_ref 8 "atexit.c" 65 35
	  9768      "00110111" // 	LDA p0, [p6], #-12;                     NOP;                          NOP /* MW 8 */
	  9769      "00000000" // /* MW 7 */
	  9770      "00000000" // /* MW 6 */
	  9771      "00000000" // /* MW 5 */
	  9772      "00000000" // /* MW 4 */
	  9773      "10000000" // /* MW 3 */
	  9774      "10111011" // /* MW 2 */
	  9775      "01101000" // /* MW 1 */
	  9776      "00000001" // 	NOP /* MW 2 */
	  9777      "00000000" // /* MW 1 */
	  9778      "00000001" // 	NOP /* MW 2 */
	  9779      "00000000" // /* MW 1 */
	  9780      "00000001" // 	NOP /* MW 2 */
	  9781      "00000000" // /* MW 1 */
	  9782      "00000001" // 	NOP /* MW 2 */
	  9783      "00000000" // /* MW 1 */
	  9784      "00000001" // 	NOP /* MW 2 */
	  9785      "00000000" // /* MW 1 */
	  9786      "00000001" // 	NOP /* MW 2 */
	  9787      "00000000" // /* MW 1 */
.src_ref 8 "atexit.c" 65 24
.no_stack_arguments
	  9788      "01000001" // 	JAL cb0 /* MW 2 */
	  9789      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9790      "00000001" // 	NOP /* MW 2 */
	  9791      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9792      "00000001" // 	NOP /* MW 2 */
	  9793      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9794      "00000001" // 	NOP /* MW 2 */
	  9795      "00000000" // /* MW 1 */
.delay_slot
	  9796      "00000011" // 	NOP;                                                                                                MOV r4, r0 /* MW 4 */
	  9797      "00011000" // /* MW 3 */
	  9798      "00011010" // /* MW 2 */
	  9799      "00001110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9800      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	  9801      "00000000" // /* MW 7 */
	  9802      "00000000" // /* MW 6 */
	  9803      "00000000" // /* MW 5 */
	  9804      "00000000" // /* MW 4 */
	  9805      "00000000" // /* MW 3 */
	  9806      "00000000" // /* MW 2 */
	  9807      "00000000" // /* MW 1 */
.src_ref 8 "atexit.c" 62 4
.return_address
	  9808      "11110111" // 	                                        NOP;                                                        MOV.u20 cb0, #9760;           NOP /* MW 8 */
	  9809      "00000111" // /* MW 7 */
	  9810      "01100010" // /* MW 6 */
	  9811      "01000010" // /* MW 5 */
	  9812      "01000000" // /* MW 4 */
	  9813      "00000000" // /* MW 3 */
	  9814      "00000000" // /* MW 2 */
	  9815      "10000000" // /* MW 1 */
.src_ref 8 "atexit.c" 62 4 first
	  9816      "00000011" // 	NOP;                                                                  BDEC r11, r11, cb0 /* MW 4 */
	  9817      "10110000" // /* MW 3 */
	  9818      "10001011" // /* MW 2 */
	  9819      "00000011" // /* MW 1 */
.delay_slot
	  9820      "00000101" // 	MOV r0, r4 /* MW 2 */
	  9821      "11010011" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9822      "00000001" // 	NOP /* MW 2 */
	  9823      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9824      "00000001" // 	NOP /* MW 2 */
	  9825      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9826      "00000001" // 	NOP /* MW 2 */
	  9827      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9828      "00000001" // 	NOP /* MW 2 */
	  9829      "00000000" // /* MW 1 */
.src_ref 8 "atexit.c" 68
.loop_nesting 0
	  9830      "01100001" // 	MOV lr, r10 /* MW 2 */
	  9831      "10100001" // /* MW 1 */
.src_ref 8 "atexit.c" 68 first
	  9832      "00000001" // 	RET lr /* MW 2 */
	  9833      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9834      "00000001" // 	NOP /* MW 2 */
	  9835      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9836      "00000001" // 	NOP /* MW 2 */
	  9837      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9838      "00000001" // 	NOP /* MW 2 */
	  9839      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9840      "00000001" // 	NOP /* MW 2 */
	  9841      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  9842      "00000001" // 	NOP /* MW 2 */
.label __cxa_finalize__end
	  9843      "00000000" // /* MW 1 */
.dir 0 "%PROCDIR%"
.dir 1 "%PROCDIR%/runtime/include"
.dir 2 "/home/users/edoardo.dalessio/code/av_omega/VersalAutomationTemplate/aie/Work/aie/24_0/src"
.dir 3 "/home/users/edoardo.dalessio/code/av_omega/VersalAutomationTemplate/aie/src"
.dir 4 "/home/xilinx/software/Vitis/2022.2/aietools/include/adf/stream/me"
.dir 5 "/home/xilinx/software/Vitis/2022.2/aietools/include/aie_api/detail/aie1"
.dir 6 "/home/xilinx/software/Vitis/2022.2/aietools/include/aie_api/detail"
.dir 7 "/home/xilinx/software/Vitis/2022.2/aietools/include/aie_api"
.dir 8 "%PROCDIR%/runtime/src"
