// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sink_from_aie_sink_from_aie_Pipeline_VITIS_LOOP_78_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_stream_TVALID,
        input_stream_TDATA,
        input_stream_TREADY,
        joint_address0,
        joint_ce0,
        joint_we0,
        joint_d0,
        joint_q0,
        h2_address0,
        h2_ce0,
        h2_we0,
        h2_d0,
        h2_q0,
        h1_address0,
        h1_ce0,
        h1_we0,
        h1_d0,
        h1_q0,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   input_stream_TVALID;
input  [31:0] input_stream_TDATA;
output   input_stream_TREADY;
output  [15:0] joint_address0;
output   joint_ce0;
output   joint_we0;
output  [31:0] joint_d0;
input  [31:0] joint_q0;
output  [7:0] h2_address0;
output   h2_ce0;
output   h2_we0;
output  [31:0] h2_d0;
input  [31:0] h2_q0;
output  [7:0] h1_address0;
output   h1_ce0;
output   h1_we0;
output  [31:0] h1_d0;
input  [31:0] h1_q0;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg input_stream_TREADY;
reg[15:0] joint_address0;
reg joint_ce0;
reg joint_we0;
reg[7:0] h2_address0;
reg h2_ce0;
reg h2_we0;
reg[7:0] h1_address0;
reg h1_ce0;
reg h1_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln82_fu_110_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state4;
reg   [0:0] icmp_ln82_reg_210;
reg   [0:0] tmp_reg_214;
reg    ap_predicate_op45_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    input_stream_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [31:0] i_1_reg_201;
wire   [31:0] grp_read_fu_52_p2;
reg   [31:0] reg_97;
reg    ap_predicate_op38_read_state3;
reg    ap_predicate_op41_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
wire   [7:0] trunc_ln82_fu_106_p1;
reg   [7:0] trunc_ln82_reg_205;
wire   [0:0] tmp_fu_116_p3;
reg   [15:0] joint_addr_reg_218;
reg    ap_predicate_op24_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg   [7:0] h2_addr_reg_223;
reg   [7:0] h1_addr_reg_228;
reg   [31:0] joint_load_reg_233;
reg   [31:0] h2_load_reg_238;
reg   [31:0] h1_load_reg_243;
wire   [63:0] zext_ln89_1_fu_162_p1;
wire   [63:0] zext_ln89_fu_147_p1;
wire   [63:0] zext_ln98_fu_170_p1;
reg   [31:0] i_fu_48;
wire   [31:0] i_2_fu_129_p2;
wire    ap_loop_init;
wire   [15:0] tmp_1_fu_140_p3;
wire   [15:0] trunc_ln89_fu_152_p1;
wire   [15:0] add_ln89_1_fu_156_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_str_blocking_cur_n;
wire    ap_start_int;
reg    ap_condition_105;
reg    ap_condition_168;
reg    ap_condition_269;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_done_reg = 1'b0;
end

sink_from_aie_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_269)) begin
        if ((1'b1 == ap_condition_168)) begin
            i_fu_48 <= i_2_fu_129_p2;
        end else if (((icmp_ln82_fu_110_p2 == 1'd0) & (tmp_fu_116_p3 == 1'd0))) begin
            i_fu_48 <= input_stream_TDATA;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_48 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & ~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        h1_addr_reg_228 <= zext_ln98_fu_170_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & ~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        h1_load_reg_243 <= h1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        h2_addr_reg_223 <= zext_ln89_fu_147_p1;
        joint_addr_reg_218 <= zext_ln89_1_fu_162_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        h2_load_reg_238 <= h2_q0;
        joint_load_reg_233 <= joint_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_1_reg_201 <= input_stream_TDATA;
        icmp_ln82_reg_210 <= icmp_ln82_fu_110_p2;
        trunc_ln82_reg_205 <= trunc_ln82_fu_106_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op41_read_state3 == 1'b1)) | (~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op38_read_state3 == 1'b1)))) begin
        reg_97 <= input_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (icmp_ln82_fu_110_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_214 <= input_stream_TDATA[32'd31];
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)))) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (icmp_ln82_fu_110_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_105)) begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            h1_address0 = h1_addr_reg_228;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            h1_address0 = zext_ln98_fu_170_p1;
        end else begin
            h1_address0 = 'bx;
        end
    end else begin
        h1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & ~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & ~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        h1_ce0 = 1'b1;
    end else begin
        h1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & ~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        h1_we0 = 1'b1;
    end else begin
        h1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0))) begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            h2_address0 = h2_addr_reg_223;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            h2_address0 = zext_ln89_fu_147_p1;
        end else begin
            h2_address0 = 'bx;
        end
    end else begin
        h2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        h2_ce0 = 1'b1;
    end else begin
        h2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        h2_we0 = 1'b1;
    end else begin
        h2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op45_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | (~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        input_stream_TDATA_blk_n = input_stream_TVALID;
    end else begin
        input_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (ap_predicate_op45_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (ap_predicate_op24_read_state2 == 1'b1)) | (~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op41_read_state3 == 1'b1)) | (~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op38_read_state3 == 1'b1)))) begin
        input_stream_TREADY = 1'b1;
    end else begin
        input_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0))) begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            joint_address0 = joint_addr_reg_218;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            joint_address0 = zext_ln89_1_fu_162_p1;
        end else begin
            joint_address0 = 'bx;
        end
    end else begin
        joint_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        joint_ce0 = 1'b1;
    end else begin
        joint_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        joint_we0 = 1'b1;
    end else begin
        joint_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (icmp_ln82_fu_110_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln89_1_fu_156_p2 = (tmp_1_fu_140_p3 + trunc_ln89_fu_152_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((input_stream_TVALID == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((input_stream_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1)) | ((input_stream_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((ap_predicate_op45_read_state4 == 1'b1) & (input_stream_TVALID == 1'b0));
end

always @ (*) begin
    ap_condition_105 = (~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0));
end

always @ (*) begin
    ap_condition_168 = (~(grp_read_fu_52_p2 == 32'd4294966295) & ~(grp_read_fu_52_p2 == 32'd4294966296) & (icmp_ln82_fu_110_p2 == 1'd0) & (tmp_fu_116_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_269 = (~((ap_start_int == 1'b0) | (input_stream_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state1));
end

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op24_read_state2 = ((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0));
end

always @ (*) begin
    ap_predicate_op38_read_state3 = ((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0));
end

always @ (*) begin
    ap_predicate_op41_read_state3 = (~(i_1_reg_201 == 32'd4294966296) & (tmp_reg_214 == 1'd1) & (icmp_ln82_reg_210 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_read_state4 = ((tmp_reg_214 == 1'd0) & (icmp_ln82_reg_210 == 1'd0));
end

assign ap_str_blocking_cur_n = input_stream_TDATA_blk_n;

assign ap_str_blocking_n = (ap_str_blocking_cur_n & 1'b1);

assign grp_read_fu_52_p2 = input_stream_TDATA;

assign h1_d0 = (h1_load_reg_243 + reg_97);

assign h2_d0 = (h2_load_reg_238 + input_stream_TDATA);

assign i_2_fu_129_p2 = (input_stream_TDATA ^ 32'd4294967295);

assign icmp_ln82_fu_110_p2 = ((input_stream_TDATA == 32'd4294966062) ? 1'b1 : 1'b0);

assign joint_d0 = (joint_load_reg_233 + reg_97);

assign tmp_1_fu_140_p3 = {{trunc_ln82_reg_205}, {8'd0}};

assign tmp_fu_116_p3 = input_stream_TDATA[32'd31];

assign trunc_ln82_fu_106_p1 = input_stream_TDATA[7:0];

assign trunc_ln89_fu_152_p1 = input_stream_TDATA[15:0];

assign zext_ln89_1_fu_162_p1 = add_ln89_1_fu_156_p2;

assign zext_ln89_fu_147_p1 = input_stream_TDATA;

assign zext_ln98_fu_170_p1 = i_fu_48;

endmodule //sink_from_aie_sink_from_aie_Pipeline_VITIS_LOOP_78_3
